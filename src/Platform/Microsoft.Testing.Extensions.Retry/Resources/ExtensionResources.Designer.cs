//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Testing.Extensions.Policy.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExtensionResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExtensionResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Testing.Extensions.Policy.Resources.ExtensionResources", typeof(ExtensionResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create retries directory due to collisions in &apos;{0}&apos; despite re-trying..
        /// </summary>
        internal static string FailedToCreateRetryDirectoryBecauseOfCollision {
            get {
                return ResourceManager.GetString("FailedToCreateRetryDirectoryBecauseOfCollision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failure threshold policy is enabled, failed tests will not be restarted..
        /// </summary>
        internal static string FailureThresholdPolicy {
            get {
                return ResourceManager.GetString("FailureThresholdPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum failed tests threshold is {0} and {1} tests failed.
        /// </summary>
        internal static string FailureThresholdPolicyMaxCount {
            get {
                return ResourceManager.GetString("FailureThresholdPolicyMaxCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Percentage failed threshold is {0}% and {1}% tests failed ({2}/{3}).
        /// </summary>
        internal static string FailureThresholdPolicyMaxPercentage {
            get {
                return ResourceManager.GetString("FailureThresholdPolicyMaxPercentage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///=====================
        ///Moving last attempt asset files to the default result directory
        ///=====================
        ///.
        /// </summary>
        internal static string MoveFiles {
            get {
                return ResourceManager.GetString("MoveFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moving file &apos;{0}&apos; to &apos;{1}&apos;.
        /// </summary>
        internal static string MovingFileToLocation {
            get {
                return ResourceManager.GetString("MovingFileToLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start process &apos;{0}&apos;.
        /// </summary>
        internal static string RetryFailedTestsCannotStartProcessErrorMessage {
            get {
                return ResourceManager.GetString("RetryFailedTestsCannotStartProcessErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry failed tests feature allows to restart test execution upon failure..
        /// </summary>
        internal static string RetryFailedTestsExtensionDescription {
            get {
                return ResourceManager.GetString("RetryFailedTestsExtensionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry failed tests.
        /// </summary>
        internal static string RetryFailedTestsExtensionDisplayName {
            get {
                return ResourceManager.GetString("RetryFailedTestsExtensionDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry failed tests only works with builders of type &apos;Microsoft.Testing.Platform.Builder.TestApplicationBuilder&apos;.
        /// </summary>
        internal static string RetryFailedTestsInvalidTestApplicationBuilderErrorMessage {
            get {
                return ResourceManager.GetString("RetryFailedTestsInvalidTestApplicationBuilderErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable retry mechanism if the percentage of failed tests is greater than the specified value.
        /// </summary>
        internal static string RetryFailedTestsMaxPercentageOptionDescription {
            get {
                return ResourceManager.GetString("RetryFailedTestsMaxPercentageOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable retry mechanism if the number of failed tests is greater than the specified value.
        /// </summary>
        internal static string RetryFailedTestsMaxTestsOptionDescription {
            get {
                return ResourceManager.GetString("RetryFailedTestsMaxTestsOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry failed tests feature is not supported in hot reload mode.
        /// </summary>
        internal static string RetryFailedTestsNotSupportedInHotReloadErrorMessage {
            get {
                return ResourceManager.GetString("RetryFailedTestsNotSupportedInHotReloadErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry failed tests feature is not supported in server mode.
        /// </summary>
        internal static string RetryFailedTestsNotSupportedInServerModeErrorMessage {
            get {
                return ResourceManager.GetString("RetryFailedTestsNotSupportedInServerModeErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable retry failed tests.
        /// </summary>
        internal static string RetryFailedTestsOptionDescription {
            get {
                return ResourceManager.GetString("RetryFailedTestsOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{0}&apos; requires option &apos;{1}&apos; to be specified.
        /// </summary>
        internal static string RetryFailedTestsOptionIsMissingErrorMessage {
            get {
                return ResourceManager.GetString("RetryFailedTestsOptionIsMissingErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{0}&apos; expects a single integer argument.
        /// </summary>
        internal static string RetryFailedTestsOptionSingleIntegerArgumentErrorMessage {
            get {
                return ResourceManager.GetString("RetryFailedTestsOptionSingleIntegerArgumentErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options &apos;{0}&apos; and &apos;{1}&apos; cannot be used together.
        /// </summary>
        internal static string RetryFailedTestsPercentageAndCountCannotBeMixedErrorMessage {
            get {
                return ResourceManager.GetString("RetryFailedTestsPercentageAndCountCannotBeMixedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test host process exited before the retry service could connect to it. Exit code: {0}.
        /// </summary>
        internal static string TestHostProcessExitedBeforeRetryCouldConnect {
            get {
                return ResourceManager.GetString("TestHostProcessExitedBeforeRetryCouldConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///=====================
        ///Tests suite completed successfully in {0} attempts
        ///=====================.
        /// </summary>
        internal static string TestSuiteCompletedSuccessfully {
            get {
                return ResourceManager.GetString("TestSuiteCompletedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///=====================
        ///Tests suite failed, total failed tests: {0}, exit code: {1}, attempt: {2}/{3}
        ///=====================
        ///.
        /// </summary>
        internal static string TestSuiteFailed {
            get {
                return ResourceManager.GetString("TestSuiteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///=====================
        ///Tests suite failed in all {0} attempts
        ///=====================.
        /// </summary>
        internal static string TestSuiteFailedInAllAttempts {
            get {
                return ResourceManager.GetString("TestSuiteFailedInAllAttempts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test suite failed with and exit code different that 2 (failed tests). Failure related to an unexpected condition. Exit code &apos;{0}&apos;.
        /// </summary>
        internal static string TestSuiteFailedWithWrongExitCode {
            get {
                return ResourceManager.GetString("TestSuiteFailedWithWrongExitCode", resourceCulture);
            }
        }
    }
}
