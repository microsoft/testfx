<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="zh-Hant" original="../PlatformResources.resx">
    <body>
      <trans-unit id="CannotCreateTestExecutionFilterErrorMessage">
        <source>Failed to create a test execution filter</source>
        <target state="translated">無法建立測試執行篩選條件</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotCreateUniqueLogFileErrorMessage">
        <source>Failed to create a unique log file after 3 seconds. Lastly tried file name is '{0}'.</source>
        <target state="new">Failed to create a unique log file after 3 seconds. Lastly tried file name is '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotRemoveEnvironmentVariableAtThisStageErrorMessage">
        <source>Cannot remove environment variables at this stage</source>
        <target state="translated">在此階段無法移除環境變數</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotRemoveEnvironmentVariableItIsLockedErrorMessage">
        <source>Extension '{0}' tried to remove environment variable '{1}' but it was locked by extension '{2}'</source>
        <target state="translated">延伸模組 '{0}' 嘗試移除環境變數 '{1}'，但其已被延伸模組 '{2}' 封鎖</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotSetEnvironmentVariableAtThisStageErrorMessage">
        <source>Cannot set environment variables at this stage</source>
        <target state="translated">在此階段無法設定環境變數</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotSetEnvironmentVariableItIsLockedErrorMessage">
        <source>Extension '{0}' tried to set environment variable '{1}' but it was locked by extension '{2}'</source>
        <target state="translated">延伸模組 '{0}' 嘗試設定環境變數 '{1}'，但其已被延伸模組 '{2}' 封鎖</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotStartProcessErrorMessage">
        <source>Cannot start process '{0}'</source>
        <target state="translated">無法啟動流程 '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineInvalidArgumentsForOption">
        <source>Option '--{0}' has invalid arguments: {1}</source>
        <target state="new">Option '--{0}' has invalid arguments: {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineInvalidArityErrorMessage">
        <source>Invalid arity, maximum must be greater than minimum</source>
        <target state="new">Invalid arity, maximum must be greater than minimum</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineInvalidConfiguration">
        <source>Invalid configuration for provider '{0}' (UID: {1}). Error: {2}</source>
        <target state="new">Invalid configuration for provider '{0}' (UID: {1}). Error: {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineInvalidOptionName">
        <source>Invalid option name '{0}', it must contain only letter and '-' (e.g. my-option)</source>
        <target state="new">Invalid option name '{0}', it must contain only letter and '-' (e.g. my-option)</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineOptionExpectsAtLeastArguments">
        <source>Option '--{0}' from provider '{1}' (UID: {2}) expects at least {3} arguments</source>
        <target state="new">Option '--{0}' from provider '{1}' (UID: {2}) expects at least {3} arguments</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineOptionExpectsAtMostArguments">
        <source>Option '--{0}' from provider '{1}' (UID: {2}) expects at most {3} arguments</source>
        <target state="new">Option '--{0}' from provider '{1}' (UID: {2}) expects at most {3} arguments</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineOptionExpectsNoArguments">
        <source>Option '--{0}' from provider '{1}' (UID: {2}) expects no arguments</source>
        <target state="new">Option '--{0}' from provider '{1}' (UID: {2}) expects no arguments</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineOptionIsDeclaredByMultipleProviders">
        <source>Option '--{0}' is declared by multiple extensions: '{0}'</source>
        <target state="new">Option '--{0}' is declared by multiple extensions: '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineOptionIsDeclaredByMultipleProvidersWorkaround">
        <source>You can fix the previous option clash by overriding the option name using the configuration file</source>
        <target state="new">You can fix the previous option clash by overriding the option name using the configuration file</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineOptionIsReserved">
        <source>Option '--{0}' is reserved and cannot be used by providers: '{0}'</source>
        <target state="new">Option '--{0}' is reserved and cannot be used by providers: '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineOptionIsUsingReservedPrefix">
        <source>Option `--{0}` from provider '{1}' (UID: {2}) is using the reserved prefix '--internal'</source>
        <target state="new">Option `--{0}` from provider '{1}' (UID: {2}) is using the reserved prefix '--internal'</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineParserUnexpectedArgument">
        <source>Unexpected argument {0}</source>
        <target state="new">Unexpected argument {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineParserUnexpectedNullArgument">
        <source>Unexpected null argument at index {0}</source>
        <target state="new">Unexpected null argument at index {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineParserUnexpectedSingleQuoteInArgument">
        <source>Unexpected single quote in argument: {0}</source>
        <target state="new">Unexpected single quote in argument: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineParserUnexpectedSingleQuoteInArgumentForOption">
        <source>Unexpected single quote in argument: {0} for option '--{1}'</source>
        <target state="new">Unexpected single quote in argument: {0} for option '--{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineUnknownOption">
        <source>Unknown option '--{0}'</source>
        <target state="new">Unknown option '--{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="CompositeServiceFactoryInstanceAlreadyRegistered">
        <source>The same instance of 'CompositeExtensonFactory' is already registered</source>
        <target state="translated">已註冊 'CompositeExtensonFactory' 的同一執行個體</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationManagerCannotFindDefaultJsonConfigurationErrorMessage">
        <source>Could not find the default json configuration</source>
        <target state="translated">找不到預設 JSON 設定</target>
        <note />
      </trans-unit>
      <trans-unit id="ConsoleTestExecutionFilterFactoryDescription">
        <source>Creates the right test execution filter for console mode</source>
        <target state="translated">為主機模式建立正確的測試執行篩選條件</target>
        <note />
      </trans-unit>
      <trans-unit id="ConsoleTestExecutionFilterFactoryDisplayName">
        <source>Console test execution filter factory</source>
        <target state="translated">主機測試執行篩選條件中心</target>
        <note />
      </trans-unit>
      <trans-unit id="EnvironmentVariableProviderFailedWithError">
        <source>Provider '{0}' (UID: {1}) failed with error: {2}</source>
        <target state="translated">提供者 '{0}' (UID: {1}) 失敗，發生錯誤: {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="ExtensionDoesNotImplementGivenInterfaceErrorMessage">
        <source>Extension of type '{0}' is not implementing the required '{1}' interface</source>
        <target state="translated">類型 '{0}' 的延伸模組未實作所需的 '{1}' 介面</target>
        <note />
      </trans-unit>
      <trans-unit id="ExtensionWithSameUidAlreadyRegisteredErrorMessage">
        <source>Another extension with same the same UID '{0}' has already been registered. Registered extension is of type '{1}'</source>
        <target state="translated">已註冊另一個具有相同 UID '{0}' 的延伸模組。已註冊的延伸模組屬於 '{1}' 類型</target>
        <note />
      </trans-unit>
      <trans-unit id="FailedToWriteLogToChannelErrorMessage">
        <source>Failed to write the log to the channel. Missed log content:
{0}</source>
        <target state="new">Failed to write the log to the channel. Missed log content:
{0}</target>
        <note />
      </trans-unit>
      <trans-unit id="GlobalValidationOfTestHostEnvironmentVariablesFailedErrorMessage">
        <source>The following 'ITestHostEnvironmentVariableProvider' providers rejected the final environment variables setup:</source>
        <target state="translated">以下 'ITestHostEnvironmentVariableProvider' 提供者拒絕了最終環境變數設定：</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpApplicationUsage">
        <source>Usage {0} [option providers] [extension option providers]</source>
        <target state="new">Usage {0} [option providers] [extension option providers]</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpExecuteTestApplication">
        <source>Execute a .NET Test Application.</source>
        <target state="new">Execute a .NET Test Application.</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpExtensionOptions">
        <source>Extension options:</source>
        <target state="new">Extension options:</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpNoExtensionRegistered">
        <source>    No extension registered.</source>
        <target state="new">    No extension registered.</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpOptions">
        <source>Options:</source>
        <target state="new">Options:</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpTestApplicationRunner">
        <source>&lt;test application runner&gt;</source>
        <target state="new">&lt;test application runner&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidCommandLineArguments">
        <source>Invalid command line arguments:</source>
        <target state="new">Invalid command line arguments:</target>
        <note />
      </trans-unit>
      <trans-unit id="JsonConfigurationFileParserDuplicateKeyErrorMessage">
        <source>A duplicate key '{0}' was found</source>
        <target state="translated">找到重複的金鑰 '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="JsonConfigurationFileParserTopLevelElementIsNotAnObjectErrorMessage">
        <source>Top-level JSON element must be an object. Instead, '{0}' was found</source>
        <target state="translated">頂層 JSON 元素必須是物件。反而找到 '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="JsonConfigurationFileParserUnsupportedTokenErrorMessage">
        <source>Unsupported JSON token '{0}' was found</source>
        <target state="translated">找到不支援的 JSON 權杖 '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="NotAvailable">
        <source>Not available</source>
        <target state="new">Not available</target>
        <note />
      </trans-unit>
      <trans-unit id="NotFound">
        <source>Not found</source>
        <target state="new">Not found</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineClientHostOptionDescription">
        <source>Specify the hostname of the client.</source>
        <target state="new">Specify the hostname of the client.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineClientHostOptionSingleArgument">
        <source>'--client-host' expects a single host name as argument</source>
        <target state="new">'--client-host' expects a single host name as argument</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineClientPortOptionDescription">
        <source>Specify the port of the client.</source>
        <target state="new">Specify the port of the client.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticFileLoggerSynchronousWriteOptionDescription">
        <source>Force the built-in file logger to write the log synchronously. Useful for scenario where you don't want to lose any log (i.e. in case of crash). Note that this is slowing down the test execution.</source>
        <target state="new">Force the built-in file logger to write the log synchronously. Useful for scenario where you don't want to lose any log (i.e. in case of crash). Note that this is slowing down the test execution.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticFilePrefixOptionSingleArgument">
        <source>'--diagnostic-output-fileprefix' expects a single file name prefix argument</source>
        <target state="new">'--diagnostic-output-fileprefix' expects a single file name prefix argument</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticOptionDescription">
        <source>Enable the diagnostic logging. The default log level is 'Information'. The file will be written in the output directory with the name log_[MMddHHssfff].diag</source>
        <target state="new">Enable the diagnostic logging. The default log level is 'Information'. The file will be written in the output directory with the name log_[MMddHHssfff].diag</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticOptionExpectsSingleArgumentErrorMessage">
        <source>'--diagnostic-verbosity' expects a single level argument ('Trace', 'Debug', 'Information', 'Warning', 'Error', or 'Critical')</source>
        <target state="new">'--diagnostic-verbosity' expects a single level argument ('Trace', 'Debug', 'Information', 'Warning', 'Error', or 'Critical')</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticOptionIsMissing">
        <source>'--{0}' requires '--diagnostic' to be provided</source>
        <target state="new">'--{0}' requires '--diagnostic' to be provided</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticOutputDirectoryOptionDescription">
        <source>Output directory of the diagnostic logging, if not specified the file will be generated inside the default 'TestResults' directory.</source>
        <target state="new">Output directory of the diagnostic logging, if not specified the file will be generated inside the default 'TestResults' directory.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticOutputDirectoryOptionSingleArgument">
        <source>'--diagnostic-output-directory' expects a single directory name argument</source>
        <target state="new">'--diagnostic-output-directory' expects a single directory name argument</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticOutputFilePrefixOptionDescription">
        <source>Prefix for the log file name that will replace '[log]_.'</source>
        <target state="new">Prefix for the log file name that will replace '[log]_.'</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticVerbosityOptionDescription">
        <source>Define the level of the verbosity for the --diagnostic. The available values are 'Trace', 'Debug', 'Information', 'Warning', 'Error', and 'Critical'</source>
        <target state="new">Define the level of the verbosity for the --diagnostic. The available values are 'Trace', 'Debug', 'Information', 'Warning', 'Error', and 'Critical'</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiscoverTestsOptionDescription">
        <source>List available tests.</source>
        <target state="new">List available tests.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineHelpOptionDescription">
        <source>Show the command line help.</source>
        <target state="new">Show the command line help.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineInfoOptionDescription">
        <source>Display .NET test application information.</source>
        <target state="new">Display .NET test application information.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineMinimumExpectedTestsIncompatibleDiscoverTests">
        <source>'--list-tests' and '--minimum-expected-tests' are incompatible options</source>
        <target state="new">'--list-tests' and '--minimum-expected-tests' are incompatible options</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineMinimumExpectedTestsOptionSingleArgument">
        <source>'--minimum-expected-tests' expects a single non-zero positive integer value (e.g. '--minimum-expected-tests 10')</source>
        <target state="new">'--minimum-expected-tests' expects a single non-zero positive integer value (e.g. '--minimum-expected-tests 10')</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineNoBannerOptionDescription">
        <source>Do not display the startup banner, the copyright message or the telemetry banner.</source>
        <target state="new">Do not display the startup banner, the copyright message or the telemetry banner.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineOptionExpectsNoArgumentErrorMessage">
        <source>'--{0}' expects no argument</source>
        <target state="new">'--{0}' expects no argument</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLinePortOptionDescription">
        <source>Specify the port of the server.</source>
        <target state="new">Specify the port of the server.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLinePortOptionSingleArgument">
        <source>'--{0}' expects a single valid port as argument</source>
        <target state="new">'--{0}' expects a single valid port as argument</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineProviderDescription">
        <source>Microsoft Testing Platform command line provider</source>
        <target state="new">Microsoft Testing Platform command line provider</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineProviderDisplayName">
        <source>Platform command line provider</source>
        <target state="new">Platform command line provider</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineResultDirectoryOptionDescription">
        <source>The directory where the test results are going to be placed. If the specified directory doesn't exist, it's created. The default is TestResults in the directory that contains the test application.</source>
        <target state="new">The directory where the test results are going to be placed. If the specified directory doesn't exist, it's created. The default is TestResults in the directory that contains the test application.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineServerOptionDescription">
        <source>Enable the server mode.</source>
        <target state="new">Enable the server mode.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineSkipBuildersNumberCheckOptionDescription">
        <source>For testing purposes</source>
        <target state="new">For testing purposes</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineTestHostControllerPIDOptionDescription">
        <source>Eventual parent test host controller PID.</source>
        <target state="new">Eventual parent test host controller PID.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineVSTestAdapterModeOptionDescription">
        <source>Bridge to VSTest APIs</source>
        <target state="new">Bridge to VSTest APIs</target>
        <note />
      </trans-unit>
      <trans-unit id="ProcessHasNotYetExitedErrorMessage">
        <source>Process should have exited before we can determine this value</source>
        <target state="translated">在我們確定此值之前，流程應已結束</target>
        <note />
      </trans-unit>
      <trans-unit id="RetryFailedAfterTriesErrorMessage">
        <source>Retry failed after {0} times</source>
        <target state="new">Retry failed after {0} times</target>
        <note />
      </trans-unit>
      <trans-unit id="ServerLogMessageDescription">
        <source>This data represents a server log message</source>
        <target state="new">This data represents a server log message</target>
        <note />
      </trans-unit>
      <trans-unit id="ServerLogMessageDisplayName">
        <source>Server log message</source>
        <target state="new">Server log message</target>
        <note />
      </trans-unit>
      <trans-unit id="ServerTestExecutionFilterFactoryDescription">
        <source>Creates the right test execution filter for server mode</source>
        <target state="translated">為伺服器模式建立正確的測試執行篩選條件</target>
        <note />
      </trans-unit>
      <trans-unit id="ServerTestExecutionFilterFactoryDisplayName">
        <source>Server test execution filter factory</source>
        <target state="translated">伺服器測試執行篩選條件中心</target>
        <note />
      </trans-unit>
      <trans-unit id="ServiceProviderCannotFindServiceErrorMessage">
        <source>Cannot find service of type '{0}'</source>
        <target state="translated">找不到類型 '{0}' 的服務</target>
        <note />
      </trans-unit>
      <trans-unit id="ServiceProviderServiceAlreadyRegistered">
        <source>Instance of type '{0}' is already registered</source>
        <target state="translated">已註冊類型 '{0}' 的執行個體</target>
        <note />
      </trans-unit>
      <trans-unit id="ServiceProviderShouldNotRegisterTestFramework">
        <source>Instances of type 'ITestFramework' should not be registered through the service provider but through 'ITestApplicationBuilder.RegisterTestFramework'</source>
        <target state="translated">類型 'ITestFramework' 的執行個體不應透過服務提供者註冊，而是透過 'ITestApplicationBuilder.RegisterTestFramework' 註冊</target>
        <note />
      </trans-unit>
      <trans-unit id="TEstExecutionFilterFactoryFactoryAlreadySetErrorMessage">
        <source>An 'ITestExecutionFilterFactory' factory is already set</source>
        <target state="translated">已設定 'ITestExecutionFilterFactory' 中心</target>
        <note />
      </trans-unit>
      <trans-unit id="TestAdapterInvokerFactoryAlreadySetErrorMessage">
        <source>An 'ITestFrameworkInvoker' factory is already set</source>
        <target state="translated">已設定 'ITestFrameworkInvoker' 中心</target>
        <note />
      </trans-unit>
      <trans-unit id="TestApplicationBuilderApplicationAlreadyRegistered">
        <source>The application has already been built</source>
        <target state="translated">已建置應用程式</target>
        <note />
      </trans-unit>
      <trans-unit id="TestApplicationBuilderFrameworkAdapterFactoryAlreadyRegisteredErrorMessage">
        <source>The test framework adapter factory has already been registered</source>
        <target state="translated">測試架構介面卡中心已註冊</target>
        <note />
      </trans-unit>
      <trans-unit id="TestApplicationBuilderTestFrameworkCapabilitiesAlreadyRegistered">
        <source>The test framework capabilities factory has already been registered</source>
        <target state="translated">已註冊測試架構功能中心</target>
        <note />
      </trans-unit>
      <trans-unit id="TestApplicationBuilderTestFrameworkNotRegistered">
        <source>The test framework adapter has not been registered. Use 'RegisterTestFrameworkAdapter' to register it</source>
        <target state="translated">尚未註冊測試架構配接器。使用 'RegisterTestFrameworkAdapter' 來註冊</target>
        <note />
      </trans-unit>
      <trans-unit id="TestApplicationResultDescription">
        <source>Determine the result of the test application execution</source>
        <target state="translated">判斷測試應用程式執行的結果</target>
        <note />
      </trans-unit>
      <trans-unit id="TestApplicationResultDisplayName">
        <source>Test application result</source>
        <target state="translated">測試應用程式結果</target>
        <note />
      </trans-unit>
      <trans-unit id="TestApplicationVSTestModeTooManyBuilders">
        <source>VSTest mode only supports a single TestApplicationBuilder per process</source>
        <target state="translated">VSTest 模式僅支援每一程序的單一 TestApplicationBuilder</target>
        <note />
      </trans-unit>
      <trans-unit id="TestFrameworkProxyApiShouldNotBeCalled">
        <source>Method '{0}' should not have been called on this proxy object</source>
        <target state="translated">不應在此 Proxy 物件上呼叫方法 '{0}'。</target>
        <note />
      </trans-unit>
      <trans-unit id="TestHostAdapterInvokerFailedTestSessionErrorMessage">
        <source>Test adapter test session failure</source>
        <target state="translated">測試配接器測試工作階段失敗</target>
        <note />
      </trans-unit>
      <trans-unit id="TestProcessDidNotExitGracefullyErrorMessage">
        <source>Test application process didn't exit gracefully, exit code is '{0}'</source>
        <target state="translated">測試應用程式流程未正常結束，結束代碼為 '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="TimeoutAcquiringSemaphoreErrorMessage">
        <source>Failed to acquire semaphore before timeout of '{0}' seconds</source>
        <target state="new">Failed to acquire semaphore before timeout of '{0}' seconds</target>
        <note />
      </trans-unit>
      <trans-unit id="TimeoutFlushingLogsErrorMessage">
        <source>Failed to flush logs before the timeout of '{0}' seconds</source>
        <target state="new">Failed to flush logs before the timeout of '{0}' seconds</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeFilterCannotContainSlashCharacterErrorMessage">
        <source>A filter '{0}' should not contain a '/' character</source>
        <target state="translated">篩選條件 '{0}' 不應包含 '/' 字元</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeFilterDescription">
        <source>Use a tree filter to filter down the tests to execute</source>
        <target state="new">Use a tree filter to filter down the tests to execute</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeFilterEscapeCharacterShouldNotBeLastErrorMessage">
        <source>An escape character should not terminate the filter string '{0}'</source>
        <target state="translated">逸出字元不應終止篩選條件字串 '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeFilterInvalidArgumentCount">
        <source>A single argument is expected (e.g. '/MyAssembly/MyNamespace/MyClass/MyTestMethod*[OS=Linux]')</source>
        <target state="new">A single argument is expected (e.g. '/MyAssembly/MyNamespace/MyClass/MyTestMethod*[OS=Linux]')</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeFilterOnlyLastLevelCanContainMutiLevelWildcardErrorMessage">
        <source>Only the final filter path can contain '**' wildcard</source>
        <target state="translated">只有最終篩選條件路徑可以包含 '**' 萬用字元</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeFilterOperatorNotAllowedErrorMessage">
        <source>Unexpected operator '&amp;' or '|' within filter expression '{0}'</source>
        <target state="translated">篩選條件運算式 '{0}' 中出現未預期的運算子 '&amp;' 或 '|'</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeFilterPathShouldStartWithSlashErrorMessage">
        <source>Invalid node path, expected root as first character '{0}'</source>
        <target state="translated">無效節點路徑，應將根作為第一個字元 '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeFilterUnbalancedFilterErrorMessage">
        <source>Filter expression '{0}' contains an unbalanced number of '{1}' '{2}' operators</source>
        <target state="translated">篩選條件運算式 '{0}' 包含數量不平衡的 '{1}' '{2}' 運算子</target>
        <note>{1} and {2} are () or []</note>
      </trans-unit>
      <trans-unit id="TreeNodeFilterUnexpectedSlashOperatorErrorMessage">
        <source>Filter contains an unexpected '/' operator inside a parenthesized expression</source>
        <target state="translated">篩選條件在小括號內的運算子中包含未預期的 '/' 運算子</target>
        <note />
      </trans-unit>
      <trans-unit id="UnexpectedExceptionInFileLoggerErrorMessage">
        <source>An unexpected exception occured in 'FileLogger.WriteLogToFileAsync'.
{0}</source>
        <target state="new">An unexpected exception occured in 'FileLogger.WriteLogToFileAsync'.
{0}</target>
        <note>{0} exception ToString</note>
      </trans-unit>
      <trans-unit id="UnexpectedStateErrorMessage">
        <source>Unexpected state in file '{0}' at line '{1}'</source>
        <target state="new">Unexpected state in file '{0}' at line '{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="UnreachableLocationErrorMessage">
        <source>This program location is thought to be unreachable. File='{0}' Line={1}</source>
        <target state="new">This program location is thought to be unreachable. File='{0}' Line={1}</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>