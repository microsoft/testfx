<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="ko" original="../PlatformResources.resx">
    <body>
      <trans-unit id="CannotCreateTestExecutionFilterErrorMessage">
        <source>Failed to create a test execution filter</source>
        <target state="translated">테스트 실행 필터를 만들지 못함</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotCreateUniqueLogFileErrorMessage">
        <source>Failed to create a unique log file after 3 seconds. Lastly tried file name is '{0}'.</source>
        <target state="new">Failed to create a unique log file after 3 seconds. Lastly tried file name is '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotRemoveEnvironmentVariableAtThisStageErrorMessage">
        <source>Cannot remove environment variables at this stage</source>
        <target state="translated">이 단계에서 환경 변수를 제거할 수 없습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotRemoveEnvironmentVariableItIsLockedErrorMessage">
        <source>Extension '{0}' tried to remove environment variable '{1}' but it was locked by extension '{2}'</source>
        <target state="translated">확장 '{0}'(이)가 환경 변수 '{1}'을(를) 제거하려고 했지만 확장 '{2}'에 의해 잠겼습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotSetEnvironmentVariableAtThisStageErrorMessage">
        <source>Cannot set environment variables at this stage</source>
        <target state="translated">이 단계에서 환경 변수를 설정할 수 없습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotSetEnvironmentVariableItIsLockedErrorMessage">
        <source>Extension '{0}' tried to set environment variable '{1}' but it was locked by extension '{2}'</source>
        <target state="translated">확장 '{0}'(이)가 환경 변수 '{1}'을(를) 설정하려고 했지만 확장 '{2}'에 의해 잠겼습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotStartProcessErrorMessage">
        <source>Cannot start process '{0}'</source>
        <target state="translated">프로세스 '{0}'을(를) 시작할 수 없습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineInvalidArgumentsForOption">
        <source>Option '--{0}' has invalid arguments: {1}</source>
        <target state="new">Option '--{0}' has invalid arguments: {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineInvalidArityErrorMessage">
        <source>Invalid arity, maximum must be greater than minimum</source>
        <target state="new">Invalid arity, maximum must be greater than minimum</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineInvalidConfiguration">
        <source>Invalid configuration for provider '{0}' (UID: {1}). Error: {2}</source>
        <target state="new">Invalid configuration for provider '{0}' (UID: {1}). Error: {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineInvalidOptionName">
        <source>Invalid option name '{0}', it must contain only letter and '-' (e.g. my-option)</source>
        <target state="new">Invalid option name '{0}', it must contain only letter and '-' (e.g. my-option)</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineOptionExpectsAtLeastArguments">
        <source>Option '--{0}' from provider '{1}' (UID: {2}) expects at least {3} arguments</source>
        <target state="new">Option '--{0}' from provider '{1}' (UID: {2}) expects at least {3} arguments</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineOptionExpectsAtMostArguments">
        <source>Option '--{0}' from provider '{1}' (UID: {2}) expects at most {3} arguments</source>
        <target state="new">Option '--{0}' from provider '{1}' (UID: {2}) expects at most {3} arguments</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineOptionExpectsNoArguments">
        <source>Option '--{0}' from provider '{1}' (UID: {2}) expects no arguments</source>
        <target state="new">Option '--{0}' from provider '{1}' (UID: {2}) expects no arguments</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineOptionIsDeclaredByMultipleProviders">
        <source>Option '--{0}' is declared by multiple extensions: '{0}'</source>
        <target state="new">Option '--{0}' is declared by multiple extensions: '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineOptionIsDeclaredByMultipleProvidersWorkaround">
        <source>You can fix the previous option clash by overriding the option name using the configuration file</source>
        <target state="new">You can fix the previous option clash by overriding the option name using the configuration file</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineOptionIsReserved">
        <source>Option '--{0}' is reserved and cannot be used by providers: '{0}'</source>
        <target state="new">Option '--{0}' is reserved and cannot be used by providers: '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineOptionIsUsingReservedPrefix">
        <source>Option `--{0}` from provider '{1}' (UID: {2}) is using the reserved prefix '--internal'</source>
        <target state="new">Option `--{0}` from provider '{1}' (UID: {2}) is using the reserved prefix '--internal'</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineParserUnexpectedArgument">
        <source>Unexpected argument {0}</source>
        <target state="new">Unexpected argument {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineParserUnexpectedNullArgument">
        <source>Unexpected null argument at index {0}</source>
        <target state="new">Unexpected null argument at index {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineParserUnexpectedSingleQuoteInArgument">
        <source>Unexpected single quote in argument: {0}</source>
        <target state="new">Unexpected single quote in argument: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineParserUnexpectedSingleQuoteInArgumentForOption">
        <source>Unexpected single quote in argument: {0} for option '--{1}'</source>
        <target state="new">Unexpected single quote in argument: {0} for option '--{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="CommandLineUnknownOption">
        <source>Unknown option '--{0}'</source>
        <target state="new">Unknown option '--{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="CompositeServiceFactoryInstanceAlreadyRegistered">
        <source>The same instance of 'CompositeExtensonFactory' is already registered</source>
        <target state="translated">동일한 'CompositeExtensonFactory' 인스턴스가 이미 등록됨</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationManagerCannotFindDefaultJsonConfigurationErrorMessage">
        <source>Could not find the default json configuration</source>
        <target state="translated">기본 json 구성을 찾을 수 없습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConsoleTestExecutionFilterFactoryDescription">
        <source>Creates the right test execution filter for console mode</source>
        <target state="translated">콘솔 모드에 적합한 테스트 실행 필터를 만듬</target>
        <note />
      </trans-unit>
      <trans-unit id="ConsoleTestExecutionFilterFactoryDisplayName">
        <source>Console test execution filter factory</source>
        <target state="translated">콘솔 테스트 실행 필터 팩터리</target>
        <note />
      </trans-unit>
      <trans-unit id="CouldNotFindDirectoryErrorMessage">
        <source>Could not find directory '{0}'</source>
        <target state="new">Could not find directory '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="EnvironmentVariableProviderFailedWithError">
        <source>Provider '{0}' (UID: {1}) failed with error: {2}</source>
        <target state="translated">공급자 '{0}'(UID: {1})이 오류 {2}(으)로 실패했습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExtensionDoesNotImplementGivenInterfaceErrorMessage">
        <source>Extension of type '{0}' is not implementing the required '{1}' interface</source>
        <target state="translated">‘{0}’ 형식의 확장이 필요한 '{1}' 인터페이스를 구현하지 않음</target>
        <note />
      </trans-unit>
      <trans-unit id="ExtensionWithSameUidAlreadyRegisteredErrorMessage">
        <source>Another extension with same the same UID '{0}' has already been registered. Registered extension is of type '{1}'</source>
        <target state="translated">UID '{0}'과(와) 동일한 다른 확장이 이미 등록되었습니다. 등록된 확장은 '{1}' 형식임</target>
        <note />
      </trans-unit>
      <trans-unit id="FailedToWriteLogToChannelErrorMessage">
        <source>Failed to write the log to the channel. Missed log content:
{0}</source>
        <target state="new">Failed to write the log to the channel. Missed log content:
{0}</target>
        <note />
      </trans-unit>
      <trans-unit id="GlobalValidationOfTestHostEnvironmentVariablesFailedErrorMessage">
        <source>The following 'ITestHostEnvironmentVariableProvider' providers rejected the final environment variables setup:</source>
        <target state="translated">다음 'ITestHostEnvironmentVariableProvider' 공급자가 최종 환경 변수 설정을 거부했습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpApplicationUsage">
        <source>Usage {0} [option providers] [extension option providers]</source>
        <target state="new">Usage {0} [option providers] [extension option providers]</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpExecuteTestApplication">
        <source>Execute a .NET Test Application.</source>
        <target state="new">Execute a .NET Test Application.</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpExtensionOptions">
        <source>Extension options:</source>
        <target state="new">Extension options:</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpNoExtensionRegistered">
        <source>    No extension registered.</source>
        <target state="new">    No extension registered.</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpOptions">
        <source>Options:</source>
        <target state="new">Options:</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpTestApplicationRunner">
        <source>&lt;test application runner&gt;</source>
        <target state="new">&lt;test application runner&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="InternalLoopAsyncDidNotExitSuccessfullyErrorMessage">
        <source>Method '{0}' did not exit successfully</source>
        <target state="new">Method '{0}' did not exit successfully</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidCommandLineArguments">
        <source>Invalid command line arguments:</source>
        <target state="new">Invalid command line arguments:</target>
        <note />
      </trans-unit>
      <trans-unit id="JsonConfigurationFileParserDuplicateKeyErrorMessage">
        <source>A duplicate key '{0}' was found</source>
        <target state="translated">중복 키('{0}')를 찾았습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="JsonConfigurationFileParserTopLevelElementIsNotAnObjectErrorMessage">
        <source>Top-level JSON element must be an object. Instead, '{0}' was found</source>
        <target state="translated">최상위 JSON 요소는 개체여야 합니다. 대신 '{0}'을(를) 찾았습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="JsonConfigurationFileParserUnsupportedTokenErrorMessage">
        <source>Unsupported JSON token '{0}' was found</source>
        <target state="translated">지원되지 않는 JSON 토큰('{0}')을 발견했습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoSerializerRegisteredWithIdErrorMessage">
        <source>No serializer registered with ID '{0}'</source>
        <target state="new">No serializer registered with ID '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="NoSerializerRegisteredWithTypeErrorMessage">
        <source>No serializer registered with type '{0}'</source>
        <target state="new">No serializer registered with type '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="NotAvailable">
        <source>Not available</source>
        <target state="new">Not available</target>
        <note />
      </trans-unit>
      <trans-unit id="NotFound">
        <source>Not found</source>
        <target state="new">Not found</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineClientHostOptionDescription">
        <source>Specify the hostname of the client.</source>
        <target state="new">Specify the hostname of the client.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineClientHostOptionSingleArgument">
        <source>'--client-host' expects a single host name as argument</source>
        <target state="new">'--client-host' expects a single host name as argument</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineClientPortOptionDescription">
        <source>Specify the port of the client.</source>
        <target state="new">Specify the port of the client.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticFileLoggerSynchronousWriteOptionDescription">
        <source>Force the built-in file logger to write the log synchronously. Useful for scenario where you don't want to lose any log (i.e. in case of crash). Note that this is slowing down the test execution.</source>
        <target state="new">Force the built-in file logger to write the log synchronously. Useful for scenario where you don't want to lose any log (i.e. in case of crash). Note that this is slowing down the test execution.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticFilePrefixOptionSingleArgument">
        <source>'--diagnostic-output-fileprefix' expects a single file name prefix argument</source>
        <target state="new">'--diagnostic-output-fileprefix' expects a single file name prefix argument</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticOptionDescription">
        <source>Enable the diagnostic logging. The default log level is 'Information'. The file will be written in the output directory with the name log_[MMddHHssfff].diag</source>
        <target state="new">Enable the diagnostic logging. The default log level is 'Information'. The file will be written in the output directory with the name log_[MMddHHssfff].diag</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticOptionExpectsSingleArgumentErrorMessage">
        <source>'--diagnostic-verbosity' expects a single level argument ('Trace', 'Debug', 'Information', 'Warning', 'Error', or 'Critical')</source>
        <target state="new">'--diagnostic-verbosity' expects a single level argument ('Trace', 'Debug', 'Information', 'Warning', 'Error', or 'Critical')</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticOptionIsMissing">
        <source>'--{0}' requires '--diagnostic' to be provided</source>
        <target state="new">'--{0}' requires '--diagnostic' to be provided</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticOutputDirectoryOptionDescription">
        <source>Output directory of the diagnostic logging, if not specified the file will be generated inside the default 'TestResults' directory.</source>
        <target state="new">Output directory of the diagnostic logging, if not specified the file will be generated inside the default 'TestResults' directory.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticOutputDirectoryOptionSingleArgument">
        <source>'--diagnostic-output-directory' expects a single directory name argument</source>
        <target state="new">'--diagnostic-output-directory' expects a single directory name argument</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticOutputFilePrefixOptionDescription">
        <source>Prefix for the log file name that will replace '[log]_.'</source>
        <target state="new">Prefix for the log file name that will replace '[log]_.'</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiagnosticVerbosityOptionDescription">
        <source>Define the level of the verbosity for the --diagnostic. The available values are 'Trace', 'Debug', 'Information', 'Warning', 'Error', and 'Critical'</source>
        <target state="new">Define the level of the verbosity for the --diagnostic. The available values are 'Trace', 'Debug', 'Information', 'Warning', 'Error', and 'Critical'</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineDiscoverTestsOptionDescription">
        <source>List available tests.</source>
        <target state="new">List available tests.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineHelpOptionDescription">
        <source>Show the command line help.</source>
        <target state="new">Show the command line help.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineInfoOptionDescription">
        <source>Display .NET test application information.</source>
        <target state="new">Display .NET test application information.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineMinimumExpectedTestsIncompatibleDiscoverTests">
        <source>'--list-tests' and '--minimum-expected-tests' are incompatible options</source>
        <target state="new">'--list-tests' and '--minimum-expected-tests' are incompatible options</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineMinimumExpectedTestsOptionSingleArgument">
        <source>'--minimum-expected-tests' expects a single non-zero positive integer value (e.g. '--minimum-expected-tests 10')</source>
        <target state="new">'--minimum-expected-tests' expects a single non-zero positive integer value (e.g. '--minimum-expected-tests 10')</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineNoBannerOptionDescription">
        <source>Do not display the startup banner, the copyright message or the telemetry banner.</source>
        <target state="new">Do not display the startup banner, the copyright message or the telemetry banner.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineOptionExpectsNoArgumentErrorMessage">
        <source>'--{0}' expects no argument</source>
        <target state="new">'--{0}' expects no argument</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLinePortOptionDescription">
        <source>Specify the port of the server.</source>
        <target state="new">Specify the port of the server.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLinePortOptionSingleArgument">
        <source>'--{0}' expects a single valid port as argument</source>
        <target state="new">'--{0}' expects a single valid port as argument</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineProviderDescription">
        <source>Microsoft Testing Platform command line provider</source>
        <target state="new">Microsoft Testing Platform command line provider</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineProviderDisplayName">
        <source>Platform command line provider</source>
        <target state="new">Platform command line provider</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineResultDirectoryOptionDescription">
        <source>The directory where the test results are going to be placed. If the specified directory doesn't exist, it's created. The default is TestResults in the directory that contains the test application.</source>
        <target state="new">The directory where the test results are going to be placed. If the specified directory doesn't exist, it's created. The default is TestResults in the directory that contains the test application.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineServerOptionDescription">
        <source>Enable the server mode.</source>
        <target state="new">Enable the server mode.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineSkipBuildersNumberCheckOptionDescription">
        <source>For testing purposes</source>
        <target state="new">For testing purposes</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineTestHostControllerPIDOptionDescription">
        <source>Eventual parent test host controller PID.</source>
        <target state="new">Eventual parent test host controller PID.</target>
        <note />
      </trans-unit>
      <trans-unit id="PlatformCommandLineVSTestAdapterModeOptionDescription">
        <source>Bridge to VSTest APIs</source>
        <target state="new">Bridge to VSTest APIs</target>
        <note />
      </trans-unit>
      <trans-unit id="ProcessHasNotYetExitedErrorMessage">
        <source>Process should have exited before we can determine this value</source>
        <target state="translated">이 값을 결정하려면 프로세스가 종료되어야 합니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="RetryFailedAfterTriesErrorMessage">
        <source>Retry failed after {0} times</source>
        <target state="new">Retry failed after {0} times</target>
        <note />
      </trans-unit>
      <trans-unit id="ServerLogMessageDescription">
        <source>This data represents a server log message</source>
        <target state="new">This data represents a server log message</target>
        <note />
      </trans-unit>
      <trans-unit id="ServerLogMessageDisplayName">
        <source>Server log message</source>
        <target state="new">Server log message</target>
        <note />
      </trans-unit>
      <trans-unit id="ServerTestExecutionFilterFactoryDescription">
        <source>Creates the right test execution filter for server mode</source>
        <target state="translated">서버 모드에 적합한 테스트 실행 필터를 만듬</target>
        <note />
      </trans-unit>
      <trans-unit id="ServerTestExecutionFilterFactoryDisplayName">
        <source>Server test execution filter factory</source>
        <target state="translated">서버 테스트 실행 필터 팩터리</target>
        <note />
      </trans-unit>
      <trans-unit id="ServiceProviderCannotFindServiceErrorMessage">
        <source>Cannot find service of type '{0}'</source>
        <target state="translated">'{0}' 형식의 서비스를 찾을 수 없습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="ServiceProviderServiceAlreadyRegistered">
        <source>Instance of type '{0}' is already registered</source>
        <target state="translated">'{0}' 형식의 인스턴스가 이미 등록되어 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="ServiceProviderShouldNotRegisterTestFramework">
        <source>Instances of type 'ITestFramework' should not be registered through the service provider but through 'ITestApplicationBuilder.RegisterTestFramework'</source>
        <target state="translated">'ITestFramework' 형식의 인스턴스는 서비스 공급자를 통해 등록하지 않아야 하지만 'ITestApplicationBuilder.RegisterTestFramework'를 통해 등록해야 합니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="TEstExecutionFilterFactoryFactoryAlreadySetErrorMessage">
        <source>An 'ITestExecutionFilterFactory' factory is already set</source>
        <target state="translated">'ITestExecutionFilterFactory' 팩터리가 이미 설정되어 있음</target>
        <note />
      </trans-unit>
      <trans-unit id="TestAdapterInvokerFactoryAlreadySetErrorMessage">
        <source>An 'ITestFrameworkInvoker' factory is already set</source>
        <target state="translated">'ITestFrameworkInvoker' 팩터리가 이미 설정됨</target>
        <note />
      </trans-unit>
      <trans-unit id="TestApplicationBuilderApplicationAlreadyRegistered">
        <source>The application has already been built</source>
        <target state="translated">애플리케이션이 이미 빌드되었습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="TestApplicationBuilderFrameworkAdapterFactoryAlreadyRegisteredErrorMessage">
        <source>The test framework adapter factory has already been registered</source>
        <target state="translated">테스트 프레임워크 어댑터 팩터리가 이미 등록됨</target>
        <note />
      </trans-unit>
      <trans-unit id="TestApplicationBuilderTestFrameworkCapabilitiesAlreadyRegistered">
        <source>The test framework capabilities factory has already been registered</source>
        <target state="translated">테스트 프레임워크 기능 팩터리가 이미 등록되었습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="TestApplicationBuilderTestFrameworkNotRegistered">
        <source>The test framework adapter has not been registered. Use 'RegisterTestFrameworkAdapter' to register it</source>
        <target state="translated">테스트 프레임워크 어댑터가 등록되지 않았습니다. 'RegisterTestFrameworkAdapter'를 사용하여 등록</target>
        <note />
      </trans-unit>
      <trans-unit id="TestApplicationResultDescription">
        <source>Determine the result of the test application execution</source>
        <target state="translated">테스트 애플리케이션 실행 결과 확인</target>
        <note />
      </trans-unit>
      <trans-unit id="TestApplicationResultDisplayName">
        <source>Test application result</source>
        <target state="translated">테스트 애플리케이션 결과</target>
        <note />
      </trans-unit>
      <trans-unit id="TestApplicationVSTestModeTooManyBuilders">
        <source>VSTest mode only supports a single TestApplicationBuilder per process</source>
        <target state="translated">VSTest 모드는 프로세스당 단일 TestApplicationBuilder만 지원합니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="TestFrameworkProxyApiShouldNotBeCalled">
        <source>Method '{0}' should not have been called on this proxy object</source>
        <target state="translated">이 프록시 개체에서 '{0}' 메서드를 호출하지 않아야 합니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="TestHostAdapterInvokerFailedTestSessionErrorMessage">
        <source>Test adapter test session failure</source>
        <target state="translated">테스트 어댑터 테스트 세션 실패</target>
        <note />
      </trans-unit>
      <trans-unit id="TestProcessDidNotExitGracefullyErrorMessage">
        <source>Test application process didn't exit gracefully, exit code is '{0}'</source>
        <target state="translated">테스트 애플리케이션 프로세스가 정상적으로 종료되지 않았습니다. 종료 코드는 '{0}'입니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="TimeoutAcquiringSemaphoreErrorMessage">
        <source>Failed to acquire semaphore before timeout of '{0}' seconds</source>
        <target state="new">Failed to acquire semaphore before timeout of '{0}' seconds</target>
        <note />
      </trans-unit>
      <trans-unit id="TimeoutFlushingLogsErrorMessage">
        <source>Failed to flush logs before the timeout of '{0}' seconds</source>
        <target state="new">Failed to flush logs before the timeout of '{0}' seconds</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeFilterCannotContainSlashCharacterErrorMessage">
        <source>A filter '{0}' should not contain a '/' character</source>
        <target state="translated">'{0}' 필터는 '/' 문자를 포함하면 안 됨</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeFilterDescription">
        <source>Use a tree filter to filter down the tests to execute</source>
        <target state="new">Use a tree filter to filter down the tests to execute</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeFilterEscapeCharacterShouldNotBeLastErrorMessage">
        <source>An escape character should not terminate the filter string '{0}'</source>
        <target state="translated">이스케이프 문자가 필터 문자열 '{0}'을(를) 종료하면 안 됨</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeFilterInvalidArgumentCount">
        <source>A single argument is expected (e.g. '/MyAssembly/MyNamespace/MyClass/MyTestMethod*[OS=Linux]')</source>
        <target state="new">A single argument is expected (e.g. '/MyAssembly/MyNamespace/MyClass/MyTestMethod*[OS=Linux]')</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeFilterOnlyLastLevelCanContainMutiLevelWildcardErrorMessage">
        <source>Only the final filter path can contain '**' wildcard</source>
        <target state="translated">최종 필터 경로만 '**' 와일드카드를 포함할 수 있음</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeFilterOperatorNotAllowedErrorMessage">
        <source>Unexpected operator '&amp;' or '|' within filter expression '{0}'</source>
        <target state="translated">필터 식 '{0}' 내에 예기치 않은 연산자 '&amp;' 또는 '|'이(가) 있음</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeFilterPathShouldStartWithSlashErrorMessage">
        <source>Invalid node path, expected root as first character '{0}'</source>
        <target state="translated">노드 경로가 잘못되었습니다. 첫 번째 문자 '{0}'(으)로 루트 필요</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeNodeFilterUnbalancedFilterErrorMessage">
        <source>Filter expression '{0}' contains an unbalanced number of '{1}' '{2}' operators</source>
        <target state="translated">필터 식 '{0}'이(가) '{1}' '{2}' 연산자의 균형이 맞지 않는 개수를 포함함</target>
        <note>{1} and {2} are () or []</note>
      </trans-unit>
      <trans-unit id="TreeNodeFilterUnexpectedSlashOperatorErrorMessage">
        <source>Filter contains an unexpected '/' operator inside a parenthesized expression</source>
        <target state="translated">필터는 괄호가 있는 식 내에 예기치 않은 '/' 연산자를 포함함</target>
        <note />
      </trans-unit>
      <trans-unit id="UnexpectedExceptionDuringByteConversionErrorMessage">
        <source>An unexpected exception occured during byte conversion</source>
        <target state="new">An unexpected exception occured during byte conversion</target>
        <note />
      </trans-unit>
      <trans-unit id="UnexpectedExceptionInFileLoggerErrorMessage">
        <source>An unexpected exception occured in 'FileLogger.WriteLogToFileAsync'.
{0}</source>
        <target state="new">An unexpected exception occured in 'FileLogger.WriteLogToFileAsync'.
{0}</target>
        <note>{0} exception ToString</note>
      </trans-unit>
      <trans-unit id="UnexpectedStateErrorMessage">
        <source>Unexpected state in file '{0}' at line '{1}'</source>
        <target state="new">Unexpected state in file '{0}' at line '{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="UnreachableLocationErrorMessage">
        <source>This program location is thought to be unreachable. File='{0}' Line={1}</source>
        <target state="new">This program location is thought to be unreachable. File='{0}' Line={1}</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>