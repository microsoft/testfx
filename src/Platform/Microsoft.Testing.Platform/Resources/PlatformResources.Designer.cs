//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Testing.Platform.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class PlatformResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal PlatformResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Testing.Platform.Resources.PlatformResources", typeof(PlatformResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aborted.
        /// </summary>
        internal static string Aborted {
            get {
                return ResourceManager.GetString("Aborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Actual.
        /// </summary>
        internal static string Actual {
            get {
                return ResourceManager.GetString("Actual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cancelled.
        /// </summary>
        internal static string CancelledLowercase {
            get {
                return ResourceManager.GetString("CancelledLowercase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancelling the test session....
        /// </summary>
        internal static string CancellingTestSession {
            get {
                return ResourceManager.GetString("CancellingTestSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create a test execution filter.
        /// </summary>
        internal static string CannotCreateTestExecutionFilterErrorMessage {
            get {
                return ResourceManager.GetString("CannotCreateTestExecutionFilterErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create a unique log file after 3 seconds. Lastly tried file name is &apos;{0}&apos;..
        /// </summary>
        internal static string CannotCreateUniqueLogFileErrorMessage {
            get {
                return ResourceManager.GetString("CannotCreateUniqueLogFileErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot remove environment variables at this stage.
        /// </summary>
        internal static string CannotRemoveEnvironmentVariableAtThisStageErrorMessage {
            get {
                return ResourceManager.GetString("CannotRemoveEnvironmentVariableAtThisStageErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension &apos;{0}&apos; tried to remove environment variable &apos;{1}&apos; but it was locked by extension &apos;{2}&apos;.
        /// </summary>
        internal static string CannotRemoveEnvironmentVariableItIsLockedErrorMessage {
            get {
                return ResourceManager.GetString("CannotRemoveEnvironmentVariableItIsLockedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set environment variables at this stage.
        /// </summary>
        internal static string CannotSetEnvironmentVariableAtThisStageErrorMessage {
            get {
                return ResourceManager.GetString("CannotSetEnvironmentVariableAtThisStageErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension &apos;{0}&apos; tried to set environment variable &apos;{1}&apos; but it was locked by extension &apos;{2}&apos;.
        /// </summary>
        internal static string CannotSetEnvironmentVariableItIsLockedErrorMessage {
            get {
                return ResourceManager.GetString("CannotSetEnvironmentVariableItIsLockedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot start process &apos;{0}&apos;.
        /// </summary>
        internal static string CannotStartProcessErrorMessage {
            get {
                return ResourceManager.GetString("CannotStartProcessErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;--{0}&apos; has invalid arguments: {1}.
        /// </summary>
        internal static string CommandLineInvalidArgumentsForOption {
            get {
                return ResourceManager.GetString("CommandLineInvalidArgumentsForOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid arity, maximum must be greater than minimum.
        /// </summary>
        internal static string CommandLineInvalidArityErrorMessage {
            get {
                return ResourceManager.GetString("CommandLineInvalidArityErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid configuration for provider &apos;{0}&apos; (UID: {1}). Error: {2}.
        /// </summary>
        internal static string CommandLineInvalidConfiguration {
            get {
                return ResourceManager.GetString("CommandLineInvalidConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid option name &apos;{0}&apos;, it must contain only letter and &apos;-&apos; (e.g. my-option).
        /// </summary>
        internal static string CommandLineInvalidOptionName {
            get {
                return ResourceManager.GetString("CommandLineInvalidOptionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;--{0}&apos; from provider &apos;{1}&apos; (UID: {2}) expects at least {3} arguments.
        /// </summary>
        internal static string CommandLineOptionExpectsAtLeastArguments {
            get {
                return ResourceManager.GetString("CommandLineOptionExpectsAtLeastArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;--{0}&apos; from provider &apos;{1}&apos; (UID: {2}) expects at most {3} arguments.
        /// </summary>
        internal static string CommandLineOptionExpectsAtMostArguments {
            get {
                return ResourceManager.GetString("CommandLineOptionExpectsAtMostArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;--{0}&apos; from provider &apos;{1}&apos; (UID: {2}) expects no arguments.
        /// </summary>
        internal static string CommandLineOptionExpectsNoArguments {
            get {
                return ResourceManager.GetString("CommandLineOptionExpectsNoArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;--{0}&apos; is declared by multiple extensions: &apos;{0}&apos;.
        /// </summary>
        internal static string CommandLineOptionIsDeclaredByMultipleProviders {
            get {
                return ResourceManager.GetString("CommandLineOptionIsDeclaredByMultipleProviders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can fix the previous option clash by overriding the option name using the configuration file.
        /// </summary>
        internal static string CommandLineOptionIsDeclaredByMultipleProvidersWorkaround {
            get {
                return ResourceManager.GetString("CommandLineOptionIsDeclaredByMultipleProvidersWorkaround", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;--{0}&apos; is reserved and cannot be used by providers: &apos;{0}&apos;.
        /// </summary>
        internal static string CommandLineOptionIsReserved {
            get {
                return ResourceManager.GetString("CommandLineOptionIsReserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option `--{0}` from provider &apos;{1}&apos; (UID: {2}) is using the reserved prefix &apos;--internal&apos;.
        /// </summary>
        internal static string CommandLineOptionIsUsingReservedPrefix {
            get {
                return ResourceManager.GetString("CommandLineOptionIsUsingReservedPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected argument {0}.
        /// </summary>
        internal static string CommandLineParserUnexpectedArgument {
            get {
                return ResourceManager.GetString("CommandLineParserUnexpectedArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected null argument at index {0}.
        /// </summary>
        internal static string CommandLineParserUnexpectedNullArgument {
            get {
                return ResourceManager.GetString("CommandLineParserUnexpectedNullArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected single quote in argument: {0}.
        /// </summary>
        internal static string CommandLineParserUnexpectedSingleQuoteInArgument {
            get {
                return ResourceManager.GetString("CommandLineParserUnexpectedSingleQuoteInArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected single quote in argument: {0} for option &apos;--{1}&apos;.
        /// </summary>
        internal static string CommandLineParserUnexpectedSingleQuoteInArgumentForOption {
            get {
                return ResourceManager.GetString("CommandLineParserUnexpectedSingleQuoteInArgumentForOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown option &apos;--{0}&apos;.
        /// </summary>
        internal static string CommandLineUnknownOption {
            get {
                return ResourceManager.GetString("CommandLineUnknownOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The same instance of &apos;CompositeExtensonFactory&apos; is already registered.
        /// </summary>
        internal static string CompositeServiceFactoryInstanceAlreadyRegistered {
            get {
                return ResourceManager.GetString("CompositeServiceFactoryInstanceAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find the default json configuration.
        /// </summary>
        internal static string ConfigurationManagerCannotFindDefaultJsonConfigurationErrorMessage {
            get {
                return ResourceManager.GetString("ConfigurationManagerCannotFindDefaultJsonConfigurationErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to client host &apos;{0}&apos; port &apos;{1}&apos;.
        /// </summary>
        internal static string ConnectingToClientHost {
            get {
                return ResourceManager.GetString("ConnectingToClientHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates the right test execution filter for console mode.
        /// </summary>
        internal static string ConsoleTestExecutionFilterFactoryDescription {
            get {
                return ResourceManager.GetString("ConsoleTestExecutionFilterFactoryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Console test execution filter factory.
        /// </summary>
        internal static string ConsoleTestExecutionFilterFactoryDisplayName {
            get {
                return ResourceManager.GetString("ConsoleTestExecutionFilterFactoryDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find directory &apos;{0}&apos;.
        /// </summary>
        internal static string CouldNotFindDirectoryErrorMessage {
            get {
                return ResourceManager.GetString("CouldNotFindDirectoryErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagnostic file (level &apos;{0}&apos; with async flush): {1}&quot;.
        /// </summary>
        internal static string DiagnosticFileLevelWithAsyncFlush {
            get {
                return ResourceManager.GetString("DiagnosticFileLevelWithAsyncFlush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagnostic file (level &apos;{0}&apos; with sync flush): {1}&quot;.
        /// </summary>
        internal static string DiagnosticFileLevelWithFlush {
            get {
                return ResourceManager.GetString("DiagnosticFileLevelWithFlush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider &apos;{0}&apos; (UID: {1}) failed with error: {2}.
        /// </summary>
        internal static string EnvironmentVariableProviderFailedWithError {
            get {
                return ResourceManager.GetString("EnvironmentVariableProviderFailedWithError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected.
        /// </summary>
        internal static string Expected {
            get {
                return ResourceManager.GetString("Expected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension of type &apos;{0}&apos; is not implementing the required &apos;{1}&apos; interface.
        /// </summary>
        internal static string ExtensionDoesNotImplementGivenInterfaceErrorMessage {
            get {
                return ResourceManager.GetString("ExtensionDoesNotImplementGivenInterfaceErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another extension with same the same UID &apos;{0}&apos; has already been registered. Registered extension is of type &apos;{1}&apos;.
        /// </summary>
        internal static string ExtensionWithSameUidAlreadyRegisteredErrorMessage {
            get {
                return ResourceManager.GetString("ExtensionWithSameUidAlreadyRegisteredErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed.
        /// </summary>
        internal static string Failed {
            get {
                return ResourceManager.GetString("Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to failed.
        /// </summary>
        internal static string FailedLowercase {
            get {
                return ResourceManager.GetString("FailedLowercase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to write the log to the channel. Missed log content:
        ///{0}.
        /// </summary>
        internal static string FailedToWriteLogToChannelErrorMessage {
            get {
                return ResourceManager.GetString("FailedToWriteLogToChannelErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For test.
        /// </summary>
        internal static string ForTest {
            get {
                return ResourceManager.GetString("ForTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following &apos;ITestHostEnvironmentVariableProvider&apos; providers rejected the final environment variables setup:.
        /// </summary>
        internal static string GlobalValidationOfTestHostEnvironmentVariablesFailedErrorMessage {
            get {
                return ResourceManager.GetString("GlobalValidationOfTestHostEnvironmentVariablesFailedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage {0} [option providers] [extension option providers].
        /// </summary>
        internal static string HelpApplicationUsage {
            get {
                return ResourceManager.GetString("HelpApplicationUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execute a .NET Test Application..
        /// </summary>
        internal static string HelpExecuteTestApplication {
            get {
                return ResourceManager.GetString("HelpExecuteTestApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension options:.
        /// </summary>
        internal static string HelpExtensionOptions {
            get {
                return ResourceManager.GetString("HelpExtensionOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     No extension registered..
        /// </summary>
        internal static string HelpNoExtensionRegistered {
            get {
                return ResourceManager.GetString("HelpNoExtensionRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options:.
        /// </summary>
        internal static string HelpOptions {
            get {
                return ResourceManager.GetString("HelpOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;test application runner&gt;.
        /// </summary>
        internal static string HelpTestApplicationRunner {
            get {
                return ResourceManager.GetString("HelpTestApplicationRunner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In process file artifacts produced:.
        /// </summary>
        internal static string InProcessArtifactsProduced {
            get {
                return ResourceManager.GetString("InProcessArtifactsProduced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method &apos;{0}&apos; did not exit successfully.
        /// </summary>
        internal static string InternalLoopAsyncDidNotExitSuccessfullyErrorMessage {
            get {
                return ResourceManager.GetString("InternalLoopAsyncDidNotExitSuccessfullyErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid command line arguments:.
        /// </summary>
        internal static string InvalidCommandLineArguments {
            get {
                return ResourceManager.GetString("InvalidCommandLineArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A duplicate key &apos;{0}&apos; was found.
        /// </summary>
        internal static string JsonConfigurationFileParserDuplicateKeyErrorMessage {
            get {
                return ResourceManager.GetString("JsonConfigurationFileParserDuplicateKeyErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Top-level JSON element must be an object. Instead, &apos;{0}&apos; was found.
        /// </summary>
        internal static string JsonConfigurationFileParserTopLevelElementIsNotAnObjectErrorMessage {
            get {
                return ResourceManager.GetString("JsonConfigurationFileParserTopLevelElementIsNotAnObjectErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported JSON token &apos;{0}&apos; was found.
        /// </summary>
        internal static string JsonConfigurationFileParserUnsupportedTokenErrorMessage {
            get {
                return ResourceManager.GetString("JsonConfigurationFileParserUnsupportedTokenErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JsonRpc server implementation based on the test platform protocol specification..
        /// </summary>
        internal static string JsonRpcTcpServerDescription {
            get {
                return ResourceManager.GetString("JsonRpcTcpServerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JsonRpc server to client handshake, implementation based on the test platform protocol specification..
        /// </summary>
        internal static string JsonRpcTcpServerToSingleClientDescription {
            get {
                return ResourceManager.GetString("JsonRpcTcpServerToSingleClientDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum expected tests policy violation, tests ran {0}, minimum expected {1}.
        /// </summary>
        internal static string MinimumExpectedTestsPolicyViolation {
            get {
                return ResourceManager.GetString("MinimumExpectedTestsPolicyViolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No serializer registered with ID &apos;{0}&apos;.
        /// </summary>
        internal static string NoSerializerRegisteredWithIdErrorMessage {
            get {
                return ResourceManager.GetString("NoSerializerRegisteredWithIdErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No serializer registered with type &apos;{0}&apos;.
        /// </summary>
        internal static string NoSerializerRegisteredWithTypeErrorMessage {
            get {
                return ResourceManager.GetString("NoSerializerRegisteredWithTypeErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not available.
        /// </summary>
        internal static string NotAvailable {
            get {
                return ResourceManager.GetString("NotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not found.
        /// </summary>
        internal static string NotFound {
            get {
                return ResourceManager.GetString("NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Out of process file artifacts produced:.
        /// </summary>
        internal static string OutOfProcessArtifactsProduced {
            get {
                return ResourceManager.GetString("OutOfProcessArtifactsProduced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passed.
        /// </summary>
        internal static string Passed {
            get {
                return ResourceManager.GetString("Passed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to passed.
        /// </summary>
        internal static string PassedLowercase {
            get {
                return ResourceManager.GetString("PassedLowercase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the hostname of the client..
        /// </summary>
        internal static string PlatformCommandLineClientHostOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineClientHostOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the port of the client..
        /// </summary>
        internal static string PlatformCommandLineClientPortOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineClientPortOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force the built-in file logger to write the log synchronously. Useful for scenario where you don&apos;t want to lose any log (i.e. in case of crash). Note that this is slowing down the test execution..
        /// </summary>
        internal static string PlatformCommandLineDiagnosticFileLoggerSynchronousWriteOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineDiagnosticFileLoggerSynchronousWriteOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the diagnostic logging. The default log level is &apos;Trace&apos;. The file will be written in the output directory with the name log_[MMddHHssfff].diag.
        /// </summary>
        internal static string PlatformCommandLineDiagnosticOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineDiagnosticOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;--diagnostic-verbosity&apos; expects a single level argument (&apos;Trace&apos;, &apos;Debug&apos;, &apos;Information&apos;, &apos;Warning&apos;, &apos;Error&apos;, or &apos;Critical&apos;).
        /// </summary>
        internal static string PlatformCommandLineDiagnosticOptionExpectsSingleArgumentErrorMessage {
            get {
                return ResourceManager.GetString("PlatformCommandLineDiagnosticOptionExpectsSingleArgumentErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;--{0}&apos; requires &apos;--diagnostic&apos; to be provided.
        /// </summary>
        internal static string PlatformCommandLineDiagnosticOptionIsMissing {
            get {
                return ResourceManager.GetString("PlatformCommandLineDiagnosticOptionIsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output directory of the diagnostic logging, if not specified the file will be generated inside the default &apos;TestResults&apos; directory..
        /// </summary>
        internal static string PlatformCommandLineDiagnosticOutputDirectoryOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineDiagnosticOutputDirectoryOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prefix for the log file name that will replace &apos;[log]_.&apos;.
        /// </summary>
        internal static string PlatformCommandLineDiagnosticOutputFilePrefixOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineDiagnosticOutputFilePrefixOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Define the level of the verbosity for the --diagnostic. The available values are &apos;Trace&apos;, &apos;Debug&apos;, &apos;Information&apos;, &apos;Warning&apos;, &apos;Error&apos;, and &apos;Critical&apos;.
        /// </summary>
        internal static string PlatformCommandLineDiagnosticVerbosityOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineDiagnosticVerbosityOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List available tests..
        /// </summary>
        internal static string PlatformCommandLineDiscoverTestsOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineDiscoverTestsOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to dotnet test pipe..
        /// </summary>
        internal static string PlatformCommandLineDotnetTestPipe {
            get {
                return ResourceManager.GetString("PlatformCommandLineDotnetTestPipe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid PID &apos;{0}&apos;
        ///{1}.
        /// </summary>
        internal static string PlatformCommandLineExitOnProcessExitInvalidDependentProcess {
            get {
                return ResourceManager.GetString("PlatformCommandLineExitOnProcessExitInvalidDependentProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit the test process if dependent process exits. PID must be provided..
        /// </summary>
        internal static string PlatformCommandLineExitOnProcessExitOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineExitOnProcessExitOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;--{0}&apos; expects a single int PID argument.
        /// </summary>
        internal static string PlatformCommandLineExitOnProcessExitSingleArgument {
            get {
                return ResourceManager.GetString("PlatformCommandLineExitOnProcessExitSingleArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show the command line help..
        /// </summary>
        internal static string PlatformCommandLineHelpOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineHelpOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not report non successful exit value for specific exit codes (e.g. &apos;--ignore-exit-code 8;9&apos; ignore exit code 8 and 9 and will return 0 in these case).
        /// </summary>
        internal static string PlatformCommandLineIgnoreExitCodeOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineIgnoreExitCodeOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display .NET test application information..
        /// </summary>
        internal static string PlatformCommandLineInfoOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineInfoOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;--list-tests&apos; and &apos;--minimum-expected-tests&apos; are incompatible options.
        /// </summary>
        internal static string PlatformCommandLineMinimumExpectedTestsIncompatibleDiscoverTests {
            get {
                return ResourceManager.GetString("PlatformCommandLineMinimumExpectedTestsIncompatibleDiscoverTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;--minimum-expected-tests&apos; expects a single non-zero positive integer value (e.g. &apos;--minimum-expected-tests 10&apos;).
        /// </summary>
        internal static string PlatformCommandLineMinimumExpectedTestsOptionSingleArgument {
            get {
                return ResourceManager.GetString("PlatformCommandLineMinimumExpectedTestsOptionSingleArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not display the startup banner, the copyright message or the telemetry banner..
        /// </summary>
        internal static string PlatformCommandLineNoBannerOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineNoBannerOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the port of the server..
        /// </summary>
        internal static string PlatformCommandLinePortOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLinePortOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;--{0}&apos; expects a single valid port as argument.
        /// </summary>
        internal static string PlatformCommandLinePortOptionSingleArgument {
            get {
                return ResourceManager.GetString("PlatformCommandLinePortOptionSingleArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft Testing Platform command line provider.
        /// </summary>
        internal static string PlatformCommandLineProviderDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineProviderDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Platform command line provider.
        /// </summary>
        internal static string PlatformCommandLineProviderDisplayName {
            get {
                return ResourceManager.GetString("PlatformCommandLineProviderDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory where the test results are going to be placed. If the specified directory doesn&apos;t exist, it&apos;s created. The default is TestResults in the directory that contains the test application..
        /// </summary>
        internal static string PlatformCommandLineResultDirectoryOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineResultDirectoryOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable the server mode..
        /// </summary>
        internal static string PlatformCommandLineServerOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineServerOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For testing purposes.
        /// </summary>
        internal static string PlatformCommandLineSkipBuildersNumberCheckOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineSkipBuildersNumberCheckOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Eventual parent test host controller PID..
        /// </summary>
        internal static string PlatformCommandLineTestHostControllerPIDOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineTestHostControllerPIDOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bridge to VSTest APIs.
        /// </summary>
        internal static string PlatformCommandLineVSTestAdapterModeOptionDescription {
            get {
                return ResourceManager.GetString("PlatformCommandLineVSTestAdapterModeOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process should have exited before we can determine this value.
        /// </summary>
        internal static string ProcessHasNotYetExitedErrorMessage {
            get {
                return ResourceManager.GetString("ProcessHasNotYetExitedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry failed after {0} times.
        /// </summary>
        internal static string RetryFailedAfterTriesErrorMessage {
            get {
                return ResourceManager.GetString("RetryFailedAfterTriesErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This data represents a server log message.
        /// </summary>
        internal static string ServerLogMessageDescription {
            get {
                return ResourceManager.GetString("ServerLogMessageDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server log message.
        /// </summary>
        internal static string ServerLogMessageDisplayName {
            get {
                return ResourceManager.GetString("ServerLogMessageDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates the right test execution filter for server mode.
        /// </summary>
        internal static string ServerTestExecutionFilterFactoryDescription {
            get {
                return ResourceManager.GetString("ServerTestExecutionFilterFactoryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server test execution filter factory.
        /// </summary>
        internal static string ServerTestExecutionFilterFactoryDisplayName {
            get {
                return ResourceManager.GetString("ServerTestExecutionFilterFactoryDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find service of type &apos;{0}&apos;.
        /// </summary>
        internal static string ServiceProviderCannotFindServiceErrorMessage {
            get {
                return ResourceManager.GetString("ServiceProviderCannotFindServiceErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance of type &apos;{0}&apos; is already registered.
        /// </summary>
        internal static string ServiceProviderServiceAlreadyRegistered {
            get {
                return ResourceManager.GetString("ServiceProviderServiceAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instances of type &apos;ITestFramework&apos; should not be registered through the service provider but through &apos;ITestApplicationBuilder.RegisterTestFramework&apos;.
        /// </summary>
        internal static string ServiceProviderShouldNotRegisterTestFramework {
            get {
                return ResourceManager.GetString("ServiceProviderShouldNotRegisterTestFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipped.
        /// </summary>
        internal static string Skipped {
            get {
                return ResourceManager.GetString("Skipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to skipped.
        /// </summary>
        internal static string SkippedLowercase {
            get {
                return ResourceManager.GetString("SkippedLowercase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stack Trace.
        /// </summary>
        internal static string StackTrace {
            get {
                return ResourceManager.GetString("StackTrace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting server. Listening on port &apos;{0}&apos;.
        /// </summary>
        internal static string StartingServer {
            get {
                return ResourceManager.GetString("StartingServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Telemetry
        ///---------
        ///Microsoft Testing Platform collects usage data in order to help us improve your experience. The data is collected by Microsoft and are not shared with anyone.
        ///You can opt-out of telemetry by setting the TESTINGPLATFORM_TELEMETRY_OPTOUT or DOTNET_CLI_TELEMETRY_OPTOUT environment variable to &apos;1&apos; or &apos;true&apos; using your favorite shell.
        ///
        ///Read more about Microsoft Testing Platform telemetry: https://aka.ms/testingplatform/telemetry.
        /// </summary>
        internal static string TelemetryNotice {
            get {
                return ResourceManager.GetString("TelemetryNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Telemetry provider is already set.
        /// </summary>
        internal static string TelemetryProviderAlreadySetErrorMessage {
            get {
                return ResourceManager.GetString("TelemetryProviderAlreadySetErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An &apos;ITestFrameworkInvoker&apos; factory is already set.
        /// </summary>
        internal static string TestAdapterInvokerFactoryAlreadySetErrorMessage {
            get {
                return ResourceManager.GetString("TestAdapterInvokerFactoryAlreadySetErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application has already been built.
        /// </summary>
        internal static string TestApplicationBuilderApplicationAlreadyRegistered {
            get {
                return ResourceManager.GetString("TestApplicationBuilderApplicationAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The test framework adapter factory has already been registered.
        /// </summary>
        internal static string TestApplicationBuilderFrameworkAdapterFactoryAlreadyRegisteredErrorMessage {
            get {
                return ResourceManager.GetString("TestApplicationBuilderFrameworkAdapterFactoryAlreadyRegisteredErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The test framework capabilities factory has already been registered.
        /// </summary>
        internal static string TestApplicationBuilderTestFrameworkCapabilitiesAlreadyRegistered {
            get {
                return ResourceManager.GetString("TestApplicationBuilderTestFrameworkCapabilitiesAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The test framework adapter has not been registered. Use &apos;ITestApplicationBuilder.RegisterTestFramework&apos; to register it.
        /// </summary>
        internal static string TestApplicationBuilderTestFrameworkNotRegistered {
            get {
                return ResourceManager.GetString("TestApplicationBuilderTestFrameworkNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determine the result of the test application execution.
        /// </summary>
        internal static string TestApplicationResultDescription {
            get {
                return ResourceManager.GetString("TestApplicationResultDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test application result.
        /// </summary>
        internal static string TestApplicationResultDisplayName {
            get {
                return ResourceManager.GetString("TestApplicationResultDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VSTest mode only supports a single TestApplicationBuilder per process.
        /// </summary>
        internal static string TestApplicationVSTestModeTooManyBuilders {
            get {
                return ResourceManager.GetString("TestApplicationVSTestModeTooManyBuilders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An &apos;ITestExecutionFilterFactory&apos; factory is already set.
        /// </summary>
        internal static string TEstExecutionFilterFactoryFactoryAlreadySetErrorMessage {
            get {
                return ResourceManager.GetString("TEstExecutionFilterFactoryFactoryAlreadySetErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method &apos;{0}&apos; should not have been called on this proxy object.
        /// </summary>
        internal static string TestFrameworkProxyApiShouldNotBeCalled {
            get {
                return ResourceManager.GetString("TestFrameworkProxyApiShouldNotBeCalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test adapter test session failure.
        /// </summary>
        internal static string TestHostAdapterInvokerFailedTestSessionErrorMessage {
            get {
                return ResourceManager.GetString("TestHostAdapterInvokerFailedTestSessionErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test application process didn&apos;t exit gracefully, exit code is &apos;{0}&apos;.
        /// </summary>
        internal static string TestProcessDidNotExitGracefullyErrorMessage {
            get {
                return ResourceManager.GetString("TestProcessDidNotExitGracefullyErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to acquire semaphore before timeout of &apos;{0}&apos; seconds.
        /// </summary>
        internal static string TimeoutAcquiringSemaphoreErrorMessage {
            get {
                return ResourceManager.GetString("TimeoutAcquiringSemaphoreErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to flush logs before the timeout of &apos;{0}&apos; seconds.
        /// </summary>
        internal static string TimeoutFlushingLogsErrorMessage {
            get {
                return ResourceManager.GetString("TimeoutFlushingLogsErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total.
        /// </summary>
        internal static string Total {
            get {
                return ResourceManager.GetString("Total", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A filter &apos;{0}&apos; should not contain a &apos;/&apos; character.
        /// </summary>
        internal static string TreeNodeFilterCannotContainSlashCharacterErrorMessage {
            get {
                return ResourceManager.GetString("TreeNodeFilterCannotContainSlashCharacterErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use a tree filter to filter down the tests to execute.
        /// </summary>
        internal static string TreeNodeFilterDescription {
            get {
                return ResourceManager.GetString("TreeNodeFilterDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An escape character should not terminate the filter string &apos;{0}&apos;.
        /// </summary>
        internal static string TreeNodeFilterEscapeCharacterShouldNotBeLastErrorMessage {
            get {
                return ResourceManager.GetString("TreeNodeFilterEscapeCharacterShouldNotBeLastErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only the final filter path can contain &apos;**&apos; wildcard.
        /// </summary>
        internal static string TreeNodeFilterOnlyLastLevelCanContainMutiLevelWildcardErrorMessage {
            get {
                return ResourceManager.GetString("TreeNodeFilterOnlyLastLevelCanContainMutiLevelWildcardErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected operator &apos;&amp;&apos; or &apos;|&apos; within filter expression &apos;{0}&apos;.
        /// </summary>
        internal static string TreeNodeFilterOperatorNotAllowedErrorMessage {
            get {
                return ResourceManager.GetString("TreeNodeFilterOperatorNotAllowedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid node path, expected root as first character &apos;{0}&apos;.
        /// </summary>
        internal static string TreeNodeFilterPathShouldStartWithSlashErrorMessage {
            get {
                return ResourceManager.GetString("TreeNodeFilterPathShouldStartWithSlashErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter expression &apos;{0}&apos; contains an unbalanced number of &apos;{1}&apos; &apos;{2}&apos; operators.
        /// </summary>
        internal static string TreeNodeFilterUnbalancedFilterErrorMessage {
            get {
                return ResourceManager.GetString("TreeNodeFilterUnbalancedFilterErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter contains an unexpected &apos;/&apos; operator inside a parenthesized expression.
        /// </summary>
        internal static string TreeNodeFilterUnexpectedSlashOperatorErrorMessage {
            get {
                return ResourceManager.GetString("TreeNodeFilterUnexpectedSlashOperatorErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected telemetry call, the telemetry is disabled..
        /// </summary>
        internal static string UnexpectedCallTelemetryIsDisabledErrorMessage {
            get {
                return ResourceManager.GetString("UnexpectedCallTelemetryIsDisabledErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected exception occured during byte conversion.
        /// </summary>
        internal static string UnexpectedExceptionDuringByteConversionErrorMessage {
            get {
                return ResourceManager.GetString("UnexpectedExceptionDuringByteConversionErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected exception occured in &apos;FileLogger.WriteLogToFileAsync&apos;.
        ///{0}.
        /// </summary>
        internal static string UnexpectedExceptionInFileLoggerErrorMessage {
            get {
                return ResourceManager.GetString("UnexpectedExceptionInFileLoggerErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected state in file &apos;{0}&apos; at line &apos;{1}&apos;.
        /// </summary>
        internal static string UnexpectedStateErrorMessage {
            get {
                return ResourceManager.GetString("UnexpectedStateErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The communication protocol &apos;{0}&apos; is not supported.
        /// </summary>
        internal static string UnknownCommunicationProtocolErrorMessage {
            get {
                return ResourceManager.GetString("UnknownCommunicationProtocolErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This program location is thought to be unreachable. File=&apos;{0}&apos; Line={1}.
        /// </summary>
        internal static string UnreachableLocationErrorMessage {
            get {
                return ResourceManager.GetString("UnreachableLocationErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zero tests ran.
        /// </summary>
        internal static string ZeroTestsRan {
            get {
                return ResourceManager.GetString("ZeroTestsRan", resourceCulture);
            }
        }
    }
}
