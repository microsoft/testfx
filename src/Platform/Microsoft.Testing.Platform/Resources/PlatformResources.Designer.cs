//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Testing.Platform.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class PlatformResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal PlatformResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Testing.Platform.Resources.PlatformResources", typeof(PlatformResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create a test execution filter.
        /// </summary>
        internal static string CannotCreateTestExecutionFilterErrorMessage {
            get {
                return ResourceManager.GetString("CannotCreateTestExecutionFilterErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot remove environment variables at this stage.
        /// </summary>
        internal static string CannotRemoveEnvironmentVariableAtThisStageErrorMessage {
            get {
                return ResourceManager.GetString("CannotRemoveEnvironmentVariableAtThisStageErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension &apos;{0}&apos; tried to remove environment variable &apos;{1}&apos; but it was locked by extension &apos;{2}&apos;.
        /// </summary>
        internal static string CannotRemoveEnvironmentVariableItIsLockedErrorMessage {
            get {
                return ResourceManager.GetString("CannotRemoveEnvironmentVariableItIsLockedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set environment variables at this stage.
        /// </summary>
        internal static string CannotSetEnvironmentVariableAtThisStageErrorMessage {
            get {
                return ResourceManager.GetString("CannotSetEnvironmentVariableAtThisStageErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension &apos;{0}&apos; tried to set environment variable &apos;{1}&apos; but it was locked by extension &apos;{2}&apos;.
        /// </summary>
        internal static string CannotSetEnvironmentVariableItIsLockedErrorMessage {
            get {
                return ResourceManager.GetString("CannotSetEnvironmentVariableItIsLockedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot start process &apos;{0}&apos;.
        /// </summary>
        internal static string CannotStartProcessErrorMessage {
            get {
                return ResourceManager.GetString("CannotStartProcessErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The same instance of &apos;CompositeExtensonFactory&apos; is already registered.
        /// </summary>
        internal static string CompositeServiceFactoryInstanceAlreadyRegistered {
            get {
                return ResourceManager.GetString("CompositeServiceFactoryInstanceAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find the default json configuration.
        /// </summary>
        internal static string ConfigurationManagerCannotFindDefaultJsonConfigurationErrorMessage {
            get {
                return ResourceManager.GetString("ConfigurationManagerCannotFindDefaultJsonConfigurationErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates the right test execution filter for console mode.
        /// </summary>
        internal static string ConsoleTestExecutionFilterFactoryDescription {
            get {
                return ResourceManager.GetString("ConsoleTestExecutionFilterFactoryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Console test execution filter factory.
        /// </summary>
        internal static string ConsoleTestExecutionFilterFactoryDisplayName {
            get {
                return ResourceManager.GetString("ConsoleTestExecutionFilterFactoryDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider &apos;{0}&apos; (UID: {1}) failed with error: {2}.
        /// </summary>
        internal static string EnvironmentVariableProviderFailedWithError {
            get {
                return ResourceManager.GetString("EnvironmentVariableProviderFailedWithError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension of type &apos;{0}&apos; is not implementing the required &apos;{1}&apos; interface.
        /// </summary>
        internal static string ExtensionDoesNotImplementGivenInterfaceErrorMessage {
            get {
                return ResourceManager.GetString("ExtensionDoesNotImplementGivenInterfaceErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another extension with same the same UID &apos;{0}&apos; has already been registered. Registered extension is of type &apos;{1}&apos;.
        /// </summary>
        internal static string ExtensionWithSameUidAlreadyRegisteredErrorMessage {
            get {
                return ResourceManager.GetString("ExtensionWithSameUidAlreadyRegisteredErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following &apos;ITestHostEnvironmentVariableProvider&apos; providers rejected the final environment variables setup:.
        /// </summary>
        internal static string GlobalValidationOfTestHostEnvironmentVariablesFailedErrorMessage {
            get {
                return ResourceManager.GetString("GlobalValidationOfTestHostEnvironmentVariablesFailedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A duplicate key &apos;{0}&apos; was found.
        /// </summary>
        internal static string JsonConfigurationFileParserDuplicateKeyErrorMessage {
            get {
                return ResourceManager.GetString("JsonConfigurationFileParserDuplicateKeyErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Top-level JSON element must be an object. Instead, &apos;{0}&apos; was found.
        /// </summary>
        internal static string JsonConfigurationFileParserTopLevelElementIsNotAnObjectErrorMessage {
            get {
                return ResourceManager.GetString("JsonConfigurationFileParserTopLevelElementIsNotAnObjectErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported JSON token &apos;{0}&apos; was found.
        /// </summary>
        internal static string JsonConfigurationFileParserUnsupportedTokenErrorMessage {
            get {
                return ResourceManager.GetString("JsonConfigurationFileParserUnsupportedTokenErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process should have exited before we can determine this value.
        /// </summary>
        internal static string ProcessHasNotYetExitedErrorMessage {
            get {
                return ResourceManager.GetString("ProcessHasNotYetExitedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates the right test execution filter for server mode.
        /// </summary>
        internal static string ServerTestExecutionFilterFactoryDescription {
            get {
                return ResourceManager.GetString("ServerTestExecutionFilterFactoryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server test execution filter factory.
        /// </summary>
        internal static string ServerTestExecutionFilterFactoryDisplayName {
            get {
                return ResourceManager.GetString("ServerTestExecutionFilterFactoryDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find service of type &apos;{0}&apos;.
        /// </summary>
        internal static string ServiceProviderCannotFindServiceErrorMessage {
            get {
                return ResourceManager.GetString("ServiceProviderCannotFindServiceErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance of type &apos;{0}&apos; is already registered.
        /// </summary>
        internal static string ServiceProviderServiceAlreadyRegistered {
            get {
                return ResourceManager.GetString("ServiceProviderServiceAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instances of type &apos;ITestFramework&apos; should not be registered through the service provider but through &apos;ITestApplicationBuilder.RegisterTestFramework&apos;.
        /// </summary>
        internal static string ServiceProviderShouldNotRegisterTestFramework {
            get {
                return ResourceManager.GetString("ServiceProviderShouldNotRegisterTestFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An &apos;ITestFrameworkInvoker&apos; factory is already set.
        /// </summary>
        internal static string TestAdapterInvokerFactoryAlreadySetErrorMessage {
            get {
                return ResourceManager.GetString("TestAdapterInvokerFactoryAlreadySetErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application has already been built.
        /// </summary>
        internal static string TestApplicationBuilderApplicationAlreadyRegistered {
            get {
                return ResourceManager.GetString("TestApplicationBuilderApplicationAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The test framework adapter factory has already been registered.
        /// </summary>
        internal static string TestApplicationBuilderFrameworkAdapterFactoryAlreadyRegisteredErrorMessage {
            get {
                return ResourceManager.GetString("TestApplicationBuilderFrameworkAdapterFactoryAlreadyRegisteredErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The test framework capabilities factory has already been registered.
        /// </summary>
        internal static string TestApplicationBuilderTestFrameworkCapabilitiesAlreadyRegistered {
            get {
                return ResourceManager.GetString("TestApplicationBuilderTestFrameworkCapabilitiesAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The test framework adapter has not been registered. Use &apos;RegisterTestFrameworkAdapter&apos; to register it.
        /// </summary>
        internal static string TestApplicationBuilderTestFrameworkNotRegistered {
            get {
                return ResourceManager.GetString("TestApplicationBuilderTestFrameworkNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determine the result of the test application execution.
        /// </summary>
        internal static string TestApplicationResultDescription {
            get {
                return ResourceManager.GetString("TestApplicationResultDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test application result.
        /// </summary>
        internal static string TestApplicationResultDisplayName {
            get {
                return ResourceManager.GetString("TestApplicationResultDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VSTest mode only supports a single TestApplicationBuilder per process.
        /// </summary>
        internal static string TestApplicationVSTestModeTooManyBuilders {
            get {
                return ResourceManager.GetString("TestApplicationVSTestModeTooManyBuilders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An &apos;ITestExecutionFilterFactory&apos; factory is already set.
        /// </summary>
        internal static string TEstExecutionFilterFactoryFactoryAlreadySetErrorMessage {
            get {
                return ResourceManager.GetString("TEstExecutionFilterFactoryFactoryAlreadySetErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method &apos;{0}&apos; should not have been called on this proxy object.
        /// </summary>
        internal static string TestFrameworkProxyApiShouldNotBeCalled {
            get {
                return ResourceManager.GetString("TestFrameworkProxyApiShouldNotBeCalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test adapter test session failure.
        /// </summary>
        internal static string TestHostAdapterInvokerFailedTestSessionErrorMessage {
            get {
                return ResourceManager.GetString("TestHostAdapterInvokerFailedTestSessionErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test application process didn&apos;t exit gracefully, exit code is &apos;{0}&apos;.
        /// </summary>
        internal static string TestProcessDidNotExitGracefullyErrorMessage {
            get {
                return ResourceManager.GetString("TestProcessDidNotExitGracefullyErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A filter &apos;{0}&apos; should not contain a &apos;/&apos; character.
        /// </summary>
        internal static string TreeNodeFilterCannotContainSlashCharacterErrorMessage {
            get {
                return ResourceManager.GetString("TreeNodeFilterCannotContainSlashCharacterErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An escape character should not terminate the filter string &apos;{0}&apos;.
        /// </summary>
        internal static string TreeNodeFilterEscapeCharacterShouldNotBeLastErrorMessage {
            get {
                return ResourceManager.GetString("TreeNodeFilterEscapeCharacterShouldNotBeLastErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only the final filter path can contain &apos;**&apos; wildcard.
        /// </summary>
        internal static string TreeNodeFilterOnlyLastLevelCanContainMutiLevelWildcardErrorMessage {
            get {
                return ResourceManager.GetString("TreeNodeFilterOnlyLastLevelCanContainMutiLevelWildcardErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected operator &apos;&amp;&apos; or &apos;|&apos; within filter expression &apos;{0}&apos;.
        /// </summary>
        internal static string TreeNodeFilterOperatorNotAllowedErrorMessage {
            get {
                return ResourceManager.GetString("TreeNodeFilterOperatorNotAllowedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid node path, expected root as first character &apos;{0}&apos;.
        /// </summary>
        internal static string TreeNodeFilterPathShouldStartWithSlashErrorMessage {
            get {
                return ResourceManager.GetString("TreeNodeFilterPathShouldStartWithSlashErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter expression &apos;{0}&apos; contains an unbalanced number of &apos;{1}&apos; &apos;{2}&apos; operators.
        /// </summary>
        internal static string TreeNodeFilterUnbalancedFilterErrorMessage {
            get {
                return ResourceManager.GetString("TreeNodeFilterUnbalancedFilterErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter contains an unexpected &apos;/&apos; operator inside a parenthesized expression.
        /// </summary>
        internal static string TreeNodeFilterUnexpectedSlashOperatorErrorMessage {
            get {
                return ResourceManager.GetString("TreeNodeFilterUnexpectedSlashOperatorErrorMessage", resourceCulture);
            }
        }
    }
}
