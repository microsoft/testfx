#nullable enable
Microsoft.Testing.Platform.Extensions.IDataConsumer
Microsoft.Testing.Platform.Extensions.IDataConsumer.ConsumeAsync(Microsoft.Testing.Platform.Extensions.Messages.IDataProducer! dataProducer, Microsoft.Testing.Platform.Extensions.Messages.IData! value, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.Testing.Platform.Extensions.IDataConsumer.DataTypesConsumed.get -> System.Type![]!
Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty.Equals(Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty? other) -> bool
Microsoft.Testing.Platform.Extensions.Messages.FileLocationProperty.Equals(Microsoft.Testing.Platform.Extensions.Messages.FileLocationProperty? other) -> bool
Microsoft.Testing.Platform.Extensions.Messages.FileLocationProperty.FileLocationProperty(string! filePath, Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan lineSpan) -> void
Microsoft.Testing.Platform.Extensions.Messages.LinePosition.LinePosition(int line, int column) -> void
Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan.LinePositionSpan(Microsoft.Testing.Platform.Extensions.Messages.LinePosition start, Microsoft.Testing.Platform.Extensions.Messages.LinePosition end) -> void
Microsoft.Testing.Platform.Extensions.Messages.StepTimingInfo.StepTimingInfo(string! id, string! description, Microsoft.Testing.Platform.Extensions.Messages.TimingInfo timing) -> void
Microsoft.Testing.Platform.Extensions.Messages.TestFileLocationProperty.TestFileLocationProperty(string! filePath, Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan lineSpan) -> void
Microsoft.Testing.Platform.Extensions.Messages.TestNodeStateProperty.Equals(Microsoft.Testing.Platform.Extensions.Messages.TestNodeStateProperty? other) -> bool
Microsoft.Testing.Platform.Extensions.Messages.TimingInfo.TimingInfo(System.DateTimeOffset startTime, System.DateTimeOffset endTime, System.TimeSpan duration) -> void
Microsoft.Testing.Platform.Extensions.TestHost.ITestHostApplicationLifetime.AfterRunAsync(int exitCode, System.Threading.CancellationToken cancellation) -> System.Threading.Tasks.Task!
Microsoft.Testing.Platform.Extensions.TestHost.ITestHostApplicationLifetime.BeforeRunAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.Testing.Platform.Extensions.TestHost.ITestSessionLifetimeHandler.OnTestSessionFinishingAsync(Microsoft.Testing.Platform.Services.ITestSessionContext! testSessionContext) -> System.Threading.Tasks.Task!
Microsoft.Testing.Platform.Extensions.TestHost.ITestSessionLifetimeHandler.OnTestSessionStartingAsync(Microsoft.Testing.Platform.Services.ITestSessionContext! testSessionContext) -> System.Threading.Tasks.Task!
Microsoft.Testing.Platform.OutputDevice.IOutputDevice.DisplayAsync(Microsoft.Testing.Platform.Extensions.OutputDevice.IOutputDeviceDataProducer! producer, Microsoft.Testing.Platform.OutputDevice.IOutputDeviceData! data, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.Testing.Platform.Services.ITestSessionContext
Microsoft.Testing.Platform.Services.ITestSessionContext.CancellationToken.get -> System.Threading.CancellationToken
Microsoft.Testing.Platform.Services.ITestSessionContext.SessionUid.get -> Microsoft.Testing.Platform.TestHost.SessionUid
*REMOVED*[TPEXP]Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty.StandardErrorProperty(string! StandardError) -> void
*REMOVED*[TPEXP]Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty.StandardOutputProperty(string! StandardOutput) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.DiscoveredTestNodeStateProperty.DiscoveredTestNodeStateProperty(string? Explanation = null) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty.FileArtifactProperty(System.IO.FileInfo! FileInfo, string! DisplayName, string? Description = null) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.InProgressTestNodeStateProperty.InProgressTestNodeStateProperty(string? Explanation = null) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.PassedTestNodeStateProperty.PassedTestNodeStateProperty(string? Explanation = null) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.SkippedTestNodeStateProperty.SkippedTestNodeStateProperty(string? Explanation = null) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestMetadataProperty.TestMetadataProperty(string! Key, string! Value) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.TestMethodIdentifierProperty(string! AssemblyFullName, string! Namespace, string! TypeName, string! MethodName, int MethodArity, string![]! ParameterTypeFullNames, string! ReturnTypeFullName) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestNodeStateProperty.TestNodeStateProperty(string? Explanation) -> void
Microsoft.Testing.Platform.TestHost.ITestHostManager.AddDataConsumer(System.Func<System.IServiceProvider!, Microsoft.Testing.Platform.Extensions.IDataConsumer!>! dataConsumerFactory) -> void
[TPEXP]Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty.Equals(Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty? other) -> bool
[TPEXP]Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty.StandardErrorProperty(string! standardError) -> void
[TPEXP]Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty.Equals(Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty? other) -> bool
[TPEXP]Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty.StandardOutputProperty(string! standardOutput) -> void
Microsoft.Testing.Platform.Extensions.Messages.DiscoveredTestNodeStateProperty.DiscoveredTestNodeStateProperty(string? explanation = null) -> void
Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty.FileArtifactProperty(System.IO.FileInfo! fileInfo, string! displayName, string? description = null) -> void
Microsoft.Testing.Platform.Extensions.Messages.InProgressTestNodeStateProperty.InProgressTestNodeStateProperty(string? explanation = null) -> void
Microsoft.Testing.Platform.Extensions.Messages.PassedTestNodeStateProperty.PassedTestNodeStateProperty(string? explanation = null) -> void
Microsoft.Testing.Platform.Extensions.Messages.SkippedTestNodeStateProperty.SkippedTestNodeStateProperty(string? explanation = null) -> void
Microsoft.Testing.Platform.Extensions.Messages.TestMetadataProperty.TestMetadataProperty(string! key, string! value) -> void
Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.TestMethodIdentifierProperty(string! assemblyFullName, string! namespace, string! typeName, string! methodName, int methodArity, string![]! parameterTypeFullNames, string! returnTypeFullName) -> void
Microsoft.Testing.Platform.Extensions.Messages.TestNodeStateProperty.TestNodeStateProperty(string? explanation) -> void
*REMOVED*[TPEXP]Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty.Deconstruct(out string! StandardError) -> void
*REMOVED*[TPEXP]Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty.StandardError.init -> void
*REMOVED*[TPEXP]Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty.StandardErrorProperty(Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty! original) -> void
*REMOVED*[TPEXP]Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty.Deconstruct(out string! StandardOutput) -> void
*REMOVED*[TPEXP]Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty.StandardOutput.init -> void
*REMOVED*[TPEXP]Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty.StandardOutputProperty(Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty! original) -> void
*REMOVED*[TPEXP]static Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty.operator !=(Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty? left, Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty? right) -> bool
*REMOVED*[TPEXP]static Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty.operator ==(Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty? left, Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty? right) -> bool
*REMOVED*[TPEXP]static Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty.operator !=(Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty? left, Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty? right) -> bool
*REMOVED*[TPEXP]static Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty.operator ==(Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty? left, Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty? right) -> bool
*REMOVED*[TPEXP]virtual Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty.<Clone>$() -> Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty!
*REMOVED*[TPEXP]virtual Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty.EqualityContract.get -> System.Type!
*REMOVED*[TPEXP]virtual Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty.Equals(Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty? other) -> bool
*REMOVED*[TPEXP]virtual Microsoft.Testing.Platform.Extensions.Messages.StandardErrorProperty.PrintMembers(System.Text.StringBuilder! builder) -> bool
*REMOVED*[TPEXP]virtual Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty.<Clone>$() -> Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty!
*REMOVED*[TPEXP]virtual Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty.EqualityContract.get -> System.Type!
*REMOVED*[TPEXP]virtual Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty.Equals(Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty? other) -> bool
*REMOVED*[TPEXP]virtual Microsoft.Testing.Platform.Extensions.Messages.StandardOutputProperty.PrintMembers(System.Text.StringBuilder! builder) -> bool
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty.Deconstruct(out System.IO.FileInfo! FileInfo, out string! DisplayName, out string? Description) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty.Description.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty.DisplayName.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty.FileArtifactProperty(Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty! original) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty.FileInfo.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.FileLocationProperty.FileLocationProperty(string! FilePath, Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan LineSpan) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.FileLocationProperty.FilePath.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.FileLocationProperty.LineSpan.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.KeyValuePairStringProperty
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.KeyValuePairStringProperty.Key.get -> string!
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.KeyValuePairStringProperty.Key.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.KeyValuePairStringProperty.KeyValuePairStringProperty(string! Key, string! Value) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.KeyValuePairStringProperty.Value.get -> string!
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.KeyValuePairStringProperty.Value.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.LinePosition.Column.set -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.LinePosition.Line.set -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.LinePosition.LinePosition(int Line, int Column) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan.End.set -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan.LinePositionSpan(Microsoft.Testing.Platform.Extensions.Messages.LinePosition Start, Microsoft.Testing.Platform.Extensions.Messages.LinePosition End) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan.Start.set -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.StepTimingInfo.Description.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.StepTimingInfo.Id.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.StepTimingInfo.StepTimingInfo(string! Id, string! Description, Microsoft.Testing.Platform.Extensions.Messages.TimingInfo Timing) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.StepTimingInfo.Timing.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestFileLocationProperty.TestFileLocationProperty(string! FilePath, Microsoft.Testing.Platform.Extensions.Messages.LinePositionSpan LineSpan) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestMetadataProperty.Key.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestMetadataProperty.Value.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.AssemblyFullName.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.Deconstruct(out string! AssemblyFullName, out string! Namespace, out string! TypeName, out string! MethodName, out int MethodArity, out string![]! ParameterTypeFullNames, out string! ReturnTypeFullName) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.MethodArity.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.MethodName.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.Namespace.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.ParameterTypeFullNames.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.ReturnTypeFullName.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.TestMethodIdentifierProperty(string! AssemblyFullName, string! Namespace, string! TypeName, string! MethodName, string![]! ParameterTypeFullNames, string! ReturnTypeFullName) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestMethodIdentifierProperty.TypeName.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestNodeFileArtifact
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestNodeFileArtifact.TestNode.get -> Microsoft.Testing.Platform.Extensions.Messages.TestNode!
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestNodeFileArtifact.TestNodeFileArtifact(Microsoft.Testing.Platform.TestHost.SessionUid sessionUid, Microsoft.Testing.Platform.Extensions.Messages.TestNode! testNode, System.IO.FileInfo! fileInfo, string! displayName, string? description = null) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestNodeStateProperty.Explanation.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TestNodeStateProperty.TestNodeStateProperty(string? Explanation) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TimingInfo.Duration.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TimingInfo.EndTime.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TimingInfo.StartTime.init -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.Messages.TimingInfo.TimingInfo(System.DateTimeOffset StartTime, System.DateTimeOffset EndTime, System.TimeSpan Duration) -> void
*REMOVED*Microsoft.Testing.Platform.Extensions.TestHost.IDataConsumer
*REMOVED*Microsoft.Testing.Platform.Extensions.TestHost.IDataConsumer.ConsumeAsync(Microsoft.Testing.Platform.Extensions.Messages.IDataProducer! dataProducer, Microsoft.Testing.Platform.Extensions.Messages.IData! value, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
*REMOVED*Microsoft.Testing.Platform.Extensions.TestHost.IDataConsumer.DataTypesConsumed.get -> System.Type![]!
*REMOVED*Microsoft.Testing.Platform.Extensions.TestHost.ITestApplicationLifecycleCallbacks
*REMOVED*Microsoft.Testing.Platform.Extensions.TestHost.ITestApplicationLifecycleCallbacks.AfterRunAsync(int exitCode, System.Threading.CancellationToken cancellation) -> System.Threading.Tasks.Task!
*REMOVED*Microsoft.Testing.Platform.Extensions.TestHost.ITestApplicationLifecycleCallbacks.BeforeRunAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
*REMOVED*Microsoft.Testing.Platform.Extensions.TestHost.ITestSessionLifetimeHandler.OnTestSessionFinishingAsync(Microsoft.Testing.Platform.TestHost.SessionUid sessionUid, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
*REMOVED*Microsoft.Testing.Platform.Extensions.TestHost.ITestSessionLifetimeHandler.OnTestSessionStartingAsync(Microsoft.Testing.Platform.TestHost.SessionUid sessionUid, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
*REMOVED*Microsoft.Testing.Platform.OutputDevice.IOutputDevice.DisplayAsync(Microsoft.Testing.Platform.Extensions.OutputDevice.IOutputDeviceDataProducer! producer, Microsoft.Testing.Platform.OutputDevice.IOutputDeviceData! data) -> System.Threading.Tasks.Task!
*REMOVED*Microsoft.Testing.Platform.TestHost.ITestHostManager.AddDataConsumer(System.Func<System.IServiceProvider!, Microsoft.Testing.Platform.Extensions.TestHost.IDataConsumer!>! dataConsumerFactory) -> void
*REMOVED*Microsoft.Testing.Platform.TestHost.ITestHostManager.AddTestApplicationLifecycleCallbacks(System.Func<System.IServiceProvider!, Microsoft.Testing.Platform.Extensions.TestHost.ITestApplicationLifecycleCallbacks!>! testApplicationLifecycleCallbacks) -> void
*REMOVED*Microsoft.Testing.Platform.TestHost.TestSessionContext.Client.get -> Microsoft.Testing.Platform.TestHost.ClientInfo!
*REMOVED*override Microsoft.Testing.Platform.Extensions.Messages.TestNodeFileArtifact.ToString() -> string!
*REMOVED*static Microsoft.Testing.Platform.Configurations.ConfigurationExtensions.GetTestHostWorkingDirectory(this Microsoft.Testing.Platform.Configurations.IConfiguration! configuration) -> string!
*REMOVED*static Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty.operator !=(Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty? left, Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty? right) -> bool
*REMOVED*static Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty.operator ==(Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty? left, Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty? right) -> bool
*REMOVED*virtual Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty.<Clone>$() -> Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty!
*REMOVED*virtual Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty.EqualityContract.get -> System.Type!
*REMOVED*virtual Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty.Equals(Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty? other) -> bool
*REMOVED*virtual Microsoft.Testing.Platform.Extensions.Messages.FileArtifactProperty.PrintMembers(System.Text.StringBuilder! builder) -> bool
Microsoft.Testing.Platform.Requests.ITestExecutionFilter.Matches(Microsoft.Testing.Platform.Extensions.Messages.TestNode! testNode) -> bool
Microsoft.Testing.Platform.Requests.TestNodeUidListFilter.Matches(Microsoft.Testing.Platform.Extensions.Messages.TestNode! testNode) -> bool
[TPEXP]Microsoft.Testing.Platform.Requests.AggregateTestExecutionFilter
[TPEXP]Microsoft.Testing.Platform.Requests.AggregateTestExecutionFilter.AggregateTestExecutionFilter(System.Collections.Generic.IReadOnlyCollection<Microsoft.Testing.Platform.Requests.ITestExecutionFilter!>! innerFilters) -> void
[TPEXP]Microsoft.Testing.Platform.Requests.AggregateTestExecutionFilter.InnerFilters.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Testing.Platform.Requests.ITestExecutionFilter!>!
[TPEXP]Microsoft.Testing.Platform.Requests.AggregateTestExecutionFilter.Matches(Microsoft.Testing.Platform.Extensions.Messages.TestNode! testNode) -> bool
[TPEXP]Microsoft.Testing.Platform.Requests.IRequestFilterProvider
[TPEXP]Microsoft.Testing.Platform.Requests.IRequestFilterProvider.CanHandle(System.IServiceProvider! serviceProvider) -> bool
[TPEXP]Microsoft.Testing.Platform.Requests.IRequestFilterProvider.CreateFilterAsync(System.IServiceProvider! serviceProvider) -> System.Threading.Tasks.Task<Microsoft.Testing.Platform.Requests.ITestExecutionFilter!>!
[TPEXP]Microsoft.Testing.Platform.Requests.ITestExecutionFilterFactory
[TPEXP]Microsoft.Testing.Platform.Requests.ITestExecutionFilterFactory.TryCreateAsync() -> System.Threading.Tasks.Task<(bool Success, Microsoft.Testing.Platform.Requests.ITestExecutionFilter? TestExecutionFilter)>!
[TPEXP]Microsoft.Testing.Platform.Requests.ITestExecutionRequestContext
[TPEXP]Microsoft.Testing.Platform.Requests.ITestExecutionRequestContext.TestNodes.get -> System.Collections.Generic.ICollection<Microsoft.Testing.Platform.Extensions.Messages.TestNode!>?
[TPEXP]Microsoft.Testing.Platform.Requests.NopRequestFilterProvider
[TPEXP]Microsoft.Testing.Platform.Requests.NopRequestFilterProvider.NopRequestFilterProvider() -> void
[TPEXP]Microsoft.Testing.Platform.Requests.TestNodeUidRequestFilterProvider
[TPEXP]Microsoft.Testing.Platform.Requests.TestNodeUidRequestFilterProvider.TestNodeUidRequestFilterProvider() -> void
[TPEXP]Microsoft.Testing.Platform.Requests.TreeNodeRequestFilterProvider
[TPEXP]Microsoft.Testing.Platform.Requests.TreeNodeRequestFilterProvider.TreeNodeRequestFilterProvider() -> void
[TPEXP]Microsoft.Testing.Platform.TestHost.ITestHostManager.AddRequestFilterProvider(System.Func<System.IServiceProvider!, Microsoft.Testing.Platform.Requests.IRequestFilterProvider!>! requestFilterProvider) -> void
[TPEXP]Microsoft.Testing.Platform.TestHost.ITestHostManager.AddTestExecutionFilterFactory(System.Func<System.IServiceProvider!, Microsoft.Testing.Platform.Requests.ITestExecutionFilterFactory!>! testExecutionFilterFactory) -> void
