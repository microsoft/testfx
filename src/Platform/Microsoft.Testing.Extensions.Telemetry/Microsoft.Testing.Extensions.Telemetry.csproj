<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;$(MicrosoftTestingTargetFrameworks)</TargetFrameworks>
  </PropertyGroup>

  <!-- NuGet properties -->
  <PropertyGroup>
    <PackageDescription>
      <![CDATA[Microsoft Testing is a set of platform, framework and protocol intended to make it possible to run any test on any target or device.

This package provides telemetry for the platform.]]>
    </PackageDescription>
  </PropertyGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Microsoft.Testing.Platform.UnitTests" Key="$(VsPublicKey)" />
    <InternalsVisibleTo Include="Microsoft.Testing.Extensions.UnitTests" Key="$(VsPublicKey)" />
    <InternalsVisibleTo Include="DynamicProxyGenAssembly2" Key="$(MoqPublicKey)" />
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="BannedSymbols.txt" />
    <AdditionalFiles Include="PublicAPI\PublicAPI.Shipped.txt" />
    <AdditionalFiles Include="PublicAPI\PublicAPI.Unshipped.txt" />
  </ItemGroup>

  <!-- Nuget package layout -->
  <!-- Nuget folders https://learn.microsoft.com/nuget/create-packages/creating-a-package#from-a-convention-based-working-directory -->
  <ItemGroup>
    <Content Include="buildMultiTargeting/**">
      <Pack>true</Pack>
      <PackagePath>buildMultiTargeting</PackagePath>
    </Content>
    <TfmSpecificPackageFile Include="buildTransitive/**">
      <PackagePath>buildTransitive/$(TargetFramework)</PackagePath>
    </TfmSpecificPackageFile>
    <TfmSpecificPackageFile Include="build/**">
      <PackagePath>build/$(TargetFramework)</PackagePath>
    </TfmSpecificPackageFile>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.ApplicationInsights" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="$(RepoRoot)src\Platform\Microsoft.Testing.Platform\Microsoft.Testing.Platform.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Resources\ExtensionResources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>ExtensionResources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Resources\ExtensionResources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>ExtensionResources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

</Project>
