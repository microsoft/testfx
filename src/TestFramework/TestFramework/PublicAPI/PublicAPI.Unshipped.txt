#nullable enable
static Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEquivalent<T>(System.Collections.ICollection? expected, System.Collections.ICollection? actual, System.Collections.Generic.IEqualityComparer<T>? comparer) -> void
static Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEquivalent<T>(System.Collections.ICollection? expected, System.Collections.ICollection? actual, System.Collections.Generic.IEqualityComparer<T>? comparer, string? message) -> void
static Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEquivalent<T>(System.Collections.ICollection? expected, System.Collections.ICollection? actual, System.Collections.Generic.IEqualityComparer<T>? comparer, string? message, params object?[]? parameters) -> void
static Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEquivalent<T>(System.Collections.ICollection? expected, System.Collections.ICollection? actual, System.Collections.Generic.IEqualityComparer<T>? comparer) -> void
static Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEquivalent<T>(System.Collections.ICollection? expected, System.Collections.ICollection? actual, System.Collections.Generic.IEqualityComparer<T>? comparer, string? message) -> void
static Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEquivalent<T>(System.Collections.ICollection? expected, System.Collections.ICollection? actual, System.Collections.Generic.IEqualityComparer<T>? comparer, string? message, params object?[]? parameters) -> void
static Microsoft.VisualStudio.TestTools.UnitTesting.DataRowAttribute.TestIdGenerationStrategy.get -> Microsoft.VisualStudio.TestTools.UnitTesting.TestIdGenerationStrategy
