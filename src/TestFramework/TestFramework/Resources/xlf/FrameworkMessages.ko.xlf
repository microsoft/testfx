<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" original="../FrameworkMessages.resx" target-language="ko">
    <body>
      <trans-unit id="AccessStringInvalidSyntax">
        <source>Access string has invalid syntax.</source>
        <target state="translated">액세스 문자열의 구문이 잘못되었습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="ActualHasMismatchedElements">
        <source>The expected collection contains {1} occurrence(s) of &lt;{2}&gt;. The actual collection contains {3} occurrence(s). {0}</source>
        <target state="translated">필요한 컬렉션에 &lt;{2}&gt;은(는) {1}개가 포함되어야 하는데 실제 컬렉션에는 {3}개가 포함되어 있습니다. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AllItemsAreUniqueFailMsg">
        <source>Duplicate item found:&lt;{1}&gt;. {0}</source>
        <target state="translated">중복된 항목이 있습니다. &lt;{1}&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreEqualFailMsg">
        <source>Expected:&lt;{1}&gt;. Actual:&lt;{2}&gt;. {0}</source>
        <target state="translated">예상 값: &lt;{1}&gt;. 실제 값: &lt;{2}&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreEqualDeltaFailMsg">
        <source>Expected a difference no greater than &lt;{3}&gt; between expected value &lt;{1}&gt; and actual value &lt;{2}&gt;. {0}</source>
        <target state="translated">예상 값 &lt;{1}&gt;과(와) 실제 값 &lt;{2}&gt;의 차이가 &lt;{3}&gt;보다 크지 않아야 합니다. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreEqualCaseFailMsg">
        <source>Expected:&lt;{1}&gt;. Case is different for actual value:&lt;{2}&gt;. {0}</source>
        <target state="translated">예상 값: &lt;{1}&gt;. 대/소문자가 다른 실제 값: &lt;{2}&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreEqualDifferentTypesFailMsg">
        <source>Expected:&lt;{1} ({2})&gt;. Actual:&lt;{3} ({4})&gt;. {0}</source>
        <target state="translated">예상 값: &lt;{1} ({2})&gt;. 실제 값: &lt;{3} ({4})&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreNotEqualFailMsg">
        <source>Expected any value except:&lt;{1}&gt;. Actual:&lt;{2}&gt;. {0}</source>
        <target state="translated">예상 값: &lt;{1}&gt;을(를) 제외한 모든 값. 실제 값: &lt;{2}&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreNotEqualDeltaFailMsg">
        <source>Expected a difference greater than &lt;{3}&gt; between expected value &lt;{1}&gt; and actual value &lt;{2}&gt;. {0}</source>
        <target state="translated">예상 값 &lt;{1}&gt;과(와) 실제 값 &lt;{2}&gt;의 차이가 &lt;{3}&gt;보다 커야 합니다. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreSameGivenValues">
        <source>Do not pass value types to AreSame(). Values converted to Object will never be the same. Consider using AreEqual(). {0}</source>
        <target state="translated">AreSame()에 값 형식을 전달하면 안 됩니다. Object로 변환된 값은 동일한 값으로 간주되지 않습니다. AreEqual()을 사용해 보세요. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="BothCollectionsEmpty">
        <source>Both collections are empty. {0}</source>
        <target state="translated">두 컬렉션이 모두 비어 있습니다. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="BothCollectionsSameElements">
        <source>Both collection contain same elements.</source>
        <target state="translated">두 컬렉션에 같은 요소가 포함되어 있습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="BothCollectionsSameReference">
        <source>Both collection references point to the same collection object. {0}</source>
        <target state="translated">두 컬렉션 참조가 동일한 컬렉션 개체를 가리킵니다. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="BothSameElements">
        <source>Both collections contain the same elements. {0}</source>
        <target state="translated">두 컬렉션에 같은 요소가 포함되어 있습니다. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="CollectionEqualReason">
        <source>{0}. {1}</source>
        <target state="translated">{0}. {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ContainsFail">
        <source>String '{0}' does not contain string '{1}'. {2}.</source>
        <target state="translated">'{0}' 문자열이 '{1}' 문자열을 포함하지 않습니다. {2}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="ContainsItemFailMsg">
        <source>Expected collection to contain the specified item. {0}</source>
        <target state="translated">지정한 항목을 포함할 컬렉션이 필요합니다. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ContainsPredicateFailMsg">
        <source>Expected at least one item to match the predicate. {0}</source>
        <target state="translated">조건자와 일치하는 항목이 하나 이상 필요합니다. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ContainsSingleFailMsg">
        <source>Expected collection to contain exactly one element but found {1} element(s). {0}</source>
        <target state="translated">정확히 하나의 요소를 포함할 컬렉션이 필요하지만 {1}개 요소가 발견되었습니다. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ContainsSingleMatchFailMsg">
        <source>Expected exactly one item to match the predicate but found {1} item(s). {0}</source>
        <target state="translated">조건자에 일치하는 항목이 하나만 필요하지만 {1}개 항목이 발견되었습니다. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="DoesNotContainFail">
        <source>String '{0}' does contain string '{1}'. {2}.</source>
        <target state="translated">'{0}' 문자열에 '{1}' 문자열이 포함되어 있습니다. {2}.</target>
        <note />
      </trans-unit>
      <trans-unit id="DoesNotContainItemFailMsg">
        <source>Expected collection to not contain the specified item. {0}</source>
        <target state="translated">지정한 항목을 포함하지 않을 컬렉션이 필요합니다. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="DoesNotContainPredicateFailMsg">
        <source>Expected no items to match the predicate. {0}</source>
        <target state="translated">조건자와 일치하는 항목이 필요하지 않습니다. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="DoesNotEndWithFail">
        <source>String '{0}' ends with string '{1}'. {2}</source>
        <target state="translated">문자열 '{0}'은 문자열 '{1}'(으)로 끝납니다. {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="DoesNotStartWithFail">
        <source>String '{0}' starts with string '{1}'. {2}</source>
        <target state="translated">문자열 '{0}'은 문자열 '{1}'(으)로 시작합니다. {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="DynamicDataInvalidMethodLayout">
        <source>Dynamic data method '{0}' should be static, non-generic, and cannot have 'params' parameter.</source>
        <target state="needs-review-translation">동적 데이터 메서드 '{0}'은(는) 정적이고 매개 변수가 없으며 제네릭이 아니어야 합니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="DynamicDataInvalidPropertyLayout">
        <source>Dynamic data property '{0}' should be static and have a getter.</source>
        <target state="translated">동적 데이터 속성 '{0}'은(는) 정적이고 getter가 있어야 합니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="DynamicDataSourceShouldExistAndBeValid">
        <source>The dynamic data source '{0}' in type '{1}' should exist and be a property or a method.</source>
        <target state="translated">'{1}' 형식의 동적 데이터 원본 '{0}' 존재하며 속성 또는 메서드여야 합니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="ElementNumbersDontMatch">
        <source>The number of elements in the collections do not match. Expected:&lt;{1}&gt;. Actual:&lt;{2}&gt;.{0}</source>
        <target state="translated">컬렉션의 요소 수가 일치하지 않습니다. 예상 값: &lt;{1}&gt;. 실제 값: &lt;{2}&gt;.{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="ElementsAtIndexDontMatch">
        <source>Element at index {0} do not match.
Expected: {1}
Actual: {2}</source>
        <target state="translated">인덱스 {0}에 있는 요소가 일치하지 않습니다.
예상: {1}
실제: {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="ElementTypesAtIndexDontMatch">
        <source>Element at index {1} is not of expected type. Expected type:&lt;{2}&gt;. Actual type:&lt;{3}&gt;.{0}</source>
        <target state="translated">인덱스 {1}에 있는 요소가 필요한 형식이 아닙니다. 필요한 형식: &lt;{2}&gt;, 실제 형식: &lt;{3}&gt;.{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="EndsWithFail">
        <source>String '{0}' does not end with string '{1}'. {2}</source>
        <target state="translated">'{0}' 문자열이 '{1}' 문자열로 끝나지 않습니다. {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="AssertionFailed">
        <source>{0} failed. {1}</source>
        <target state="translated">{0}이(가) 실패했습니다. {1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="HasCountFailMsg">
        <source>Expected collection of size {1}. Actual: {2}. {0}</source>
        <target state="translated">{1} 크기 컬렉션이 필요합니다. 실제: {2}. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidGitHubUrl">
        <source>Invalid GitHub ticket URL</source>
        <target state="translated">잘못된 GitHub 티켓 URL</target>
        <note />
      </trans-unit>
      <trans-unit id="IsInRangeFail">
        <source>Value '{0}' is not within the expected range [{1}, {2}]. {3}</source>
        <target state="translated">'{0}' 값이 예상 범위 [{1}, {2}] 내에 있지 않습니다. {3}</target>
        <note />
      </trans-unit>
      <trans-unit id="IsInstanceOfFailMsg">
        <source>{0} Expected type:&lt;{1}&gt;. Actual type:&lt;{2}&gt;.</source>
        <target state="translated">{0} 예상 형식: &lt;{1}&gt;, 실제 형식: &lt;{2}&gt;.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsMatchFail">
        <source>String '{0}' does not match pattern '{1}'. {2}</source>
        <target state="translated">'{0}' 문자열이 '{1}' 패턴과 일치하지 않습니다. {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="IsNotEmptyFailMsg">
        <source>Expected collection to contain any item but it is empty. {0}</source>
        <target state="translated">항목을 포함할 컬렉션이 필요한데 비어 있습니다. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="IsNotInstanceOfFailMsg">
        <source>Wrong Type:&lt;{1}&gt;. Actual type:&lt;{2}&gt;. {0}</source>
        <target state="translated">잘못된 형식: &lt;{1}&gt;, 실제 형식: &lt;{2}&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsNotMatchFail">
        <source>String '{0}' matches pattern '{1}'. {2}</source>
        <target state="translated">'{0}' 문자열이 '{1}' 패턴과 일치합니다. {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="PrivateAccessorMemberNotFound">
        <source>
      The member specified ({0}) could not be found. You might need to regenerate your private accessor,
      or the member may be private and defined on a base class. If the latter is true, you need to pass the type
      that defines the member into PrivateObject's constructor.
    </source>
        <target state="translated">
      지정한 멤버({0})를 찾을 수 없습니다. 프라이빗 접근자를 다시 생성해야 할 수 있습니다.
      또는 멤버가 기본 클래스에 정의된 프라이빗 멤버일 수 있습니다. 기본 클래스에 정의된 전용 멤버인 경우에는 이 멤버를 정의하는 형식을
      PrivateObject의 생성자에 전달해야 합니다.
    </target>
        <note />
      </trans-unit>
      <trans-unit id="PrivateAccessorConstructorNotFound">
        <source>
      The constructor with the specified signature could not be found. You might need to regenerate your private accessor,
      or the member may be private and defined on a base class. If the latter is true, you need to pass the type
      that defines the member into PrivateObject's constructor.
    </source>
        <target state="translated">
      지정한 서명을 가진 생성자를 찾을 수 없습니다. 프라이빗 접근자를 다시 생성해야 할 수 있습니다.
      또는 멤버가 기본 클래스에 정의된 프라이빗 멤버일 수 있습니다. 기본 클래스에 정의된 전용 멤버인 경우에는 이 멤버를 정의하는 형식을
      PrivateObject의 생성자에 전달해야 합니다.
    </target>
        <note />
      </trans-unit>
      <trans-unit id="NullParameterToAssert">
        <source>The parameter '{0}' is invalid. The value cannot be null. {1}.</source>
        <target state="translated">'{0}' 매개 변수가 잘못되었습니다. 이 값은 null일 수 없습니다. {1}.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="NumberOfElementsDiff">
        <source>Different number of elements.</source>
        <target state="translated">요소 수가 다릅니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="StartsWithFail">
        <source>String '{0}' does not start with string '{1}'. {2}</source>
        <target state="translated">'{0}' 문자열이 '{1}' 문자열로 시작되지 않습니다. {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidPropertyType">
        <source>The property {0} has type {1}; expected type {2}.</source>
        <target state="translated">{0} 속성의 형식은 {2}이어야 하는데 실제로는 {1}입니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="Common_NullInMessages">
        <source>(null)</source>
        <target state="translated">(null)</target>
        <note></note>
      </trans-unit>
      <trans-unit id="Common_ObjectString">
        <source>(object)</source>
        <target state="translated">(개체)</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_ExpectedExceptionTypeMustDeriveFromException">
        <source>The expected exception type must be System.Exception or a type derived from System.Exception.</source>
        <target state="translated">예상 예외 형식은 System.Exception이거나 System.Exception에서 파생된 형식이어야 합니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_TestMethodNoExceptionDefault">
        <source>Test method did not throw an exception. An exception was expected by attribute {0} defined on the test method.</source>
        <target state="translated">테스트 메서드에서 예외를 throw하지 않았습니다. 예외는 테스트 메서드에 정의된 {0} 특성에 의해 예상되었습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_TestMethodNoException">
        <source>Test method did not throw expected exception {0}. {1}</source>
        <target state="translated">테스트 메서드에서 예상 예외 {0}을(를) throw하지 않았습니다. {1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_TestMethodWrongException">
        <source>Test method threw exception {0}, but exception {1} was expected. Exception message: {2}</source>
        <target state="translated">테스트 메서드에서 {0} 예외를 throw했지만 {1} 예외를 예상했습니다. 예외 메시지: {2}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_TestMethodWrongExceptionDerivedAllowed">
        <source>Test method threw exception {0}, but exception {1} or a type derived from it was expected. Exception message: {2}</source>
        <target state="translated">테스트 메서드에서 {0} 예외를 throw했지만 {1} 예외 또는 해당 예외에서 파생된 형식을 예상했습니다. 예외 메시지: {2}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_FailedToGetExceptionMessage">
        <source>(Failed to get the message for an exception of type {0} due to an exception.)</source>
        <target state="translated">(예외로 인해 {0} 형식의 예외에 대한 메시지를 가져오지 못했습니다.)</target>
        <note></note>
      </trans-unit>
      <trans-unit id="NoExceptionThrown">
        <source>Expected exception type:&lt;{1}&gt; but no exception was thrown. {0}</source>
        <target state="translated">예상 예외 형식:&lt;{1}&gt; 하지만 예외가 발생하지 않음. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="WrongExceptionThrown">
        <source>Expected exception type:&lt;{1}&gt;. Actual exception type:&lt;{2}&gt;. {0}</source>
        <target state="translated">예상 예외 형식:&lt;{1}&gt;. 실제 예상 형식:&lt;{2}&gt;. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="DataDrivenResultDisplayName">
        <source>{0} ({1})</source>
        <target state="translated">{0}({1})</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DynamicDataIEnumerableNull">
        <source>Property or method {0} on {1} return type is not assignable to 'IEnumerable'.</source>
        <target state="translated">{1} 반환 형식의 속성 또는 메서드 {0}은(는) 'IEnumerable'에 할당할 수 없습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="DynamicDataValueNull">
        <source>Value returned by property or method {0} shouldn't be null.</source>
        <target state="translated">속성 또는 메서드 {0}에 의해 반환된 값은 null일 수 없습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DynamicDataDisplayName">
        <source>Method {0} must match the expected signature: public static {1} {0}({2}).</source>
        <target state="translated">메서드 {0}은(는) 다음 예상 시그니처와 일치해야 합니다. 공용 정적 {1} {0}({2}).</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DynamicDataIEnumerableEmpty">
        <source>Property or method {0} on {1} returns empty IEnumerable&lt;object[]&gt;.</source>
        <target state="translated">{1}의 속성 또는 메서드 {0}이(가) 빈 IEnumerable&lt;object[]&gt;를 반환합니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsGreaterThanFailMsg">
        <source>Actual value &lt;{2}&gt; is not greater than expected value &lt;{1}&gt;. {0}</source>
        <target state="translated">실제 값 &lt;{2}&gt;은(는)는 예상 값 &lt;{1}&gt;보다 크지 않습니다. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsGreaterThanOrEqualToFailMsg">
        <source>Actual value &lt;{2}&gt; is not greater than or equal to expected value &lt;{1}&gt;. {0}</source>
        <target state="translated">실제 값 &lt;{2}&gt;은(는)는 예상 값 &lt;{1}&gt;보다 크거나 같지 않습니다. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsLessThanFailMsg">
        <source>Actual value &lt;{2}&gt; is not less than expected value &lt;{1}&gt;. {0}</source>
        <target state="translated">실제 값 &lt;{2}&gt;은(는)는 예상 값 &lt;{1}&gt;보다 작지 않습니다. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsLessThanOrEqualToFailMsg">
        <source>Actual value &lt;{2}&gt; is not less than or equal to expected value &lt;{1}&gt;. {0}</source>
        <target state="translated">실제 값 &lt;{2}&gt;은(는)는 예상 값 &lt;{1}&gt;보다 작거나 같지 않습니다. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsPositiveFailMsg">
        <source>Expected value &lt;{1}&gt; to be positive. {0}</source>
        <target state="translated">예상 값 &lt;{1}&gt;은(는) 양수일 것으로 예상합니다. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsNegativeFailMsg">
        <source>Expected value &lt;{1}&gt; to be negative. {0}</source>
        <target state="translated">예상 값 &lt;{1}&gt;은(는) 음수일 것으로 예상합니다. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DoNotUseAssertEquals">
        <source>Assert.Equals should not be used for Assertions. Please use Assert.AreEqual &amp; overloads instead.</source>
        <target state="translated">어설션에 Assert.Equals를 사용할 수 없습니다. 대신 Assert.AreEqual 및 오버로드를 사용하세요.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DoNotUseAssertReferenceEquals">
        <source>Assert.ReferenceEquals should not be used for Assertions. Please use Assert.AreSame &amp; overloads instead.</source>
        <target state="translated">어설션에 Assert.ReferenceEquals를 사용할 수 없습니다. 대신 Assert.AreSame 및 오버로드를 사용하세요.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DoNotUseStringAssertEquals">
        <source>StringAssert.Equals should not be used for Assertions. Please use StringAssert methods or Assert.AreEqual &amp; overloads instead.</source>
        <target state="translated">어설션에 StringAssert.Equals를 사용할 수 없습니다. 대신 StringAssert 메서드 또는 Assert.AreEqual 및 오버로드를 사용하세요.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DoNotUseStringAssertReferenceEquals">
        <source>StringAssert.ReferenceEquals should not be used for Assertions. Please use StringAssert methods or Assert.AreSame &amp; overloads instead.</source>
        <target state="translated">StringAssert.ReferenceEquals는 Assertions에 사용할 수 없습니다. 대신 StringAssert 메서드 또는 Assert.AreSame 및 오버로드를 사용하세요.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DoNotUseCollectionAssertEquals">
        <source>CollectionAssert.Equals should not be used for Assertions. Please use CollectionAssert.AreEqual &amp; overloads instead.</source>
        <target state="translated">어설션에 CollectionAssert.Equals를 사용할 수 없습니다. 대신 CollectionAssert.AreEqual 및 오버로드를 사용하세요.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DoNotUseCollectionAssertReferenceEquals">
        <source>CollectionAssert.ReferenceEquals should not be used for Assertions. Please use CollectionAssert methods or Assert.AreSame &amp; overloads instead.</source>
        <target state="translated">CollectionAssert.ReferenceEquals는 Assertions에 사용할 수 없습니다. 대신 CollectionAssert 메서드 또는 Assert.AreSame 및 오버로드를 사용하세요.</target>
        <note></note>
      </trans-unit>
    </body>
  </file>
</xliff>