<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" original="../FrameworkMessages.resx" target-language="zh-Hant">
    <body>
      <trans-unit id="AccessStringInvalidSyntax">
        <source>Access string has invalid syntax.</source>
        <target state="translated">存取字串有無效的語法。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="ActualHasMismatchedElements">
        <source>The expected collection contains {1} occurrence(s) of &lt;{2}&gt;. The actual collection contains {3} occurrence(s). {0}</source>
        <target state="translated">預期在集合中包含 {1} 項 &lt;{2}&gt;，但實際的集合卻有 {3} 項。{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AllItemsAreUniqueFailMsg">
        <source>Duplicate item found:&lt;{1}&gt;. {0}</source>
        <target state="translated">找到重複的項目: &lt;{1}&gt;。{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreEqualFailMsg">
        <source>Expected:&lt;{1}&gt;. Actual:&lt;{2}&gt;. {0}</source>
        <target state="translated">預期: &lt;{1}&gt;。實際: &lt;{2}&gt;。{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreEqualDeltaFailMsg">
        <source>Expected a difference no greater than &lt;{3}&gt; between expected value &lt;{1}&gt; and actual value &lt;{2}&gt;. {0}</source>
        <target state="translated">預期值 &lt;{1}&gt; 和實際值 &lt;{2}&gt; 之間的預期差異沒有大於 &lt;{3}&gt;。{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreEqualCaseFailMsg">
        <source>Expected:&lt;{1}&gt;. Case is different for actual value:&lt;{2}&gt;. {0}</source>
        <target state="translated">預期: &lt;{1}&gt;。大小寫與下列實際值不同: &lt;{2}&gt;。{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreEqualDifferentTypesFailMsg">
        <source>Expected:&lt;{1} ({2})&gt;. Actual:&lt;{3} ({4})&gt;. {0}</source>
        <target state="translated">預期: &lt;{1} ({2})&gt;。實際: &lt;{3} ({4})&gt;。{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreNotEqualFailMsg">
        <source>Expected any value except:&lt;{1}&gt;. Actual:&lt;{2}&gt;. {0}</source>
        <target state="translated">預期任何值 (&lt;{1}&gt; 除外)。實際: &lt;{2}&gt;。{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreNotEqualDeltaFailMsg">
        <source>Expected a difference greater than &lt;{3}&gt; between expected value &lt;{1}&gt; and actual value &lt;{2}&gt;. {0}</source>
        <target state="translated">預期值 &lt;{1}&gt; 和實際值 &lt;{2}&gt; 之間的預期差異大於 &lt;{3}&gt;。{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AreSameGivenValues">
        <source>Do not pass value types to AreSame(). Values converted to Object will never be the same. Consider using AreEqual(). {0}</source>
        <target state="translated">不要將實值型別傳遞給 AreSame()。轉換成 Object 的值從此不再一樣。請考慮使用 AreEqual()。{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="BothCollectionsEmpty">
        <source>Both collections are empty. {0}</source>
        <target state="translated">兩個集合皆空白。{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="BothCollectionsSameElements">
        <source>Both collection contain same elements.</source>
        <target state="translated">兩個集合含有相同的項目。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="BothCollectionsSameReference">
        <source>Both collection references point to the same collection object. {0}</source>
        <target state="translated">兩個集合參考都指向同一個集合物件。{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="BothSameElements">
        <source>Both collections contain the same elements. {0}</source>
        <target state="translated">兩個集合含有相同的項目。{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="CollectionEqualReason">
        <source>{0}. {1}</source>
        <target state="translated">{0}。{1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ContainsFail">
        <source>String '{0}' does not contain string '{1}'. {2}.</source>
        <target state="translated">字串 '{0}' 未包含字串 '{1}'。{2}。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="ContainsItemFailMsg">
        <source>Expected collection to contain the specified item. {0}</source>
        <target state="new">Expected collection to contain the specified item. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ContainsPredicateFailMsg">
        <source>Expected at least one item to match the predicate. {0}</source>
        <target state="new">Expected at least one item to match the predicate. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ContainsSingleFailMsg">
        <source>Expected collection to contain exactly one element but found {1} element(s). {0}</source>
        <target state="new">Expected collection to contain exactly one element but found {1} element(s). {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ContainsSingleMatchFailMsg">
        <source>Expected exactly one item to match the predicate but found {1} item(s). {0}</source>
        <target state="new">Expected exactly one item to match the predicate but found {1} item(s). {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="DoesNotContainFail">
        <source>String '{0}' does contain string '{1}'. {2}.</source>
        <target state="translated">字串 '{0}' 有包含字串 '{1}'。{2}。</target>
        <note />
      </trans-unit>
      <trans-unit id="DoesNotContainItemFailMsg">
        <source>Expected collection to not contain the specified item. {0}</source>
        <target state="new">Expected collection to not contain the specified item. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="DoesNotContainPredicateFailMsg">
        <source>Expected no items to match the predicate. {0}</source>
        <target state="new">Expected no items to match the predicate. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="DoesNotEndWithFail">
        <source>String '{0}' ends with string '{1}'. {2}</source>
        <target state="new">String '{0}' ends with string '{1}'. {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="DoesNotStartWithFail">
        <source>String '{0}' starts with string '{1}'. {2}</source>
        <target state="new">String '{0}' starts with string '{1}'. {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="DynamicDataInvalidMethodLayout">
        <source>Dynamic data method '{0}' should be static, parameterless and non-generic.</source>
        <target state="translated">動態資料方法 '{0}' 應為靜態、無參數及非泛型。</target>
        <note />
      </trans-unit>
      <trans-unit id="DynamicDataInvalidPropertyLayout">
        <source>Dynamic data property '{0}' should be static and have a getter.</source>
        <target state="translated">動態資料屬性 '{0}' 應為靜態且具有 getter。</target>
        <note />
      </trans-unit>
      <trans-unit id="DynamicDataSourceShouldExistAndBeValid">
        <source>The dynamic data source '{0}' in type '{1}' should exist and be a property or a method.</source>
        <target state="translated">類型 '{1}' 中的動態數據源 '{0}' 應該存在，而且必須是屬性或方法。</target>
        <note />
      </trans-unit>
      <trans-unit id="ElementNumbersDontMatch">
        <source>The number of elements in the collections do not match. Expected:&lt;{1}&gt;. Actual:&lt;{2}&gt;.{0}</source>
        <target state="translated">集合中的項目數目不符。預期: &lt;{1}&gt;。實際: &lt;{2}&gt;。{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="ElementsAtIndexDontMatch">
        <source>Element at index {0} do not match.
Expected: {1}
Actual: {2}</source>
        <target state="translated">位於索引 {0} 的項目不符。
預期為: {1}
實際為: {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="ElementTypesAtIndexDontMatch">
        <source>Element at index {1} is not of expected type. Expected type:&lt;{2}&gt;. Actual type:&lt;{3}&gt;.{0}</source>
        <target state="translated">位於索引 {1} 的項目不是預期的類型。預期的類型: &lt;{2}&gt;。實際的類型: &lt;{3}&gt;。{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="EndsWithFail">
        <source>String '{0}' does not end with string '{1}'. {2}</source>
        <target state="new">String '{0}' does not end with string '{1}'. {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="AssertionFailed">
        <source>{0} failed. {1}</source>
        <target state="translated">{0} 失敗。 {1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="HasCountFailMsg">
        <source>Expected collection of size {1}. Actual: {2}. {0}</source>
        <target state="translated">預期的大小集合 {1}。實際： {2}。{0}</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidGitHubUrl">
        <source>Invalid GitHub ticket URL</source>
        <target state="translated">無效的 GitHub 票證 URL</target>
        <note />
      </trans-unit>
      <trans-unit id="IsInRangeFail">
        <source>Value '{0}' is not within the expected range [{1}, {2}]. {3}</source>
        <target state="translated">值 '{0}' 不在預期的範圍 [{1}, {2}] 內。{3}</target>
        <note />
      </trans-unit>
      <trans-unit id="IsInstanceOfFailMsg">
        <source>{0} Expected type:&lt;{1}&gt;. Actual type:&lt;{2}&gt;.</source>
        <target state="translated">{0} 預期的類型: &lt;{1}&gt;，實際的類型: &lt;{2}&gt;。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsMatchFail">
        <source>String '{0}' does not match pattern '{1}'. {2}</source>
        <target state="new">String '{0}' does not match pattern '{1}'. {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="IsNotEmptyFailMsg">
        <source>Expected collection to contain any item but it is empty. {0}</source>
        <target state="translated">預期集合包含任何專案，但卻是空的。{0}</target>
        <note />
      </trans-unit>
      <trans-unit id="IsNotInstanceOfFailMsg">
        <source>Wrong Type:&lt;{1}&gt;. Actual type:&lt;{2}&gt;. {0}</source>
        <target state="translated">錯誤的類型: &lt;{1}&gt;。實際的類型: &lt;{2}&gt;。{0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsNotMatchFail">
        <source>String '{0}' matches pattern '{1}'. {2}</source>
        <target state="new">String '{0}' matches pattern '{1}'. {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="PrivateAccessorMemberNotFound">
        <source>
      The member specified ({0}) could not be found. You might need to regenerate your private accessor,
      or the member may be private and defined on a base class. If the latter is true, you need to pass the type
      that defines the member into PrivateObject's constructor.
    </source>
        <target state="translated">
      找不到所指定的成員 ({0})。您可能必須重新產生私用存取子，
      或者該成員可能為私用，並且定義在基底類別上。如果是後者，
      您必須將定義該成員的類型傳遞至 PrivateObject 的建構函式。
    </target>
        <note />
      </trans-unit>
      <trans-unit id="PrivateAccessorConstructorNotFound">
        <source>
      The constructor with the specified signature could not be found. You might need to regenerate your private accessor,
      or the member may be private and defined on a base class. If the latter is true, you need to pass the type
      that defines the member into PrivateObject's constructor.
    </source>
        <target state="translated">
      找不到具有所指定簽章的建構函式。您可能必須重新產生私用存取子，
      或者該成員可能為私用，並且定義在基底類別上。如果是後者，您必須
      將定義該成員的類型傳遞至 PrivateObject 的建構函式。
    </target>
        <note />
      </trans-unit>
      <trans-unit id="NullParameterToAssert">
        <source>The parameter '{0}' is invalid. The value cannot be null. {1}.</source>
        <target state="translated">參數 '{0}' 無效。此值不可為 null。{1}。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="NumberOfElementsDiff">
        <source>Different number of elements.</source>
        <target state="translated">項目數目不同。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="StartsWithFail">
        <source>String '{0}' does not start with string '{1}'. {2}</source>
        <target state="new">String '{0}' does not start with string '{1}'. {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidPropertyType">
        <source>The property {0} has type {1}; expected type {2}.</source>
        <target state="translated">屬性 {0} 具有類型 {1}; 預期為類型 {2}。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="Common_NullInMessages">
        <source>(null)</source>
        <target state="translated">(null)</target>
        <note></note>
      </trans-unit>
      <trans-unit id="Common_ObjectString">
        <source>(object)</source>
        <target state="translated">(物件)</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_ExpectedExceptionTypeMustDeriveFromException">
        <source>The expected exception type must be System.Exception or a type derived from System.Exception.</source>
        <target state="translated">預期的例外狀況類型必須是 System.Exception 或衍生自 System.Exception 的類型。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_TestMethodNoExceptionDefault">
        <source>Test method did not throw an exception. An exception was expected by attribute {0} defined on the test method.</source>
        <target state="translated">測試方法未擲回例外狀況。測試方法上定義的屬性 {0} 需要例外狀況。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_TestMethodNoException">
        <source>Test method did not throw expected exception {0}. {1}</source>
        <target state="translated">測試方法未擲回預期的例外狀況 {0}。{1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_TestMethodWrongException">
        <source>Test method threw exception {0}, but exception {1} was expected. Exception message: {2}</source>
        <target state="translated">測試方法擲回例外狀況 {0}，但需要的是例外狀況 {1}。例外狀況訊息: {2}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_TestMethodWrongExceptionDerivedAllowed">
        <source>Test method threw exception {0}, but exception {1} or a type derived from it was expected. Exception message: {2}</source>
        <target state="translated">測試方法擲回例外狀況 {0}，但需要的是例外狀況 {1} 或是衍生自其的類型。例外狀況訊息: {2}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_FailedToGetExceptionMessage">
        <source>(Failed to get the message for an exception of type {0} due to an exception.)</source>
        <target state="translated">(因為發生例外狀況，所以無法取得類型 {0} 之例外狀況的訊息。)</target>
        <note></note>
      </trans-unit>
      <trans-unit id="NoExceptionThrown">
        <source>Expected exception type:&lt;{1}&gt; but no exception was thrown. {0}</source>
        <target state="translated">預期的例外狀況類型：&lt;{1}&gt;，但未擲回任何例外狀況。{0}</target>
        <note />
      </trans-unit>
      <trans-unit id="WrongExceptionThrown">
        <source>Expected exception type:&lt;{1}&gt;. Actual exception type:&lt;{2}&gt;. {0}</source>
        <target state="translated">預期的例外狀況類型：&lt;{1}&gt;。實際的例外狀況類型：&lt;{2}&gt;。{0}</target>
        <note />
      </trans-unit>
      <trans-unit id="DataDrivenResultDisplayName">
        <source>{0} ({1})</source>
        <target state="translated">{0} ({1})</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AsyncUITestMethodNotSupported">
        <source>async TestMethod with UITestMethodAttribute are not supported. Either remove async or use TestMethodAttribute.</source>
        <target state="translated">不支援有 UITestMethodAttribute 的 async TestMethod。請移除 async 或使用 TestMethodAttribute。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DynamicDataIEnumerableNull">
        <source>Property or method {0} on {1} return type is not assignable to 'IEnumerable'.</source>
        <target state="translated">{1} 傳回類型上的屬性或方法 {0} 無法指派給 'IEnumerable'。</target>
        <note />
      </trans-unit>
      <trans-unit id="DynamicDataValueNull">
        <source>Value returned by property or method {0} shouldn't be null.</source>
        <target state="translated">屬性或方法 {0} 傳回的值不可為 null。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DynamicDataDisplayName">
        <source>Method {0} must match the expected signature: public static {1} {0}({2}).</source>
        <target state="translated">方法 {0} 必須與正確的簽章相符: public static {1} {0}({2})。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DynamicDataIEnumerableEmpty">
        <source>Property or method {0} on {1} returns empty IEnumerable&lt;object[]&gt;.</source>
        <target state="translated">{1} 上的屬性或方法 {0} 傳回空的 IEnumerable&lt;object[]&gt;。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AsyncUITestMethodWithNoDispatcherQueue">
        <source>UITestMethodAttribute.DispatcherQueue should not be null. To use UITestMethodAttribute within a WinUI Desktop App, remember to set the static UITestMethodAttribute.DispatcherQueue during the test initialization.</source>
        <target state="translated">UITestMethodAttribute.DispatcherQueue 不應為 Null。若要在 WinUI 傳統型應用程式內使用 UITestMethodAttribute，請記得在測試初始化期間設定靜態 UITestMethodAttribute.DispatcherQueue。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="ArgumentXMustDeriveFromClassY">
        <source>Type '{0}' is not assignable to '{1}'.</source>
        <target state="translated">無法將類型 '{0}' {0} 指派給 '{1}。</target>
        <note>
      - {0} argument name like "applicationType"
      - {1} fully qualified class name like "Microsoft.UI.Xaml.Application"
    </note>
      </trans-unit>
      <trans-unit id="IsGreaterThanFailMsg">
        <source>Actual value &lt;{2}&gt; is not greater than expected value &lt;{1}&gt;. {0}</source>
        <target state="new">Actual value &lt;{2}&gt; is not greater than expected value &lt;{1}&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsGreaterThanOrEqualToFailMsg">
        <source>Actual value &lt;{2}&gt; is not greater than or equal to expected value &lt;{1}&gt;. {0}</source>
        <target state="new">Actual value &lt;{2}&gt; is not greater than or equal to expected value &lt;{1}&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsLessThanFailMsg">
        <source>Actual value &lt;{2}&gt; is not less than expected value &lt;{1}&gt;. {0}</source>
        <target state="new">Actual value &lt;{2}&gt; is not less than expected value &lt;{1}&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsLessThanOrEqualToFailMsg">
        <source>Actual value &lt;{2}&gt; is not less than or equal to expected value &lt;{1}&gt;. {0}</source>
        <target state="new">Actual value &lt;{2}&gt; is not less than or equal to expected value &lt;{1}&gt;. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsPositiveFailMsg">
        <source>Expected value &lt;{1}&gt; to be positive. {0}</source>
        <target state="new">Expected value &lt;{1}&gt; to be positive. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="IsNegativeFailMsg">
        <source>Expected value &lt;{1}&gt; to be negative. {0}</source>
        <target state="new">Expected value &lt;{1}&gt; to be negative. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DoNotUseAssertEquals">
        <source>Assert.Equals should not be used for Assertions. Please use Assert.AreEqual &amp; overloads instead.</source>
        <target state="translated">Assert.Equals 不應使用於判斷提示。請改用 Assert.AreEqual 及多載。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DoNotUseAssertReferenceEquals">
        <source>Assert.ReferenceEquals should not be used for Assertions. Please use Assert.AreSame &amp; overloads instead.</source>
        <target state="new">Assert.ReferenceEquals should not be used for Assertions. Please use Assert.AreSame &amp; overloads instead.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DoNotUseStringAssertEquals">
        <source>StringAssert.Equals should not be used for Assertions. Please use StringAssert methods or Assert.AreEqual &amp; overloads instead.</source>
        <target state="new">StringAssert.Equals should not be used for Assertions. Please use StringAssert methods or Assert.AreEqual &amp; overloads instead.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DoNotUseStringAssertReferenceEquals">
        <source>StringAssert.ReferenceEquals should not be used for Assertions. Please use StringAssert methods or Assert.AreSame &amp; overloads instead.</source>
        <target state="new">StringAssert.ReferenceEquals should not be used for Assertions. Please use StringAssert methods or Assert.AreSame &amp; overloads instead.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DoNotUseCollectionAssertEquals">
        <source>CollectionAssert.Equals should not be used for Assertions. Please use CollectionAssert.AreEqual &amp; overloads instead.</source>
        <target state="new">CollectionAssert.Equals should not be used for Assertions. Please use CollectionAssert.AreEqual &amp; overloads instead.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DoNotUseCollectionAssertReferenceEquals">
        <source>CollectionAssert.ReferenceEquals should not be used for Assertions. Please use CollectionAssert methods or Assert.AreSame &amp; overloads instead.</source>
        <target state="new">CollectionAssert.ReferenceEquals should not be used for Assertions. Please use CollectionAssert methods or Assert.AreSame &amp; overloads instead.</target>
        <note></note>
      </trans-unit>
    </body>
  </file>
</xliff>