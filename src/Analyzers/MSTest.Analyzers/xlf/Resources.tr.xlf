<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="tr" original="../Resources.resx">
    <body>
      <trans-unit id="AssemblyCleanupShouldBeValidDescription">
        <source>Methods marked with [AssemblyCleanup] should follow the following layout to be valid:
- it should be 'public' 
- it should be 'static'
- it should not be generic
- it should not take any parameter
- return type should be 'void', 'Task' or 'ValueTask'
- it should not be 'async void'
- it should not be a special method (finalizer, operator...).</source>
        <target state="translated">[AssemblyCleanup] ile işaretlenen yöntemlerin geçerli olması için aşağıdaki düzeni takip etmesi gerekir:
- 'public' olmalıdır 
- 'static' olmalıdır
- genel olmamalıdır
- herhangi bir parametre almamalıdır
- dönüş türü 'void', 'Task' veya 'ValueTask' olmalıdır
- 'async void' olmamalıdır
- özel bir yöntem (sonlandırıcı, işleç...) olmamalıdır.</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyCleanupShouldBeValidMessageFormat_NoParameters">
        <source>AssemblyCleanup method '{0}' should not take any parameter</source>
        <target state="translated">'{0}' AssemblyCleanup yöntemi herhangi bir parametre almamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyCleanupShouldBeValidMessageFormat_NotAGenericClass">
        <source>AssemblyCleanup method '{0}' can't be declared on a generic class</source>
        <target state="translated">'{0}' AssemblyCleanup metodu genel bir sınıfta bildirilemez</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyCleanupShouldBeValidMessageFormat_NotAsyncVoid">
        <source>AssemblyCleanup method '{0}' should return 'void', 'Task' or 'ValueTask'</source>
        <target state="translated">'{0}' AssemblyCleanup yöntemi 'void', 'Task' veya 'ValueTask' döndürmelidir</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyCleanupShouldBeValidMessageFormat_NotGeneric">
        <source>AssemblyCleanup method '{0}' should not be generic</source>
        <target state="translated">'{0}' AssemblyCleanup yöntemi genel olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyCleanupShouldBeValidMessageFormat_Ordinary">
        <source>AssemblyCleanup method '{0}' should be an 'ordinary' method</source>
        <target state="translated">'{0}' AssemblyCleanup yöntemi 'ordinary' bir yöntem olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyCleanupShouldBeValidMessageFormat_Public">
        <source>AssemblyCleanup method '{0}' should be 'public'</source>
        <target state="translated">AssemblyCleanup yöntemi '{0}' 'public' olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyCleanupShouldBeValidMessageFormat_ReturnType">
        <source>AssemblyCleanup method '{0}' should return 'void', 'Task' or 'ValueTask'</source>
        <target state="translated">'{0}' AssemblyCleanup yöntemi 'void', 'Task' veya 'ValueTask' döndürmelidir</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyCleanupShouldBeValidMessageFormat_Static">
        <source>AssemblyCleanup method '{0}' should be 'static'</source>
        <target state="translated">AssemblyCleanup yöntemi '{0}' 'static' olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyCleanupShouldBeValidTitle">
        <source>AssemblyCleanup methods should have valid layout</source>
        <target state="translated">AssemblyCleanup yöntemleri geçerli bir düzene sahip olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyInitializeShouldBeValidDescription">
        <source>Methods marked with [AssemblyInitialize] should follow the following layout to be valid:
- it should be 'public' 
- it should be 'static'
- it should not be generic
- it should take one parameter of type 'TestContext'
- return type should be 'void', 'Task' or 'ValueTask'
- it should not be 'async void'
- it should not be a special method (finalizer, operator...).</source>
        <target state="translated">[AssemblyInitialize] ile işaretlenen yöntemlerin geçerli olması için aşağıdaki düzeni takip etmesi gerekir:
- 'public' olmalıdır 
- 'static' olmalıdır
- genel olmamalıdır
- 'TestContext' türünden bir parametre almalıdır
- dönüş türü 'void', 'Task' veya 'ValueTask' olmalıdır
- 'async void' olmamalıdır
- özel bir yöntem (sonlandırıcı, işleç...) olmamalıdır.</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyInitializeShouldBeValidMessageFormat_NotAGenericClass">
        <source>AssemblyInitialize method '{0}' can't be declared on a generic class</source>
        <target state="translated">'{0}' AssemblyInitialize metodu genel bir sınıfta bildirilemez</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyInitializeShouldBeValidMessageFormat_NotAsyncVoid">
        <source>AssemblyInitialize method '{0}' should return 'void', 'Task' or 'ValueTask'</source>
        <target state="translated">'{0}' AssemblyInitialize yöntemi 'void', 'Task' veya 'ValueTask' döndürmelidir</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyInitializeShouldBeValidMessageFormat_NotGeneric">
        <source>AssemblyInitialize method '{0}' should not be generic</source>
        <target state="translated">'{0}' AssemblyInitialize yöntemi genel olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyInitializeShouldBeValidMessageFormat_Ordinary">
        <source>AssemblyInitialize method '{0}' should be an 'ordinary' method</source>
        <target state="translated">'{0}' AssemblyInitialize yöntemi 'ordinary' bir yöntem olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyInitializeShouldBeValidMessageFormat_Public">
        <source>AssemblyInitialize method '{0}' should be 'public'</source>
        <target state="translated">'{0}' AssemblyInitialize yöntemi 'public' olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyInitializeShouldBeValidMessageFormat_ReturnType">
        <source>AssemblyInitialize method '{0}' should return 'void', 'Task' or 'ValueTask'</source>
        <target state="translated">'{0}' AssemblyInitialize yöntemi 'void', 'Task' veya 'ValueTask' döndürmelidir</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyInitializeShouldBeValidMessageFormat_SingleContextParameter">
        <source>AssemblyInitialize method '{0}' should take a single parameter of type 'TestContext'</source>
        <target state="translated">'{0}' AssemblyInitialize yöntemi, 'TestContext' türünde tek bir parametre almalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyInitializeShouldBeValidMessageFormat_Static">
        <source>AssemblyInitialize method '{0}' should be 'static'</source>
        <target state="translated">AssemblyInitialize yöntemi '{0}' 'static' olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyInitializeShouldBeValidTitle">
        <source>AssemblyInitialize methods should have valid layout</source>
        <target state="translated">AssemblyInitialize yöntemleri geçerli bir düzene sahip olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="AssertionArgsShouldBePassedInCorrectOrderDescription">
        <source>'Assert.AreEqual', 'Assert.AreNotEqual', 'Assert.AreSame' and 'Assert.AreNotSame' expects the expected value to be passed first and the actual value to be passed as second argument.</source>
        <target state="translated">'Assert.AreEqual', 'Assert.AreNotEqual', 'Assert.AreSame' ve 'Assert.AreNotSame' ilk olarak beklenen değerin geçirilmesini ve gerçek değerin ikinci bağımsız değişken olarak geçirilmesini bekliyor.</target>
        <note />
      </trans-unit>
      <trans-unit id="AssertionArgsShouldBePassedInCorrectOrderMessageFormat">
        <source>Assertion arguments should be passed in the correct order. 'actual' and 'expected'/'notExpected' arguments have been swapped.</source>
        <target state="translated">Onay deyimi bağımsız değişkenleri doğru sıralama düzeninde geçirilmelidir. 'actual' ve 'expected'/'notExpected' bağımsız değişkenleri değiştirildi.</target>
        <note />
      </trans-unit>
      <trans-unit id="AssertionArgsShouldBePassedInCorrectOrderTitle">
        <source>Assertion arguments should be passed in the correct order</source>
        <target state="translated">Onay deyimi bağımsız değişkenleri doğru sıralama düzeninde geçirilmelidir</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidExpectedExceptionAttributeDescription">
        <source>Prefer 'Assert.ThrowsException' or 'Assert.ThrowsExceptionAsync' over '[ExpectedException]' as it ensures that only the expected call throws the expected exception. The assert APIs also provide more flexibility and allow you to assert extra properties of the exeption.</source>
        <target state="translated">Yalnızca beklenen çağrının beklenen özel durumu oluşturmasını sağladığı için '[ExpectedException]' yerine 'Assert.ThrowsException' veya 'Assert.ThrowsExceptionAsync' tercih edin. Onaylama API'leri de daha fazla esneklik sağlar ve özel durumun ek özelliklerini onaylamanıza izin verir.</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidExpectedExceptionAttributeMessageFormat">
        <source>Prefer 'Assert.ThrowsException/ThrowsExceptionAsync' over '[ExpectedException]'</source>
        <target state="translated">'[ExpectedException]' yerine 'Assert.ThrowsException/ThrowsExceptionAsync' tercih edin</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidExpectedExceptionAttributeTitle">
        <source>Avoid '[ExpectedException]'</source>
        <target state="translated">'[ExpectedException]' kullanmayın</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassCleanupShouldBeValidDescription">
        <source>Methods marked with [ClassCleanup] should follow the following layout to be valid:
- it should be 'public' 
- it should not 'static'
- it should not be generic
- it should not take any parameter
- return type should be 'void', 'Task' or 'ValueTask'
- it should not be 'async void'
- it should not be a special method (finalizer, operator...).</source>
        <target state="translated">[ClassCleanup] ile işaretlenen yöntemlerin geçerli olması için aşağıdaki düzeni takip etmesi gerekir:
- 'public' olmalıdır 
- 'static' olmamalıdır
- genel olmamalıdır
- herhangi bir parametre almamalıdır
- dönüş türü 'void', 'Task' veya 'ValueTask' olmalıdır
- 'async void' olmamalıdır
- özel bir yöntem (sonlandırıcı, işleç...) olmamalıdır.</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassCleanupShouldBeValidMessageFormat_NoParameters">
        <source>ClassCleanup method '{0}' should not take any parameter</source>
        <target state="translated">'{0}' ClassCleanup yöntemi herhangi bir parametre almamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassCleanupShouldBeValidMessageFormat_NotAGenericClassUnlessInheritanceModeSet">
        <source>ClassCleanup method '{0}' can't be declared on a generic class without the `InheritanceBehavior` mode is set</source>
        <target state="translated">'{0}' ClassCleanup metodu 'InheritanceBehavior' modu ayarlanmamış genel bir sınıfta bildirilemez</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassCleanupShouldBeValidMessageFormat_NotAsyncVoid">
        <source>ClassCleanup method '{0}' should return 'void', 'Task' or 'ValueTask'</source>
        <target state="translated">'{0}' ClassCleanup yöntemi 'void', 'Task' veya 'ValueTask' döndürmelidir</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassCleanupShouldBeValidMessageFormat_NotGeneric">
        <source>ClassCleanup method '{0}' should not be generic</source>
        <target state="translated">'{0}' ClassCleanup yöntemi genel olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassCleanupShouldBeValidMessageFormat_Ordinary">
        <source>ClassCleanup method '{0}' should be an 'ordinary' method</source>
        <target state="translated">'{0}' ClassCleanup yöntemi 'ordinary' bir yöntem olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassCleanupShouldBeValidMessageFormat_Public">
        <source>ClassCleanup method '{0}' should be 'public'</source>
        <target state="translated">'{0}' ClassCleanup yöntemi 'public' olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassCleanupShouldBeValidMessageFormat_ReturnType">
        <source>ClassCleanup method '{0}' should return 'void', 'Task' or 'ValueTask'</source>
        <target state="translated">'{0}' ClassCleanup yöntemi 'void', 'Task' veya 'ValueTask' döndürmelidir</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassCleanupShouldBeValidMessageFormat_Static">
        <source>ClassCleanup method '{0}' should be 'static'</source>
        <target state="translated">'{0}' ClassCleanup yöntemi 'static' olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassCleanupShouldBeValidTitle">
        <source>ClassCleanup methods should have valid layout</source>
        <target state="translated">ClassCleanup yöntemleri geçerli bir düzene sahip olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassInitializeShouldBeValidDescription">
        <source>Methods marked with [ClassInitialize] should follow the following layout to be valid:
- it should be 'public' 
- it should be 'static'
- it should not be generic
- it should take one parameter of type 'TestContext'
- return type should be 'void', 'Task' or 'ValueTask'
- it should not be 'async void'
- it should not be a special method (finalizer, operator...).</source>
        <target state="translated">[ClassInitialize] ile işaretlenen yöntemlerin geçerli olması için aşağıdaki düzeni takip etmesi gerekir:
- 'public' olmalıdır 
- 'static' olmalıdır
- genel olmamalıdır
- 'TestContext' türünden bir parametre almalıdır
- dönüş türü 'void', 'Task' veya 'ValueTask' olmalıdır
- 'async void' olmamalıdır
- özel bir yöntem (sonlandırıcı, işleç...) olmamalıdır.</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassInitializeShouldBeValidMessageFormat_NotAGenericClassUnlessInheritanceModeSet">
        <source>ClassInitialize method '{0}' can't be declared on a generic class without the `InheritanceBehavior` mode is set</source>
        <target state="translated">'{0}' ClassInitialize metodu 'InheritanceBehavior' modu ayarlanmamış genel bir sınıfta bildirilemez</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassInitializeShouldBeValidMessageFormat_NotAsyncVoid">
        <source>ClassInitialize method '{0}' should return 'void', 'Task' or 'ValueTask'</source>
        <target state="translated">'{0}' ClassInitialize yöntemi 'void', 'Task' veya 'ValueTask' döndürmelidir</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassInitializeShouldBeValidMessageFormat_NotGeneric">
        <source>ClassInitialize method '{0}' should not be generic</source>
        <target state="translated">'{0}' ClassInitialize yöntemi genel olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassInitializeShouldBeValidMessageFormat_Ordinary">
        <source>ClassInitialize method '{0}' should be an 'ordinary' method</source>
        <target state="translated">'{0}' ClassInitialize yöntemi 'ordinary' bir yöntem olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassInitializeShouldBeValidMessageFormat_Public">
        <source>ClassInitialize method '{0}' should be 'public'</source>
        <target state="translated">ClassInitialize yöntemi '{0}' 'public' olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassInitializeShouldBeValidMessageFormat_ReturnType">
        <source>ClassInitialize method '{0}' should return 'void', 'Task' or 'ValueTask'</source>
        <target state="translated">'{0}' ClassInitialize yöntemi 'void', 'Task' veya 'ValueTask' döndürmelidir</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassInitializeShouldBeValidMessageFormat_SingleContextParameter">
        <source>ClassInitialize method '{0}' should take a single parameter of type 'TestContext'</source>
        <target state="translated">'{0}' ClassInitialize yöntemi, 'TestContext' türünde tek bir parametre almalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassInitializeShouldBeValidMessageFormat_Static">
        <source>ClassInitialize method '{0}' should be 'static'</source>
        <target state="translated">ClassInitialize yöntemi '{0}' 'static' olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassInitializeShouldBeValidTitle">
        <source>ClassInitialize methods should have valid layout</source>
        <target state="translated">ClassInitialize yöntemleri geçerli bir düzene sahip olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="DataRowShouldBeValidDescription">
        <source>DataRow entry should have the following layout to be valid:
- should only be set on a test method;
- argument count should match method argument count;
- argument type should match method argument type.</source>
        <target state="translated">DataRow girdisi, geçerli olması için aşağıdaki koşulları karşılamalıdır:
- yalnızca bir test yönteminde ayarlanmalıdır; 
- bağımsız değişken sayısı yöntem bağımsız değişkeni sayısıyla eşleşmelidir;
- bağımsız değişken sayısı yöntem bağımsız değişkeni sayısıyla eşleşmelidir.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataRowShouldBeValidMessageFormat_ArgumentCountMismatch">
        <source>DataRow argument count should match method parameter count (constructor arguments: {0}, method parameters: {1})</source>
        <target state="translated">DataRow bağımsız değişken sayısı, yöntem parametresi sayısıyla eşleşmelidir (oluşturucu bağımsız değişkenleri: {0}, yöntem parametreleri: {1})</target>
        <note />
      </trans-unit>
      <trans-unit id="DataRowShouldBeValidMessageFormat_ArgumentTypeMismatch">
        <source>DataRow argument type should match method parameter type. Mismatches occur at indices: {0}</source>
        <target state="translated">DataRow bağımsız değişken türü, yöntem parametresinin türüyle eşleşmelidir. Dizinler sırasında uyuşmazlıklar oluştu: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="DataRowShouldBeValidMessageFormat_OnTestMethod">
        <source>DataRow should only be set on a test method</source>
        <target state="translated">DataRow yalnızca bir test yönteminde ayarlanmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="DataRowShouldBeValidTitle">
        <source>DataRow should be valid</source>
        <target state="translated">DataRow geçerli olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotNegateBooleanAssertionMessageFormat">
        <source>Do not negate boolean assertions, instead use the opposite assertion</source>
        <target state="translated">Boole onay deyimlerini tersine çevirme, bunun yerine ters onay deyimini kullan</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotNegateBooleanAssertionTitle">
        <source>Do not negate boolean assertions</source>
        <target state="translated">Boole onay deyimlerini tersine çevirme</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotStoreStaticTestContextAnalyzerMessageFormat">
        <source>Do not store TestContext in a static member</source>
        <target state="translated">TestContext'i statik üyede depolama</target>
        <note />
      </trans-unit>
      <trans-unit id="DoNotStoreStaticTestContextAnalyzerTitle">
        <source>Do not store TestContext in a static member</source>
        <target state="translated">TestContext'i statik üyede depolama</target>
        <note />
      </trans-unit>
      <trans-unit id="PreferConstructorOverTestInitializeMessageFormat">
        <source>Prefer constructors over TestInitialize methods</source>
        <target state="translated">Oluşturucuları TestInitialize yöntemlerine tercih et</target>
        <note />
      </trans-unit>
      <trans-unit id="PreferConstructorOverTestInitializeTitle">
        <source>Prefer constructors over TestInitialize methods</source>
        <target state="translated">Oluşturucuları TestInitialize yöntemlerine tercih et</target>
        <note />
      </trans-unit>
      <trans-unit id="PreferDisposeOverTestCleanupMessageFormat">
        <source>Prefer 'Dispose' over TestCleanup methods</source>
        <target state="translated">'Dispose' yöntemlerini TestCleanup yöntemlerine tercih et</target>
        <note />
      </trans-unit>
      <trans-unit id="PreferDisposeOverTestCleanupTitle">
        <source>Prefer 'Dispose' over TestCleanup methods</source>
        <target state="translated">'Dispose' yöntemlerini TestCleanup yöntemlerine tercih et</target>
        <note />
      </trans-unit>
      <trans-unit id="PreferTestCleanupOverDisposeMessageFormat">
        <source>Prefer TestCleanup over 'Dispose' methods</source>
        <target state="translated">TestCleanup yöntemlerini 'Dispose' yöntemlerine tercih et</target>
        <note />
      </trans-unit>
      <trans-unit id="PreferTestCleanupOverDisposeTitle">
        <source>Prefer TestCleanup over 'Dispose' methods</source>
        <target state="translated">TestCleanup yöntemlerini 'Dispose' yöntemlerine tercih et</target>
        <note />
      </trans-unit>
      <trans-unit id="PreferTestInitializeOverConstructorMessageFormat">
        <source>Prefer TestInitialize methods over constructors</source>
        <target state="translated">TestInitialize yöntemlerini oluşturuculara tercih et</target>
        <note />
      </trans-unit>
      <trans-unit id="PreferTestInitializeOverConstructorTitle">
        <source>Prefer TestInitialize methods over constructors</source>
        <target state="translated">TestInitialize yöntemlerini oluşturuculara tercih et</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicTypeShouldBeTestClassDescription">
        <source>It's considered a good practice to have only test classes marked public in a test project.</source>
        <target state="translated">Test projesinde yalnızca public olarak işaretlenmiş test sınıflarının olması iyi bir uygulama olarak kabul edilir.</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicTypeShouldBeTestClassMessageFormat">
        <source>Public type '{0}' should be marked with '[TestClass]' or changed to 'internal'</source>
        <target state="translated">'{0}'' genel türü [TestClass]' ile işaretlenmeli ' veya 'internal' olarak değiştirilmelidir</target>
        <note />
      </trans-unit>
      <trans-unit id="PublicTypeShouldBeTestClassTitle">
        <source>Public types should be test classes</source>
        <target state="translated">Genel türler test sınıfları olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestClassShouldBeValidDescription">
        <source>Test classes, classes marked with the '[TestClass]' attribute, should respect the following layout to be considered valid by MSTest:
- it should be 'public' (or 'internal' if '[assembly: DiscoverInternals]' attribute is set)
- it should not be 'static' (except if it contains only 'AssemblyInitialize' and/or 'AssemblyCleanup' methods)
- it should not be generic.</source>
        <target state="translated">'[TestClass]' özniteliğiyle işaretlenen sınıflar olan test sınıfları, MSTest:
 tarafından geçerli kabul edilmeleri için aşağıdaki düzene uygum olmalıdır
- 'public' (veya '[assembly: DiscoverInternals]' özniteliği ayarlanmışsa 'internal') olmalıdır
- 'static' olmamalıdır (yalnızca 'AssemblyInitialize' ve/veya 'AssemblyCleanup' yöntemlerini içermesi hariç)
- genel olmalıdır.</target>
        <note />
      </trans-unit>
      <trans-unit id="TestClassShouldBeValidMessageFormat_NotStatic">
        <source>Test class '{0}' should not be 'static'</source>
        <target state="translated">'{0}' test sınıfı 'static' olamaz</target>
        <note />
      </trans-unit>
      <trans-unit id="TestClassShouldBeValidMessageFormat_Public">
        <source>Test class '{0}' should be 'public'</source>
        <target state="translated">'{0}' test sınıfı 'public' olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestClassShouldBeValidMessageFormat_PublicOrInternal">
        <source>Test class '{0}' should be 'public' or 'internal'</source>
        <target state="translated">'{0}' test sınıfı 'public' veya 'internal' olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestClassShouldBeValidTitle">
        <source>Test classes should have valid layout</source>
        <target state="translated">Test sınıfları geçerli bir düzene sahip olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestClassShouldHaveTestMethodDescription">
        <source>Test class should have at least one test method or be 'static' with method(s) marked by '[AssemblyInitialization]' and/or '[AssemblyCleanup]'.</source>
        <target state="translated">Test sınıfı en az bir test yöntemine sahip olmalıdır veya '[AssemblyInitialization]' ve/veya '[AssemblyCleanup]' ile işaretlenen yöntemlere sahip 'static' olmalıdır.</target>
        <note />
      </trans-unit>
      <trans-unit id="TestClassShouldHaveTestMethodMessageFormat">
        <source>Test class '{0}' should have at least one test method or be 'static' with method(s) marked by '[AssemblyInitialization]' and/or '[AssemblyCleanup]'</source>
        <target state="translated">'{0}' test sınıfı en az bir test yöntemine sahip olmalıdır veya '[AssemblyInitialization]' ve/veya '[AssemblyCleanup]' ile işaretlenen yöntemlere sahip 'static' olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestClassShouldHaveTestMethodTitle">
        <source>Test class should have test method</source>
        <target state="translated">Test sınıfı test yöntemine sahip olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestCleanupShouldBeValidDescription">
        <source>Methods marked with [TestCleanup] should follow the following layout to be valid:
- it should be 'public' 
- it should not be 'static'
- it should not be generic
- it should not be 'abstract'
- it should not take any parameter
- return type should be 'void', 'Task' or 'ValueTask'
- it should not be 'async void'
- it should not be a special method (finalizer, operator...).</source>
        <target state="translated">[TestCleanup] ile işaretlenen yöntemlerin geçerli olması için aşağıdaki düzeni takip etmesi gerekir:
- 'public' olmalıdır 
- 'static' olmamalıdır
- genel olmamalıdır
- 'abstract' olmamalıdır
- herhangi bir parametre almamalıdır
- dönüş türü 'void', 'Task' veya 'ValueTask' olmalıdır
- 'async void' olmamalıdır
- özel bir yöntem (sonlandırıcı, işleç...) olmamalıdır.</target>
        <note />
      </trans-unit>
      <trans-unit id="TestCleanupShouldBeValidMessageFormat_NoParameters">
        <source>TestCleanup method '{0}' should not take any parameter</source>
        <target state="translated">'{0}' TestCleanup yöntemi herhangi bir parametre almamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestCleanupShouldBeValidMessageFormat_NotAbstract">
        <source>TestCleanup method '{0}' should not be 'abstract'</source>
        <target state="translated">'{0}' TestCleanup yöntemi 'abstract' olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestCleanupShouldBeValidMessageFormat_NotAsyncVoid">
        <source>TestCleanup method '{0}' should not be 'async void'</source>
        <target state="translated">'{0}' TestCleanup yöntemi 'async void' olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestCleanupShouldBeValidMessageFormat_NotGeneric">
        <source>TestCleanup method '{0}' should not be generic</source>
        <target state="translated">'{0}' TestCleanup yöntemi genel olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestCleanupShouldBeValidMessageFormat_NotStatic">
        <source>TestCleanup method '{0}' should not be 'static'</source>
        <target state="translated">'{0}' TestCleanup yöntemi 'static' olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestCleanupShouldBeValidMessageFormat_Ordinary">
        <source>TestCleanup method '{0}' should be an 'ordinary' method</source>
        <target state="translated">'{0}' TestCleanup yöntemi 'ordinary' bir yöntem olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestCleanupShouldBeValidMessageFormat_Public">
        <source>TestCleanup method '{0}' should be 'public'</source>
        <target state="translated">'{0}' TestCleanup yöntemi 'public' olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestCleanupShouldBeValidMessageFormat_ReturnType">
        <source>TestCleanup method '{0}' should return 'void', 'Task' or 'ValueTask'</source>
        <target state="translated">'{0}' TestCleanup yöntemi 'void', 'Task' veya 'ValueTask' döndürmelidir</target>
        <note />
      </trans-unit>
      <trans-unit id="TestCleanupShouldBeValidTitle">
        <source>TestCleanup method should have valid layout</source>
        <target state="translated">TestCleanup yöntemi geçerli bir düzene sahip olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestContextShouldBeValidDescription">
        <source>TestContext property should follow the following layout to be valid:
- it should be a property
- it should be 'public' (or 'internal' if '[assembly: DiscoverInternals]' attribute is set)
- it should not be 'static'
- it should not be readonly.</source>
        <target state="translated">TestContext özelliğinin geçerli olması için aşağıdaki düzeni izlemesi gerekir:
- bir özellik olmalıdır
- 'public' (veya '[assembly: DiscoverInternals]' özniteliği ayarlanmışsa 'internal') olmalıdır
- 'static' olmamalıdır
- salt okunur olamaz.</target>
        <note />
      </trans-unit>
      <trans-unit id="TestContextShouldBeValidMessageFormat_NotField">
        <source>Member 'TestContext' should be a property and not a field</source>
        <target state="translated">'TestContext' üyesi bir alan değil bir özellik olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestContextShouldBeValidMessageFormat_NotReadonly">
        <source>Property 'TestContext' should be settable</source>
        <target state="translated">'TestContext' özelliği ayarlanmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestContextShouldBeValidMessageFormat_NotStatic">
        <source>Property 'TestContext' should not be 'static'</source>
        <target state="translated">'TestContext' özelliği 'static' olamaz</target>
        <note />
      </trans-unit>
      <trans-unit id="TestContextShouldBeValidMessageFormat_Public">
        <source>Property 'TestContext' should be 'public'</source>
        <target state="translated">'TestContext' özelliği 'public' olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestContextShouldBeValidMessageFormat_PublicOrInternal">
        <source>Property 'TestContext' should be 'public' or 'internal'</source>
        <target state="translated">'TestContext' özelliği 'public' veya 'internal' olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestContextShouldBeValidTitle">
        <source>Test context property should have valid layout</source>
        <target state="translated">Test bağlamı özelliğinin geçerli düzeni olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestInitializeShouldBeValidDescription">
        <source>Methods marked with [TestInitialize] should follow the following layout to be valid:
- it should be 'public' 
- it should not be 'static'
- it should not be generic
- it should not be 'abstract'
- it should not take any parameter
- return type should be 'void', 'Task' or 'ValueTask'
- it should not be 'async void'
- it should not be a special method (finalizer, operator...).</source>
        <target state="translated">[TestInitialize] ile işaretlenen yöntemlerin geçerli olması için aşağıdaki düzeni takip etmesi gerekir:
- 'public' olmalıdır 
- 'static' olmamalıdır
- genel olmamalıdır
- 'abstract' olmamalıdır
- herhangi bir parametre almamalıdır
- dönüş türü 'void', 'Task' veya 'ValueTask' olmalıdır
- 'async void' olmamalıdır
- özel bir yöntem (sonlandırıcı, işleç...) olmamalıdır.</target>
        <note />
      </trans-unit>
      <trans-unit id="TestInitializeShouldBeValidMessageFormat_NoParameters">
        <source>TestInitialize method '{0}' should not take any parameter</source>
        <target state="translated">'{0}' TestCleanup yöntemi herhangi bir parametre almamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestInitializeShouldBeValidMessageFormat_NotAbstract">
        <source>TestInitialize method '{0}' should not be 'abstract'</source>
        <target state="translated">'{0}' TestInitialize yöntemi 'abstract' olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestInitializeShouldBeValidMessageFormat_NotAsyncVoid">
        <source>TestInitialize method  '{0}' should not be 'async void'</source>
        <target state="translated">'{0}' TestInitialize yöntemi 'async void' olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestInitializeShouldBeValidMessageFormat_NotGeneric">
        <source>TestInitialize method '{0}' should not be generic</source>
        <target state="translated">'{0}' TestInitialize yöntemi genel olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestInitializeShouldBeValidMessageFormat_NotStatic">
        <source>TestInitialize method '{0}' should not be 'static'</source>
        <target state="translated">'{0}' TestInitialize yöntemi 'static' olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestInitializeShouldBeValidMessageFormat_Ordinary">
        <source>TestInitialize method '{0}' should be an 'ordinary' method</source>
        <target state="translated">'{0}' TestInitialize yöntemi 'ordinary' bir yöntem olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestInitializeShouldBeValidMessageFormat_Public">
        <source>TestInitialize method '{0}' should be 'public'</source>
        <target state="translated">'{0}' TestInitialize yöntemi 'public' olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestInitializeShouldBeValidMessageFormat_ReturnType">
        <source>TestInitialize method '{0}' should return 'void', 'Task' or 'ValueTask'</source>
        <target state="translated">'{0}' TestCleanup yöntemi 'void', 'Task' veya 'ValueTask' döndürmelidir</target>
        <note />
      </trans-unit>
      <trans-unit id="TestInitializeShouldBeValidTitle">
        <source>TestInitialize method should have valid layout</source>
        <target state="translated">TestInitialize yöntemi geçerli bir düzene sahip olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestMethodShouldBeValidDescription">
        <source>Test methods, methods marked with the '[TestMethod]' attribute, should respect the following layout to be considered valid by MSTest:
- it should be 'public' (or 'internal' if '[assembly: DiscoverInternals]' attribute is set)
- it should not be 'static'
- it should not be generic
- it should not be 'abstract'
- return type should be 'void', 'Task' or 'ValueTask'
- it should not be 'async void'
- it should not be a special method (finalizer, operator...).</source>
        <target state="translated">'[TestMethod]' özniteliğiyle işaretlenen test yöntemleri, MSTest:
 tarafından geçerli kabul edilmesi için aşağıdaki düzene göre düzenlenmelidir.
- 'public' (veya '[assembly: DiscoverInternals]' özniteliği ayarlanmışsa 'internal') olmalıdır
- 'static' olmamalıdır
- genel olmamalıdır
- 'abstract' olmamalıdır
- dönüş türü 'void', 'Task' veya 'ValueTask' olmalıdır
- 'async void' olmamalıdır
- özel bir yöntem (sonlandırıcı, işleç...) olmamalıdır.</target>
        <note />
      </trans-unit>
      <trans-unit id="TestMethodShouldBeValidMessageFormat_NotAbstract">
        <source>Test method '{0}' should not be 'abstract'</source>
        <target state="translated">'{0}' test metodu 'abstract' olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestMethodShouldBeValidMessageFormat_NotAsyncVoid">
        <source>Test method '{0}' should not be 'async void'</source>
        <target state="translated">'{0}' test metodu 'async void' olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestMethodShouldBeValidMessageFormat_NotGeneric">
        <source>Test method '{0}' should not be generic</source>
        <target state="translated">'{0}' test metodu genel olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestMethodShouldBeValidMessageFormat_NotStatic">
        <source>Test method '{0}' should not be 'static'</source>
        <target state="translated">'{0}' test metodu 'static' olmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestMethodShouldBeValidMessageFormat_Ordinary">
        <source>Test method '{0}' should be an 'ordinary' method</source>
        <target state="translated">'{0}' test metodu 'ordinary' bir yöntem olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestMethodShouldBeValidMessageFormat_Public">
        <source>Test method '{0}' should be 'public'</source>
        <target state="translated">'{0}' test metodu 'public' olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestMethodShouldBeValidMessageFormat_PublicOrInternal">
        <source>Test method '{0}' should be 'public' or 'internal'</source>
        <target state="translated">'{0}' test metodu 'public' veya 'internal' olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestMethodShouldBeValidMessageFormat_ReturnType">
        <source>Test method '{0}' should return 'void', 'Task' or 'ValueTask'</source>
        <target state="translated">'{0}' test metodu 'void', 'Task' veya 'ValueTask' döndürmelidir</target>
        <note />
      </trans-unit>
      <trans-unit id="TestMethodShouldBeValidTitle">
        <source>Test methods should have valid layout</source>
        <target state="translated">Test yöntemleri geçerli bir düzene sahip olmalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestMethodShouldNotBeIgnoredAnalyzerDescription">
        <source>Test methods should not be ignored (marked with '[Ignore]').</source>
        <target state="translated">Test metotları yoksaymamalıdır ('[Ignore]' olarak işaretli).</target>
        <note />
      </trans-unit>
      <trans-unit id="TestMethodShouldNotBeIgnoredAnalyzerFormat">
        <source>Test method '{0}' should not be ignored</source>
        <target state="translated">Test metodu '{0}' yoksayılmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="TestMethodShouldNotBeIgnoredAnalyzerTitle">
        <source>Test method should not be ignored</source>
        <target state="translated">Test metodu yoksayılmamalıdır</target>
        <note />
      </trans-unit>
      <trans-unit id="UseAttributeOnTestMethodAnalyzerMessageFormat">
        <source>[{0}] can only be set on methods marked with [TestMethod]</source>
        <target state="translated">[{0}] yalnızca [TestMethod] ile işaretli yöntemlerde ayarlanabilir</target>
        <note />
      </trans-unit>
      <trans-unit id="UseAttributeOnTestMethodAnalyzerTitle">
        <source>[{0}] can only be set on methods marked with [TestMethod]</source>
        <target state="translated">[{0}] yalnızca [TestMethod] ile işaretli yöntemlerde ayarlanabilir</target>
        <note />
      </trans-unit>
      <trans-unit id="UseParallelizeAttributeAnalyzerDescription">
        <source>By default, MSTest runs tests within the same assembly sequentially, which can lead to severe performance limitations. It is recommended to enable assembly attribute '[Parallelize]' to run tests in parallel, or if the assembly is known to not be parallelizable, to use explicitly the assembly level attribute '[DoNotParallelize]'.</source>
        <target state="translated">Varsayılan olarak, MSTest hizmeti testleri aynı derleme içinde sırayla çalıştırır ve bu durum ciddi performans sınırlamalarına yol açabilir. Testleri paralel yürütmek için '[Parallelize]' derleme özniteliğini etkinleştirmeniz önerilir veya derlemenin paralelleştirilebilir olduğu biliniyorsa, doğrudan '[DoNotParallelize]' derleme düzeyi özniteliğini kullanmanız önerilir.</target>
        <note />
      </trans-unit>
      <trans-unit id="UseParallelizeAttributeAnalyzerMessageFormat">
        <source>Explicitly enable or disable tests parallelization</source>
        <target state="translated">Doğrudan test paralelleştirmeyi etkinleştirin veya devre dışı bırakın</target>
        <note />
      </trans-unit>
      <trans-unit id="UseParallelizeAttributeAnalyzerTitle">
        <source>Explicitly enable or disable tests parallelization</source>
        <target state="translated">Doğrudan test paralelleştirmeyi etkinleştirin veya devre dışı bırakın</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>