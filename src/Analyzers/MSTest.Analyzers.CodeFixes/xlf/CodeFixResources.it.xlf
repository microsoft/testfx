<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="it" original="../CodeFixResources.resx">
    <body>
      <trans-unit id="AddCallerInfoParametersFix">
        <source>Add '[CallerFilePath]' and '[CallerLineNumber]' parameters</source>
        <target state="translated">Aggiungere i parametri '[CallerFilePath]' e '[CallerLineNumber]'</target>
        <note />
      </trans-unit>
      <trans-unit id="AddTestClassFix">
        <source>Add '[TestClass]'</source>
        <target state="translated">Aggiungi '[TestClass]'</target>
        <note />
      </trans-unit>
      <trans-unit id="AddTestMethodAttributeFix">
        <source>Add '[TestMethod]'</source>
        <target state="translated">Aggiungi '[TestMethod]'</target>
        <note />
      </trans-unit>
      <trans-unit id="AssertionArgsShouldAvoidConditionalAccessFix">
        <source>Move conditional access in assertion to separate 'Assert.IsNotNull' check</source>
        <target state="translated">Sposta l'accesso condizionale nell'asserzione per separare il controllo 'Assert.IsNotNull'</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidAssertAreSameWithValueTypesFix">
        <source>Use '{0}'</source>
        <target state="translated">Usare ‘{0}’</target>
        <note />
      </trans-unit>
      <trans-unit id="AvoidOutParameterOnAssertIsInstanceOfTypeFix">
        <source>Use assignment instead of 'out' parameter</source>
        <target state="translated">Usare l'assegnazione anziché il parametro 'out'</target>
        <note />
      </trans-unit>
      <trans-unit id="ChangeMethodAccessibilityToPrivateFix">
        <source>Change method accessibility to 'private'</source>
        <target state="translated">Modifica l'accessibilità del metodo in 'privato'</target>
        <note />
      </trans-unit>
      <trans-unit id="ChangeStructToClassAndAddTestClassFix">
        <source>Change to 'class' and add '[TestClass]'</source>
        <target state="translated">Cambia in 'class' e aggiungi '[TestClass]'</target>
        <note />
      </trans-unit>
      <trans-unit id="FixAssertionArgsOrder">
        <source>Fix actual/expected arguments order</source>
        <target state="translated">Correggi l'ordine degli argomenti effettivi/previsti</target>
        <note />
      </trans-unit>
      <trans-unit id="FixSignatureCodeFix">
        <source>Fix signature</source>
        <target state="translated">Correggi firma</target>
        <note />
      </trans-unit>
      <trans-unit id="PassCancellationTokenFix">
        <source>Pass 'TestContext.CancellationToken' argument to method call</source>
        <target state="translated">Passare l'argomento 'TestContext.CancellationToken' alla chiamata al metodo</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveClassCleanupBehaviorArgumentFix">
        <source>Remove 'ClassCleanupBehavior' argument</source>
        <target state="translated">Rimuovere l'argomento 'ClassCleanupBehavior'</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveDynamicDataSourceTypeFix">
        <source>Remove 'DynamicDataSourceType' parameter to use default 'AutoDetect'</source>
        <target state="translated">Rimuovi il parametro ''DynamicDataSourceType'' per utilizzare il valore predefinito ''AutoDetect''</target>
        <note />
      </trans-unit>
      <trans-unit id="ReplaceDataTestMethodWithTestMethodTitle">
        <source>Replace 'DataTestMethod' with 'TestMethod'</source>
        <target state="translated">Sostituisci 'DataTestMethod' con 'TestMethod'</target>
        <note />
      </trans-unit>
      <trans-unit id="ReplaceWithConstructorFix">
        <source>Replace TestInitialize method with constructor</source>
        <target state="translated">Sostituisci il metodo TestInitialize con il costruttore</target>
        <note />
      </trans-unit>
      <trans-unit id="ReplaceWithDisposeFix">
        <source>Replace TestCleanup with Dispose method</source>
        <target state="translated">Sostituisci TestCleanup con il metodo Elimina</target>
        <note />
      </trans-unit>
      <trans-unit id="ReplaceWithFailAssertionFix">
        <source>Replace the assertion with 'Assert.Fail()'</source>
        <target state="translated">Sostituire l'asserzione con 'Assert.Fail()'</target>
        <note />
      </trans-unit>
      <trans-unit id="ReplaceWithTestCleanuFix">
        <source>Replace 'Dispose' with a TestCleanup method</source>
        <target state="translated">Sostituire "Dispose" con un metodo TestCleanup</target>
        <note />
      </trans-unit>
      <trans-unit id="ReplaceWithTestInitializeFix">
        <source>Replace constructor with TestInitialize method</source>
        <target state="translated">Sostituisci costruttore con metodo TestInitialize</target>
        <note />
      </trans-unit>
      <trans-unit id="StringAssertToAssertTitle">
        <source>Use 'Assert.{0}' instead of 'StringAssert'</source>
        <target state="translated">Usa 'Assert.{0}' invece di 'StringAssert'</target>
        <note />
      </trans-unit>
      <trans-unit id="TestClassShouldBeValidFix">
        <source>Fix test class signature</source>
        <target state="translated">Correggi la firma della classe di test</target>
        <note />
      </trans-unit>
      <trans-unit id="TestContextShouldBeValidFix">
        <source>Fix test context</source>
        <target state="translated">Correggi il contesto di test</target>
        <note />
      </trans-unit>
      <trans-unit id="TestMethodShouldBeValidFix">
        <source>Fix test method signature</source>
        <target state="translated">Correggi la firma del metodo di test</target>
        <note />
      </trans-unit>
      <trans-unit id="TransformExecuteToExecuteAsyncFix">
        <source>Transform 'Execute' override to 'ExecuteAsync'</source>
        <target state="translated">Trasformare l'override di 'Execute' in 'ExecuteAsync'</target>
        <note />
      </trans-unit>
      <trans-unit id="UseAttributeOnTestMethodFix">
        <source>Add '[TestMethod]'</source>
        <target state="translated">Aggiungi '[TestMethod]'</target>
        <note />
      </trans-unit>
      <trans-unit id="UseContainsKeyInsteadOfContainsFix">
        <source>Use 'ContainsKey' instead of 'Contains'</source>
        <target state="translated">Usare 'ContainsKey' invece di 'Contains'</target>
        <note />
      </trans-unit>
      <trans-unit id="UseCancellationTokenPropertyFix">
        <source>Use 'TestContext.CancellationToken' instead</source>
        <target state="translated">In alternativa, usare 'TestContext.CancellationToken'</target>
        <note />
      </trans-unit>
      <trans-unit id="UseCooperativeCancellationForTimeoutFix">
      <trans-unit id="UseTaskRunTestMethodFix">
        <source>Use '[TaskRunTestMethod]'</source>
        <target state="new">Use '[TaskRunTestMethod]'</target>
        <note />
      </trans-unit>
        <source>Use 'CooperativeCancellation = true'</source>
      <trans-unit id="UseTaskRunTestMethodFix">
        <source>Use '[TaskRunTestMethod]'</source>
        <target state="new">Use '[TaskRunTestMethod]'</target>
        <note />
      </trans-unit>
        <target state="translated">Usa "CooperativeCancellation = true"</target>
      <trans-unit id="UseTaskRunTestMethodFix">
        <source>Use '[TaskRunTestMethod]'</source>
        <target state="new">Use '[TaskRunTestMethod]'</target>
        <note />
      </trans-unit>
        <note />
      <trans-unit id="UseTaskRunTestMethodFix">
        <source>Use '[TaskRunTestMethod]'</source>
        <target state="new">Use '[TaskRunTestMethod]'</target>
        <note />
      </trans-unit>
      </trans-unit>
      <trans-unit id="UseTaskRunTestMethodFix">
        <source>Use '[TaskRunTestMethod]'</source>
        <target state="new">Use '[TaskRunTestMethod]'</target>
        <note />
      </trans-unit>
      <trans-unit id="UseDisplayNamePropertyInsteadOfStringArgumentFix">
        <source>Use 'DisplayName' property instead of string argument</source>
        <target state="translated">Usare la proprietà 'DisplayName' invece di un argomento stringa</target>
        <note />
      </trans-unit>
      <trans-unit id="UseProperAssertMethodsFix">
        <source>Use '{0}'</source>
        <target state="translated">Usa '{0}'</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>