<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" original="../Resource.resx" target-language="ko">
    <body>
      <trans-unit id="AssemblyCleanupTimedOut">
        <source>Assembly cleanup method '{0}.{1}' timed out</source>
        <target state="translated">어셈블리 정리 메서드 '{0}.{1}'이(가) 시간 초과되었습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyCleanupWasCancelled">
        <source>Assembly cleanup method '{0}.{1}' was cancelled</source>
        <target state="translated">어셈블리 정리 메서드 '{0}.{1}'이(가) 취소되었습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyInitializeTimedOut">
        <source>Assembly initialize method '{0}.{1}' timed out</source>
        <target state="translated">'{0}.{1}' 어셈블리 초기화 메서드의 시간이 초과되었습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyInitializeWasCancelled">
        <source>Assembly initialize method '{0}.{1}' was cancelled</source>
        <target state="translated">'{0}.{1}' 어셈블리 초기화 메서드가 취소되었습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassCleanupTimedOut">
        <source>Class cleanup method '{0}.{1}' timed out</source>
        <target state="translated">클래스 정리 메서드 '{0}.{1}'이(가) 시간 초과되었습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassCleanupWasCancelled">
        <source>Class cleanup method '{0}.{1}' was cancelled</source>
        <target state="translated">클래스 정리 메서드 '{0}.{1}'이(가) 취소되었습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassInitializeTimedOut">
        <source>Class initialize method '{0}.{1}' timed out</source>
        <target state="translated">'{0}.{1}' 클래스 초기화 메서드의 시간이 초과되었습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassInitializeWasCancelled">
        <source>Class initialize method '{0}.{1}' was cancelled</source>
        <target state="translated">'{0}.{1}' 클래스 초기화 메서드가 취소되었습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="Execution_Test_Timeout">
        <source>Test '{0}' exceeded execution timeout period.</source>
        <target state="translated">'{0}' 테스트가 실행 시간 제한을 초과했습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="STAIsOnlySupportedOnWindowsWarning">
        <source>Runsettings entry '&lt;ExecutionApartmentState&gt;STA&lt;/ExecutionApartmentState&gt;' is not supported on non-Windows OSes.</source>
        <target state="translated">Runsettings 항목 '&lt;ExecutionApartmentState&gt;STA&lt;/ExecutionApartmentState&gt;'는 Windows 이외의 OS에서는 지원되지 않습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="SourcesNotSupported">
        <source>Running tests in any of the provided sources is not supported for the selected platform</source>
        <target state="translated">선택된 플랫폼의 경우 제공된 소스에서 테스트를 실행할 수 없습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="TestCleanupTimedOut">
        <source>Test cleanup method '{0}.{1}' timed out</source>
        <target state="translated">테스트 정리 메서드 '{0}.{1}'이(가) 시간 초과되었습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="TestCleanupWasCancelled">
        <source>Test cleanup method '{0}.{1}' was cancelled</source>
        <target state="translated">테스트 정리 메서드 '{0}.{1}'이(가) 취소되었습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="TestInitializeTimedOut">
        <source>Test initialize method '{0}.{1}' timed out</source>
        <target state="translated">'{0}.{1}' 테스트 초기화 메서드의 시간이 초과되었습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="TestInitializeWasCancelled">
        <source>Test initialize method '{0}.{1}' was cancelled</source>
        <target state="translated">'{0}.{1}' 테스트 초기화 메서드가 취소되었습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="UTA_CleanupMethodThrows">
        <source>TestCleanup method {0}.{1} threw exception. {2}.</source>
        <target state="translated">TestCleanup 메서드 {0}.{1}에서 예외가 발생했습니다. {2}.</target>
        <note />
      </trans-unit>
      <trans-unit id="UTA_EndOfInnerExceptionTrace">
        <source>--- End of inner exception stack trace ---</source>
        <target state="translated">--- 내부 예외 스택 추적의 끝 ---</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ErrorMultiAssemblyClean">
        <source>UTA014: {0}: Cannot define more than one method with the AssemblyCleanup attribute inside an assembly.</source>
        <target state="translated">UTA014: {0}: 어셈블리 내부에서 AssemblyCleanup 특성을 사용하는 메서드를 여러 개 정의할 수 없습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ErrorMultiAssemblyInit">
        <source>UTA013: {0}: Cannot define more than one method with the AssemblyInitialize attribute inside an assembly.</source>
        <target state="translated">UTA013: {0}: 어셈블리 내부에서 AssemblyInitialize 특성을 사용하는 메서드를 여러 개 정의할 수 없습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ErrorMultiClassClean">
        <source>UTA026: {0}: Cannot define more than one method with the ClassCleanup attribute inside a class.</source>
        <target state="translated">UTA026: {0}: 클래스 내부에서 ClassCleanup 특성을 사용하는 메서드를 여러 개 정의할 수 없습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ErrorMultiClassInit">
        <source>UTA025: {0}: Cannot define more than one method with the ClassInitialize attribute inside a class.</source>
        <target state="translated">UTA025: {0}: 클래스 내부에서 ClassInitialize 특성을 사용하는 메서드를 여러 개 정의할 수 없습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ErrorMultiClean">
        <source>UTA024: {0}: Cannot define more than one method with the TestCleanup attribute.</source>
        <target state="translated">UTA024: {0}: TestCleanup 특성을 사용하는 메서드를 여러 개 정의할 수 없습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ErrorMultiInit">
        <source>UTA018: {0}: Cannot define more than one method with the TestInitialize attribute.</source>
        <target state="translated">UTA018: {0}: TestInitialize 특성을 사용하는 메서드를 여러 개 정의할 수 없습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ErrorTestClassIsGenericNonAbstract">
        <source>TestClass attribute defined on generic non-abstract class {0}</source>
        <target state="translated">일반 비추상 클래스 {0}에 정의된 TestClass 속성</target>
        <note />
      </trans-unit>
      <trans-unit id="UTA_InitMethodThrows">
        <source>Initialization method {0}.{1} threw exception. {2}.</source>
        <target state="translated">초기화 메서드 {0}.{1}에서 예외를 throw했습니다. {2}.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_InstanceCreationError">
        <source>Unable to create instance of class {0}. Error: {1}.</source>
        <target state="translated">{0} 클래스의 인스턴스를 만들 수 없습니다. 오류: {1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_TestContextSetError">
        <source>Unable to set TestContext property for the class {0}. Error: {1}.</source>
        <target state="translated">{0} 클래스에 대해 TestContext 속성을 설정할 수 없습니다. 오류: {1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTF_FailedToGetExceptionMessage">
        <source>(Failed to get the message for an exception of type {0} due to an exception.)</source>
        <target state="translated">(예외로 인해 {0} 형식의 예외에 대한 메시지를 가져오지 못했습니다.)</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ErrorInValidTestContextSignature">
        <source>UTA031: class {0} does not have valid TestContext property. TestContext must be of type TestContext, must be non-static, public and must not be read-only. For example: public TestContext TestContext.</source>
        <target state="translated">UTA031: {0} 클래스에 올바른 TestContext 속성이 없습니다. TestContext는 TestContext 형식이어야 하고 읽기 전용이 아니어야 하며, static이 아니고 public이어야 합니다. 예: public TestContext TestContext.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ErrorNonPublicTestClass">
        <source>UTA001: TestClass attribute defined on non-public class {0}</source>
        <target state="translated">UTA001: public이 아닌 클래스 {0}에서 TestClass 특성을 정의했습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="CouldNotInspectTypeDuringDiscovery">
        <source>MSTestAdapter failed to discover tests in class '{0}' of assembly '{1}' because {2}.</source>
        <target state="translated">MSTestAdapter가 {2} 때문에 어셈블리 '{1}'의 클래스 '{0}'에서 테스트를 검색하지 못했습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="EnumeratorLoadTypeErrorFormat">
        <source>{0}: {1}</source>
        <target state="translated">{0}: {1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="TypeLoadFailed">
        <source>Unable to load types from the test source '{0}'. Some or all of the tests in this source may not be discovered.
Error: {1}</source>
        <target state="translated">테스트 소스 '{0}'에서 형식을 로드할 수 없습니다. 이 소스의 일부 또는 모든 테스트를 검색할 수 없습니다.
오류: {1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ErrorGenericTestMethod">
        <source>UTA015: A generic method cannot be a test method. {0}.{1} has invalid signature</source>
        <target state="translated">UTA015: 제네릭 메서드는 테스트 메서드일 수 없습니다. {0}.{1}에 잘못된 서명이 있습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="TestAssembly_FileDoesNotExist">
        <source>File does not exist: {0}</source>
        <target state="translated">파일이 없습니다. {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ErrorIncorrectTestMethodSignature">
        <source>UTA007: Method {1} defined in class {0} does not have correct signature. Test method marked with the [TestMethod] attribute must be non-static, public, return-type as void  and should not take any parameter. Example: public void Test.Class1.Test(). Additionally, if you are using async-await in test method then return-type must be 'Task' or 'ValueTask'. Example: public async Task Test.Class1.Test2()</source>
        <target state="translated">UTA007: 클래스 {0}에 정의된 메서드 {1}에 올바른 서명이 없습니다. [TestMethod] 특성으로 표시된 테스트 메서드는 non-static, public, return-type이 void여야 하며 매개 변수를 사용하지 않아야 합니다. 예: public void Test.Class1.Test(). 또한 테스트 메서드에서 비동기 대기를 사용하는 경우 반환 형식은 Task여야 합니다. 예: public async Task Test.Class1.Test2()</target>
        <note />
      </trans-unit>
      <trans-unit id="TestContextIsNull">
        <source>TestContext cannot be Null.</source>
        <target state="translated">TestContext는 null일 수 없습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_AssemblyCleanupMethodWasUnsuccesful">
        <source>Assembly Cleanup method {0}.{1} failed. Error Message: {2}. StackTrace: {3}</source>
        <target state="translated">어셈블리 정리 메서드 {0}.{1}이(가) 실패했습니다. 오류 메시지: {2}. StackTrace: {3}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_AssemblyInitMethodThrows">
        <source>Assembly Initialization method {0}.{1} threw exception. {2}: {3}. Aborting test execution.</source>
        <target state="translated">어셈블리 초기화 메서드 {0}.{1}에서 예외를 throw했습니다. {2}: {3}. 테스트 실행을 중단합니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ClassCleanupMethodWasUnsuccesful">
        <source>Class Cleanup method {0}.{1} failed. Error Message: {2}. Stack Trace: {3}</source>
        <target state="translated">클래스 정리 메서드 {0}.{1}이(가) 실패했습니다. 오류 메시지: {2}. 스택 추적: {3}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ClassInitMethodThrows">
        <source>Class Initialization method {0}.{1} threw exception. {2}: {3}.</source>
        <target state="translated">클래스 초기화 메서드 {0}.{1}에서 예외를 throw했습니다. {2}: {3}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ExecuteThrewException">
        <source>Exception thrown while executing test. If using extension of TestMethodAttribute then please contact vendor. Error message: {0}, Stack trace: {1}</source>
        <target state="translated">테스트를 실행하는 동안 예외가 발생했습니다. TestMethodAttribute 확장을 사용하는 경우 공급업체에 문의하세요. 오류 메시지: {0}. 스택 추적: {1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_NoTestResult">
        <source>Error in executing test. No result returned by extension. If using extension of TestMethodAttribute then please contact vendor.</source>
        <target state="translated">테스트를 실행하는 중에 오류가 발생했습니다. 확장에서 결과가 반환되지 않았습니다. TestMethodAttribute 확장을 사용하는 경우 공급업체에 문의하세요.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ClassOrAssemblyCleanupMethodHasWrongSignature">
        <source>Method {0}.{1} has wrong signature. The method must be static, public, does not return a value and should not take any parameter. Additionally, if you are using async-await in method then return-type must be 'Task' or 'ValueTask'.</source>
        <target state="translated">{0}.{1} 메서드의 서명이 잘못되었습니다. 메서드는 정적이고 공용이어야 하며, 값을 반환하거나 매개 변수를 취하지 않습니다. 또한 메서드에서 비동기 대기를 사용하는 경우 반환 형식은 'Task' 또는 'ValueTask'여야 합니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="UTA_ClassOrAssemblyInitializeMethodHasWrongSignature">
        <source>Method {0}.{1} has wrong signature. The method must be static, public, does not return a value and should take a single parameter of type TestContext. Additionally, if you are using async-await in method then return-type must be 'Task' or 'ValueTask'.</source>
        <target state="translated">{0}.{1} 메서드의 서명이 잘못되었습니다. 메서드는 static, public이어야 하고, 값을 반환하지 않으며, TestContext 형식의 단일 매개 변수를 사용해야 합니다. 또한 메서드에서 비동기 대기를 사용하는 경우 반환 형식은 'Task' 또는 'ValueTask'여야 합니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="UTA_ErrorInvalidTimeout">
        <source>UTA054: {0}.{1} has invalid Timeout attribute. The timeout must be a valid integer value and cannot be less than 0.</source>
        <target state="translated">UTA054: {0}.{1}에 잘못된 Timeout 특성이 있습니다. Timeout은 유효한 정수 값이어야 하며 0보다 작을 수 없습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ErrorPredefinedTestProperty">
        <source>UTA023: {0}: Cannot define predefined property {2} on method {1}.</source>
        <target state="translated">UTA023: {0}: {1} 메서드에서 미리 정의된 속성 {2}을(를) 정의할 수 없습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ErrorTestPropertyNullOrEmpty">
        <source>UTA021: {0}: Null or empty custom property defined on method {1}. The custom property must have a valid name.</source>
        <target state="translated">UTA021: {0}: {1} 메서드에서 Null 또는 빈 사용자 지정 속성을 정의했습니다. 사용자 지정 속성에는 올바른 이름이 지정되어 있어야 합니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_MethodDoesNotExists">
        <source>Method {0}.{1} does not exist.</source>
        <target state="translated">{0}.{1} 메서드가 없습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_NoDefaultConstructor">
        <source>Unable to get default constructor for class {0}.</source>
        <target state="translated">{0} 클래스의 기본 생성자를 가져올 수 없습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_TestContextLoadError">
        <source>Unable to find property {0}.TestContext. Error:{1}.</source>
        <target state="translated">{0}.TestContext 속성을 찾을 수 없습니다. 오류: {1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_TestContextTypeMismatchLoadError">
        <source>The {0}.TestContext has incorrect type.</source>
        <target state="translated">{0}.TestContext의 형식이 잘못되었습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_TestInitializeAndCleanupMethodHasWrongSignature">
        <source>Method {0}.{1} has wrong signature. The method must be non-static, public, does not return a value and should not take any parameter. Additionally, if you are using async-await in method then return-type must be 'Task' or 'ValueTask'.</source>
        <target state="translated">{0}.{1} 메서드의 서명이 잘못되었습니다. 메서드는 정적이 아니고 공용이어야 하며, 값을 반환하거나 매개 변수를 사용할 수 없습니다. 또한 메서드에서 비동기 대기를 사용하는 경우 반환 형식은 'Task' 또는 'ValueTask'여야 합니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="UTA_TypeLoadError">
        <source>Unable to get type {0}. Error: {1}.</source>
        <target state="translated">{0} 형식을 가져올 수 없습니다. 오류: {1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="TestNotFound">
        <source>Test method {0} was not found.</source>
        <target state="translated">{0} 테스트 메서드를 찾을 수 없습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DebugTraceBanner">
        <source>Debug Trace:</source>
        <target state="translated">디버그 추적:</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_FailedToGetTestMethodException">
        <source>Failed to obtain the exception thrown by test method {0}.{1}.</source>
        <target state="translated">테스트 메서드 {0}.{1}에서 throw한 예외를 가져오지 못했습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_TestMethodThrows">
        <source>Test method {0}.{1} threw exception: 
{2}</source>
        <target state="translated">테스트 메서드 {0}.{1}에서 예외를 throw했습니다. 
{2}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_WrongThread">
        <source>{0} For UWP projects, if you are using UI objects in test consider using [UITestMethod] attribute instead of [TestMethod] to execute test in UI thread.</source>
        <target state="translated">{0} UWP 프로젝트의 경우 테스트에서 UI 개체를 사용 중이면 [TestMethod] 대신 [UITestMethod] 특성을 사용하여 UI 스레드에서 테스트를 실행하세요.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="AttachmentSetDisplayName">
        <source>MSTestAdapterV2</source>
        <target state="translated">MSTestAdapterV2</target>
        <note></note>
      </trans-unit>
      <trans-unit id="InvalidSettingsXmlAttribute">
        <source>Invalid settings '{0}'. Unexpected XmlAttribute: '{1}'.</source>
        <target state="translated">'{0}' 설정이 잘못되었습니다. 예기치 않은 XmlAttribute '{1}'이(가) 있습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="InvalidSettingsXmlElement">
        <source>Invalid settings '{0}'. Unexpected XmlElement: '{1}'.</source>
        <target state="translated">'{0}' 설정이 잘못되었습니다. 예기치 않은 XmlElement '{1}'이(가) 있습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DataDrivenResultDisplayName">
        <source>{0} (Data Row {1})</source>
        <target state="translated">{0}(데이터 행 {1})</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_ExpectedExceptionAttributeConstructionException">
        <source>The ExpectedException attribute defined on test method {0}.{1} threw an exception during construction.
{2}</source>
        <target state="translated">테스트 메서드 {0}.{1}에 정의된 ExpectedException 특성이 생성하는 동안 예외를 throw했습니다.
{2}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_MultipleExpectedExceptionsOnTestMethod">
        <source>The test method {0}.{1} has multiple attributes derived from ExpectedExceptionBaseAttribute defined on it. Only one such attribute is allowed.</source>
        <target state="translated">테스트 메서드 {0}.{1}에는 정의되어 있는 ExpectedExceptionBaseAttribute에서 파생된 특성이 여러 개 있습니다. 이러한 특성은 하나만 허용됩니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="LegacyScenariosNotSupportedWarning">
        <source>Warning : A testsettings file or a vsmdi file is not supported with the MSTest V2 Adapter.</source>
        <target state="translated">경고: MSTest V2 어댑터에서는 testsettings 파일 또는 vsmdi 파일이 지원되지 않습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="TestContextMessageBanner">
        <source>TestContext Messages:</source>
        <target state="translated">TestContext 메시지:</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_CleanupMethodThrowsGeneralError">
        <source>Error calling Test Cleanup method for test class {0}: {1}</source>
        <target state="translated">테스트 클래스 {0}에 대한 테스트 정리 메서드를 호출하는 오류: {1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_CleanupStackTrace">
        <source>TestCleanup Stack Trace</source>
        <target state="translated">TestCleanup 스택 추적</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DiscoveryWarning">
        <source>[MSTest][Discovery][{0}] {1}</source>
        <target state="translated">[MSTest][검색][{0}] {1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="TestParallelizationBanner">
        <source>MSTest Executor: Test Parallelization enabled for {0} (Workers: {1}, Scope: {2}).</source>
        <target state="translated">MSTest 실행기: {0}에 대해 테스트 병렬 처리를 사용합니다(Workers: {1}, Scope: {2}).</target>
        <note></note>
      </trans-unit>
      <trans-unit id="InvalidParallelScopeValue">
        <source>Invalid value '{0}' specified for 'Scope'. Supported scopes are {1}.</source>
        <target state="translated">'Scope'에 대해 잘못된 값 '{0}'이(가) 지정되었습니다. 지원되는 범위는 {1}입니다.</target>
        <note>'Scope' is a setting name that shouldn't be localized.</note>
      </trans-unit>
      <trans-unit id="InvalidParallelWorkersValue">
        <source>Invalid value '{0}' specified for 'Workers'. The value should be a non-negative integer.</source>
        <target state="translated">'Workers'에 대해 잘못된 값 '{0}'이(가) 지정되었습니다. 이 값은 음수가 아닌 정수여야 합니다.</target>
        <note>`Workers` is a setting name that shouldn't be localized.</note>
      </trans-unit>
      <trans-unit id="TestAssembly_AssemblyDiscoveryFailure">
        <source>Failed to discover tests from assembly {0}. Reason:{1}</source>
        <target state="translated">어셈블리 {0}에서 테스트를 검색하지 못했습니다. 이유:{1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_TestMethodExpectedParameters">
        <source>Only data driven test methods can have parameters. Did you intend to use [DataRow] or [DynamicData]?</source>
        <target state="translated">데이터 기반 테스트 메서드에만 매개 변수를 포함할 수 있습니다. [DataRow] 또는 [DynamicData]을(를) 사용하려고 했습니까?</target>
        <note></note>
      </trans-unit>
      <trans-unit id="Execution_Test_Cancelled">
        <source>Test '{0}' execution has been aborted.</source>
        <target state="translated">테스트 '{0}' 실행이 중단되었습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="InvalidClassCleanupLifecycleValue">
        <source>Invalid value '{0}' specified for 'ClassCleanupLifecycle'. Supported scopes are {1}.</source>
        <target state="translated">'ClassCleanupLifecycle'에 대해 '{0}' 잘못된 값이 지정되었습니다. 지원되는 범위는 {1}입니다.</target>
        <note>'ClassCleanupLifecycle' is a setting name that shouldn't be localized.</note>
      </trans-unit>
      <trans-unit id="CannotEnumerateIDataSourceAttribute">
        <source>Exception occurred while enumerating IDataSource attribute on "{0}.{1}": {2}</source>
        <target state="translated">"{0}.{1}"에서 IDataSource 특성을 열거하는 동안 예외가 발생했습니다. {2}</target>
        <note>{0}: TypeName with namespace,
{1}: Method name,
{2}: Exception details</note>
      </trans-unit>
      <trans-unit id="ExceptionOccuredWhileGettingTheExceptionDescription">
        <source>"{0}": (Failed to get exception description due to an exception of type "{1}".</source>
        <target state="translated">"{0}": ("{1}" 형식의 예외로 인해 예외 설명을 가져오지 못했습니다.</target>
        <note>{0}: Type of the original exception that we're trying to get the description of.
{1}: Thrown exception</note>
      </trans-unit>
      <trans-unit id="ExceptionsThrown">
        <source>Exceptions thrown:</source>
        <target state="translated">예외 발생:</target>
        <note>This is usually precedes by TestAssembly_AssemblyDiscoveryFailure message, and preceded by list of exceptions thrown in a test discovery session.</note>
      </trans-unit>
      <trans-unit id="FailedFetchAttributeCache">
        <source>Failed to get attribute cache. Ignoring attribute inheritance and falling into 'type defines Attribute model', so that we have some data.</source>
        <target state="translated">특성 캐시를 가져오지 못했습니다. 일부 데이터가 있도록 특성 상속을 무시하고 'type defines Attribute model'로 바꿉니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="FailedToGetCustomAttribute">
        <source>Getting custom attributes for type {0} threw exception (will ignore and use the reflection way): {1}</source>
        <target state="translated">{0} 형식에 대한 사용자 지정 특성을 가져오는 데 예외가 발생했습니다(무시하고 리플렉션 방법 사용). {1}</target>
        <note>{0}: Attribute full type name.
{1}: Exception description</note>
      </trans-unit>
      <trans-unit id="OlderTFMVersionFound">
        <source>An older version of MSTestV2 package is loaded in assembly, test discovery might fail to discover all data tests if they depend on `.runsettings` file.</source>
        <target state="translated">이전 버전 MSTestV2 패키지가 어셈블리에 로드되어 테스트 검색이 '.runsettings' 파일에 종속된 경우 모든 데이터 테스트를 검색하지 못할 수 있습니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UTA_UserCodeThrewNullValueException">
        <source>The called code threw an exception that was caught, but the exception value was null</source>
        <target state="translated">호출된 코드에서 확인된 예외가 발생했지만 예외 값이 null입니다.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="OlderTFMVersionFoundClassCleanup">
        <source>An older version of MSTestV2 package is loaded in assembly, test cleanup methods might not run as expected. Please make sure all your test projects references MSTest packages newer then version 2.2.8.</source>
        <target state="translated">이전 버전 MSTestV2 패키지가 어셈블리에 로드되어 테스트 정리 메서드가 예상대로 실행되지 않을 수 있습니다. 모든 테스트 프로젝트가 2.2.8 이후 버전 MSTest 패키지를 참조하는지 확인하세요.</target>
        <note></note>
      </trans-unit>
      <trans-unit id="CannotExpandIDataSourceAttribute">
        <source>Exception occurred while expanding IDataSource rows from attribute on "{0}.{1}": {2}</source>
        <target state="translated">"{0}.{1}"의 특성에서 IDataSource 행을 확장하는 동안 예외가 발생했습니다. {2}</target>
        <note>{0}: TypeName with namespace, 
{1}: Method name,
{2}: CannotExpandIDataSourceAttribute_DuplicateDisplayName or CannotExpandIDataSourceAttribute_CannotSerialize</note>
      </trans-unit>
      <trans-unit id="CannotExpandIDataSourceAttribute_DuplicateDisplayName">
        <source>Display name "{2}" on indexes {0} and {1} are duplicate. Display names should be unique.</source>
        <target state="translated">{0} 및 {1} 인덱스의 "{2}" 표시 이름이 중복됩니다. 표시 이름은 고유해야 합니다.</target>
        <note>{0}, {1}: Zero based index if an element inside of an array
{2}: Test display name.</note>
      </trans-unit>
      <trans-unit id="CannotExpandIDataSourceAttribute_CannotSerialize">
        <source>Data on index {0} for "{1}" cannot be serialized. All data provided through "IDataSource" should be serializable. If you need to test non-serializable data sources, please make sure you add "TestDataSourceDiscovery" attribute on your test assembly and set the discovery option to "DuringExecution".</source>
        <target state="translated">"{1}"에 대한 {0} 인덱스의 데이터를 직렬화할 수 없습니다. "IDataSource"를 통해 제공된 모든 데이터를 직렬화할 수 있어야 합니다. 직렬화할 수 없는 데이터 원본을 테스트해야 하는 경우 테스트 어셈블리에 "TestDataSourceDiscovery" 특성을 추가하고 검색 옵션을 "DuringExecution"으로 설정하세요.</target>
        <note>{0}: Zero based index if an element inside of an array,
{1}: Test name</note>
      </trans-unit>
    </body>
  </file>
</xliff>