<Project>

  <!-- SDK top import -->
  <Import Project="Sdk.props" Sdk="MSBuild.Sdk.Extras" Condition=" '$(OS)' == 'Windows_NT' " />
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" Condition=" '$(OS)' != 'Windows_NT' " />

  <PropertyGroup>
    <TargetFrameworks Condition=" '$(OS)' == 'Windows_NT' ">netstandard2.0;$(NetFrameworkMinimum);$(SupportedNetFrameworks);$(UwpMinimum);$(WinUiMinimum)</TargetFrameworks>
    <TargetFrameworks Condition=" '$(OS)' != 'Windows_NT' ">$(SupportedNetFrameworks);netstandard2.0</TargetFrameworks>
    <ImplicitUsings>enable</ImplicitUsings>
    <UseAssemblyVersion14>true</UseAssemblyVersion14>
  </PropertyGroup>

  <PropertyGroup>
    <IsPackable>true</IsPackable>
    <NuspecFile Condition=" '$(OS)' == 'Windows_NT' ">MSTest.TestAdapter.nuspec</NuspecFile>
    <NuspecFile Condition=" '$(OS)' != 'Windows_NT' ">MSTest.TestAdapter.Linux.nuspec</NuspecFile>
    <NuspecBasePath>$(OutputPath)</NuspecBasePath>
    <PackageId>MSTest.TestAdapter</PackageId>
    <PackageTags>MSTest TestFramework TestAdapter VisualStudio Unittest MSTestV2 Microsoft</PackageTags>
    <PackageDescription>
      MSTest is Microsoft supported Test Framework.

      This package includes the adapter logic to discover and run tests. For access to the testing framework, install the MSTest.TestFramework package.

      Supported platforms:
      - .NET 4.6.2+
      - .NET Core 3.1+
      - .NET 6.0
      - .NET 6.0 Windows.18362+
      - UWP 10.0.16299
    </PackageDescription>
    <!-- Nothing in lib but that's expected -->
    <NoWarn>$(NoWarn);NU5127;NU5128</NoWarn>
  </PropertyGroup>

  <PropertyGroup>
    <RootNamespace>Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter</RootNamespace>
    <AssemblyName>Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter</AssemblyName>
    <DefineConstants>TRACE</DefineConstants>
    <!-- Force NuGet package dependencies to be copied to the output directory so we can embed AdapterUtilities in our NuGet. -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="$(RepoRoot)src\Adapter\MSTestAdapter.PlatformServices\MSTestAdapter.PlatformServices.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.TestPlatform.AdapterUtilities" />
    <PackageReference Include="Microsoft.TestPlatform.ObjectModel" />
    <PackageReference Include="Microsoft.Testing.Extensions.VSTestBridge" />
  </ItemGroup>

  <ItemGroup>
    <!-- API that is common to all frameworks that we build for. -->
    <AdditionalFiles Include="BannedSymbols.txt" />
    <AdditionalFiles Include="PublicAPI\uap10.0.16299\PublicAPI.Shipped.txt" Condition=" '$(TargetFramework)' == '$(UwpMinimum)' " />
    <AdditionalFiles Include="PublicAPI\uap10.0.16299\PublicAPI.Unshipped.txt" Condition=" '$(TargetFramework)' == '$(UwpMinimum)' " />
    <AdditionalFiles Include="PublicAPI\PublicAPI.Shipped.txt" Condition=" '$(TargetFramework)' != '$(UwpMinimum)' " />
    <AdditionalFiles Include="PublicAPI\PublicAPI.Unshipped.txt" Condition=" '$(TargetFramework)' != '$(UwpMinimum)' " />
    <Compile Update="Resources\Resource.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resource.resx</DependentUpon>
    </Compile>
    <EmbeddedResource Update="Resources\Resource.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resource.Designer.cs</LastGenOutput>
      <CustomToolNamespace>Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter</CustomToolNamespace>
      <SubType>Designer</SubType>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup Label="NuGet">
    <NuspecProperty Include="RepoRoot=$(RepoRoot)" />
    <NuspecProperty Include="ArtifactsBinDir=$(ArtifactsBinDir)" />
    <NuspecProperty Include="Configuration=$(Configuration)" />
    <NuspecProperty Include="TestingPlatformVersion=$(MicrosoftTestingPlatformVersion)" />
  </ItemGroup>

  <ItemGroup>
    <None Update="PACKAGE.md">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <!-- Insert the MSTestVersion.cs -->
  <PropertyGroup>
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="**/*.cs" Exclude="**/*.user; **/*.*proj; **/*.sln; **/*.vssscc" />
  </ItemGroup>
  <Target Name="InsertMSTestVersion" BeforeTargets="PrepareForBuild">
    <ItemGroup>
      <Compile Include="$(Compile);$(IntermediateOutputPath)/MSTestVersion.cs" />
    </ItemGroup>
  </Target>

  <!-- Version templating -->
  <ItemGroup>
    <PackageReference Include="Microsoft.DotNet.Build.Tasks.Templating" Version="$(MicrosoftDotNetBuildTasksTemplatingPackageVersion)" AllowExplicitReference="true" PrivateAssets="All" IsImplicitlyDefined="true" />
  </ItemGroup>
  <ItemGroup>
    <Compile Update="Resources\Resource.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resource.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <Target Name="GenerateMSTestVersionSourceFile" AfterTargets="PrepareForBuild">
    <PropertyGroup>
      <_TemplateProperties>Version=$(Version)</_TemplateProperties>
    </PropertyGroup>
    <ItemGroup>
      <_TemplateCsproj Include="$(MSBuildProjectDirectory)/MSTestVersion.cs.template" Destination="$(IntermediateOutputPath)/MSTestVersion.cs" />
    </ItemGroup>
    <GenerateFileFromTemplate TemplateFile="%(_TemplateCsproj.Identity)" OutputPath="%(_TemplateCsproj.Destination)" Properties="$(_TemplateProperties)">
      <Output TaskParameter="ResolvedOutputPath" ItemName="FileWrites" />
    </GenerateFileFromTemplate>
  </Target>

  <!-- SDK bottom import -->
  <Import Project="Sdk.targets" Sdk="MSBuild.Sdk.Extras" Condition=" '$(OS)' == 'Windows_NT' " />
  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" Condition=" '$(OS)' != 'Windows_NT' " />
</Project>
