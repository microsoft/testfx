<Project>

  <PropertyGroup>
    <EnableMSTestV2CopyResources Condition=" '$(EnableMSTestV2CopyResources)' == '' ">true</EnableMSTestV2CopyResources>
    <EnableMSTestRunner Condition=" '$(EnableMSTestRunner)' == '' ">false</EnableMSTestRunner>
    <IsTestingPlatformApplication>$(EnableMSTestRunner)</IsTestingPlatformApplication>
  </PropertyGroup>

  <!-- Override settings from Microsoft.Testing.Platform.MSBuild.targets that are imported before this file -->
  <PropertyGroup Condition=" $(IsTestingPlatformApplication) == 'True' ">
    <GenerateTestingPlatformConfigurationFile Condition=" '$(GenerateTestingPlatformConfigurationFile)' == '' " >True</GenerateTestingPlatformConfigurationFile>
    <GenerateTestingPlatformEntryPoint Condition=" '$(GenerateTestingPlatformEntryPoint)' == '' " >True</GenerateTestingPlatformEntryPoint>
  </PropertyGroup>
  <PropertyGroup Condition=" $(IsTestingPlatformApplication) != 'True' ">
    <GenerateTestingPlatformConfigurationFile />
    <GenerateTestingPlatformEntryPoint />
  </PropertyGroup>
  </PropertyGroup>
  <Target Name="OverrideTestingPlatformSettings"  Condition=" '$(EnableMSTestRunner)' == 'true' " BeforeTargets="Build">
    <ItemGroup>
      <AssemblyMetadata Remove="Microsoft.Testing.Platform.Application" />
    </ItemGroup>
  </Target>

  <ItemGroup>
    <!--
      !!! IMPORTANT !!!
      DO NOT CHANGE THE GUID, IT'S A WELL KNOWN EXTENSION POINT AND THIS EXTENSION NEEDS TO BE REGISTERED AT THE END
      WE HAVE CODE INSIDE THE TASK 'TestingPlatformEntryPoint' TO ENSURE THE ORDER OF THE REGISTRATION BASED ON THIS GUID
    -->
    <TestingPlatformBuilderHook Include="031F8871-2660-4208-8F6B-FC142B40ABFF" Condition=" $(GenerateTestingPlatformEntryPoint) == 'true' " >
      <DisplayName>MSTest</DisplayName>
      <TypeFullName>Microsoft.VisualStudio.TestTools.UnitTesting.TestingPlatformBuilderHook</TypeFullName>
    </TestingPlatformBuilderHook>
  </ItemGroup>

  <!-- Handle the coexistance between testing platform and Microsoft.NET.Test.Sdk  -->
  <PropertyGroup>
    <GenerateTestingPlatformEntryPoint Condition=" '$(GenerateTestingPlatformEntryPoint)' == '' ">$(EnableMSTestRunner)</GenerateTestingPlatformEntryPoint>
    <GenerateProgramFile Condition=" '$(EnableMSTestRunner)' == 'true' ">false</GenerateProgramFile>
    <DisableTestingPlatformServerCapability Condition=" '$(EnableMSTestRunner)' == 'false' or '$(EnableMSTestRunner)' == '' " >true</DisableTestingPlatformServerCapability>
  </PropertyGroup>

  <ItemGroup>
    <TestAdapterContent Include="$(MSBuildThisFileDirectory)Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.dll" Condition=" '$(EnableMSTestRunner)' != 'true' ">
      <Link>Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>False</Visible>
    </TestAdapterContent>
    <TestAdapterContent Include="$(MSBuildThisFileDirectory)Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.dll">
      <Link>Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>False</Visible>
    </TestAdapterContent>
    <TestAdapterContent Include="$(MSBuildThisFileDirectory)\Microsoft.TestPlatform.AdapterUtilities.dll">
      <Link>Microsoft.TestPlatform.AdapterUtilities.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>False</Visible>
    </TestAdapterContent>
  </ItemGroup>

  <ItemGroup>
    <!--
      Including `@(TestAdapterContent)` in the `None` ItemGroup to get the `CopyToOutputDirectory` behavior be default,
      package consumers can opt-out of this behavior by removing `@(TestAdapterContent)` from the `None` ItemGroup
      (i.e. `<None Remove="@(TestAdapterContent)" />`)
      -->
    <None Include="@(TestAdapterContent)" />
  </ItemGroup>

  <Choose>
    <!-- Avoid false warning about missing reference (msbuild bug) -->
    <!-- https://github.com/dotnet/msbuild/issues/9698#issuecomment-1945763467 -->
    <When Condition=" '$(EnableMSTestRunner)' == 'true' ">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter">
          <HintPath>$(MSBuildThisFileDirectory)Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.dll</HintPath>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>

  <Target Name="GetMSTestV2CultureHierarchy">
    <!--
      Only traversing 5 levels in the culture hierarchy. This is the maximum length for all cultures and should be sufficient
      to get to a culture name that maps to a resource folder we package.
      The root culture name for all cultures is invariant whose name is '' (empty) and the parent for invariant culture is
      invariant itself. (https://msdn.microsoft.com/library/system.globalization.cultureinfo.parent.aspx)
      So the below code should not break build in any case.
      -->
    <ItemGroup>
      <CurrentUICultureHierarchy Include="$([System.Globalization.CultureInfo]::CurrentUICulture.Name)" />
      <CurrentUICultureHierarchy Include="$([System.Globalization.CultureInfo]::CurrentUICulture.Parent.Name)"  Condition=" '$([System.Globalization.CultureInfo]::CurrentUICulture.Parent.Name)' != '' "/>
      <CurrentUICultureHierarchy Include="$([System.Globalization.CultureInfo]::CurrentUICulture.Parent.Parent.Name)"  Condition=" '$([System.Globalization.CultureInfo]::CurrentUICulture.Parent.Parent.Name)' != '' "/>
      <CurrentUICultureHierarchy Include="$([System.Globalization.CultureInfo]::CurrentUICulture.Parent.Parent.Parent.Name)"  Condition=" '$([System.Globalization.CultureInfo]::CurrentUICulture.Parent.Parent.Parent.Name)' != '' "/>
      <CurrentUICultureHierarchy Include="$([System.Globalization.CultureInfo]::CurrentUICulture.Parent.Parent.Parent.Parent.Name)"  Condition=" '$([System.Globalization.CultureInfo]::CurrentUICulture.Parent.Parent.Parent.Parent.Name)' != '' "/>
    </ItemGroup>
  </Target>

  <!-- Copy resources over to $(TargetDir) if this is a localized build. -->
  <Target Name="CopyMSTestV2Resources" BeforeTargets="PrepareForBuild" Condition=" '$(EnableMSTestV2CopyResources)' == 'true' " DependsOnTargets="GetMSTestV2CultureHierarchy">
    <ItemGroup>
      <MSTestV2ResourceFiles Include="$(MSBuildThisFileDirectory)..\_localization\%(CurrentUICultureHierarchy.Identity)\*resources.dll">
        <CultureString>%(CurrentUICultureHierarchy.Identity)</CultureString>
      </MSTestV2ResourceFiles>

      <Content Include="@(MSTestV2ResourceFiles)" Condition=" @(MSTestV2ResourceFiles) != '' ">
        <Link>%(MSTestV2ResourceFiles.CultureString)\%(Filename)%(Extension)</Link>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        <Visible>False</Visible>
      </Content>
    </ItemGroup>
  </Target>

</Project>
