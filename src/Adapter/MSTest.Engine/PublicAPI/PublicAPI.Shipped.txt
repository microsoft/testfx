#nullable enableMicrosoft.Testing.Framework.AssertFailedExceptionMicrosoft.Testing.Framework.AssertFailedException.AssertFailedException() -> voidMicrosoft.Testing.Framework.AssertFailedException.AssertFailedException(string! message) -> voidMicrosoft.Testing.Framework.AssertFailedException.AssertFailedException(string! message, System.Exception! ex) -> voidMicrosoft.Testing.Framework.Configurations.ConfigurationExtensionsMicrosoft.Testing.Framework.Configurations.IConfigurationMicrosoft.Testing.Framework.Configurations.IConfiguration.this[string! key].get -> string?Microsoft.Testing.Framework.Configurations.TestFrameworkConfigurationMicrosoft.Testing.Framework.Configurations.TestFrameworkConfiguration.MaxParallelTests.get -> intMicrosoft.Testing.Framework.Configurations.TestFrameworkConfiguration.TestFrameworkConfiguration(int maxParallelTests = 2147483647) -> voidMicrosoft.Testing.Framework.DynamicDataNameProviderMicrosoft.Testing.Framework.InternalUnsafeActionParameterizedTestNode<TData>Microsoft.Testing.Framework.InternalUnsafeActionParameterizedTestNode<TData>.Body.get -> System.Action<Microsoft.Testing.Framework.ITestExecutionContext!, TData>!Microsoft.Testing.Framework.InternalUnsafeActionParameterizedTestNode<TData>.Body.init -> voidMicrosoft.Testing.Framework.InternalUnsafeActionParameterizedTestNode<TData>.GetArguments.get -> System.Func<System.Collections.Generic.IEnumerable<TData>!>!Microsoft.Testing.Framework.InternalUnsafeActionParameterizedTestNode<TData>.GetArguments.init -> voidMicrosoft.Testing.Framework.InternalUnsafeActionParameterizedTestNode<TData>.InternalUnsafeActionParameterizedTestNode() -> voidMicrosoft.Testing.Framework.InternalUnsafeActionTaskParameterizedTestNode<TData>Microsoft.Testing.Framework.InternalUnsafeActionTaskParameterizedTestNode<TData>.Body.get -> System.Action<Microsoft.Testing.Framework.ITestExecutionContext!, TData>!Microsoft.Testing.Framework.InternalUnsafeActionTaskParameterizedTestNode<TData>.Body.init -> voidMicrosoft.Testing.Framework.InternalUnsafeActionTaskParameterizedTestNode<TData>.GetArguments.get -> System.Func<System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<TData>!>!>!Microsoft.Testing.Framework.InternalUnsafeActionTaskParameterizedTestNode<TData>.GetArguments.init -> voidMicrosoft.Testing.Framework.InternalUnsafeActionTaskParameterizedTestNode<TData>.InternalUnsafeActionTaskParameterizedTestNode() -> voidMicrosoft.Testing.Framework.InternalUnsafeActionTestNodeMicrosoft.Testing.Framework.InternalUnsafeActionTestNode.Body.get -> System.Action<Microsoft.Testing.Framework.ITestExecutionContext!>!Microsoft.Testing.Framework.InternalUnsafeActionTestNode.Body.init -> voidMicrosoft.Testing.Framework.InternalUnsafeActionTestNode.InternalUnsafeActionTestNode() -> voidMicrosoft.Testing.Framework.InternalUnsafeAsyncActionParameterizedTestNode<TData>Microsoft.Testing.Framework.InternalUnsafeAsyncActionParameterizedTestNode<TData>.Body.get -> System.Func<Microsoft.Testing.Framework.ITestExecutionContext!, TData, System.Threading.Tasks.Task!>!Microsoft.Testing.Framework.InternalUnsafeAsyncActionParameterizedTestNode<TData>.Body.init -> voidMicrosoft.Testing.Framework.InternalUnsafeAsyncActionParameterizedTestNode<TData>.GetArguments.get -> System.Func<System.Collections.Generic.IEnumerable<TData>!>!Microsoft.Testing.Framework.InternalUnsafeAsyncActionParameterizedTestNode<TData>.GetArguments.init -> voidMicrosoft.Testing.Framework.InternalUnsafeAsyncActionParameterizedTestNode<TData>.InternalUnsafeAsyncActionParameterizedTestNode() -> voidMicrosoft.Testing.Framework.InternalUnsafeAsyncActionTaskParameterizedTestNode<TData>Microsoft.Testing.Framework.InternalUnsafeAsyncActionTaskParameterizedTestNode<TData>.Body.get -> System.Func<Microsoft.Testing.Framework.ITestExecutionContext!, TData, System.Threading.Tasks.Task!>!Microsoft.Testing.Framework.InternalUnsafeAsyncActionTaskParameterizedTestNode<TData>.Body.init -> voidMicrosoft.Testing.Framework.InternalUnsafeAsyncActionTaskParameterizedTestNode<TData>.GetArguments.get -> System.Func<System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<TData>!>!>!Microsoft.Testing.Framework.InternalUnsafeAsyncActionTaskParameterizedTestNode<TData>.GetArguments.init -> voidMicrosoft.Testing.Framework.InternalUnsafeAsyncActionTaskParameterizedTestNode<TData>.InternalUnsafeAsyncActionTaskParameterizedTestNode() -> voidMicrosoft.Testing.Framework.InternalUnsafeAsyncActionTestNodeMicrosoft.Testing.Framework.InternalUnsafeAsyncActionTestNode.Body.get -> System.Func<Microsoft.Testing.Framework.ITestExecutionContext!, System.Threading.Tasks.Task!>!Microsoft.Testing.Framework.InternalUnsafeAsyncActionTestNode.Body.init -> voidMicrosoft.Testing.Framework.InternalUnsafeAsyncActionTestNode.InternalUnsafeAsyncActionTestNode() -> voidMicrosoft.Testing.Framework.InternalUnsafeTestArgumentsEntry<TArguments>Microsoft.Testing.Framework.InternalUnsafeTestArgumentsEntry<TArguments>.Arguments.get -> TArgumentsMicrosoft.Testing.Framework.InternalUnsafeTestArgumentsEntry<TArguments>.DisplayNameFragment.get -> string?Microsoft.Testing.Framework.InternalUnsafeTestArgumentsEntry<TArguments>.InternalUnsafeTestArgumentsEntry(TArguments arguments, string! uidFragment, string? displayNameFragment = null) -> voidMicrosoft.Testing.Framework.InternalUnsafeTestArgumentsEntry<TArguments>.UidFragment.get -> string!Microsoft.Testing.Framework.ITestExecutionContextMicrosoft.Testing.Framework.ITestExecutionContext.AddTestAttachmentAsync(System.IO.FileInfo! file, string! displayName, string? description = null) -> System.Threading.Tasks.Task!Microsoft.Testing.Framework.ITestExecutionContext.CancellationToken.get -> System.Threading.CancellationTokenMicrosoft.Testing.Framework.ITestExecutionContext.CancelTestExecution() -> voidMicrosoft.Testing.Framework.ITestExecutionContext.CancelTestExecution(int millisecondsDelay) -> voidMicrosoft.Testing.Framework.ITestExecutionContext.CancelTestExecution(System.TimeSpan delay) -> voidMicrosoft.Testing.Framework.ITestExecutionContext.Configuration.get -> Microsoft.Testing.Framework.Configurations.IConfiguration!Microsoft.Testing.Framework.ITestExecutionContext.ReportException(System.Exception! exception, System.Threading.CancellationToken? timeoutCancellationToken = null) -> voidMicrosoft.Testing.Framework.ITestExecutionContext.TestInfo.get -> Microsoft.Testing.Framework.ITestInfo!Microsoft.Testing.Framework.ITestInfoMicrosoft.Testing.Framework.ITestInfo.DisplayName.get -> string!Microsoft.Testing.Framework.ITestInfo.Properties.get -> Microsoft.Testing.Platform.Extensions.Messages.IProperty![]!Microsoft.Testing.Framework.ITestInfo.StableUid.get -> Microsoft.Testing.Framework.TestNodeUid!Microsoft.Testing.Framework.ITestNodesBuilderMicrosoft.Testing.Framework.ITestNodesBuilder.BuildAsync(Microsoft.Testing.Framework.ITestSessionContext! testSessionContext) -> System.Threading.Tasks.Task<Microsoft.Testing.Framework.TestNode![]!>!Microsoft.Testing.Framework.ITestSessionContextMicrosoft.Testing.Framework.ITestSessionContext.AddTestAttachmentAsync(System.IO.FileInfo! file, string! displayName, string? description = null) -> System.Threading.Tasks.Task!Microsoft.Testing.Framework.ITestSessionContext.CancellationToken.get -> System.Threading.CancellationTokenMicrosoft.Testing.Framework.ITestSessionContext.Configuration.get -> Microsoft.Testing.Framework.Configurations.IConfiguration!Microsoft.Testing.Framework.TestApplicationBuilderExtensionsMicrosoft.Testing.Framework.TestNodeMicrosoft.Testing.Framework.TestNode.DisplayName.get -> string!Microsoft.Testing.Framework.TestNode.DisplayName.init -> voidMicrosoft.Testing.Framework.TestNode.OverriddenEdgeName.get -> string?Microsoft.Testing.Framework.TestNode.OverriddenEdgeName.init -> voidMicrosoft.Testing.Framework.TestNode.Properties.get -> Microsoft.Testing.Platform.Extensions.Messages.IProperty![]!Microsoft.Testing.Framework.TestNode.Properties.init -> voidMicrosoft.Testing.Framework.TestNode.StableUid.get -> Microsoft.Testing.Framework.TestNodeUid!Microsoft.Testing.Framework.TestNode.StableUid.init -> voidMicrosoft.Testing.Framework.TestNode.TestNode() -> voidMicrosoft.Testing.Framework.TestNode.Tests.get -> Microsoft.Testing.Framework.TestNode![]!Microsoft.Testing.Framework.TestNode.Tests.init -> voidMicrosoft.Testing.Framework.TestNodeUidMicrosoft.Testing.Framework.TestNodeUid.<Clone>$() -> Microsoft.Testing.Framework.TestNodeUid!Microsoft.Testing.Framework.TestNodeUid.Deconstruct(out string! Value) -> voidMicrosoft.Testing.Framework.TestNodeUid.Equals(Microsoft.Testing.Framework.TestNodeUid? other) -> boolMicrosoft.Testing.Framework.TestNodeUid.TestNodeUid(string! Value) -> voidMicrosoft.Testing.Framework.TestNodeUid.Value.get -> string!Microsoft.Testing.Framework.TestNodeUid.Value.init -> voidoverride Microsoft.Testing.Framework.TestNodeUid.Equals(object? obj) -> booloverride Microsoft.Testing.Framework.TestNodeUid.GetHashCode() -> intoverride Microsoft.Testing.Framework.TestNodeUid.ToString() -> string!static Microsoft.Testing.Framework.Configurations.ConfigurationExtensions.GetTestResultDirectory(this Microsoft.Testing.Framework.Configurations.IConfiguration! configuration) -> string!static Microsoft.Testing.Framework.DynamicDataNameProvider.GetUidFragment(string![]! parameterNames, object?[]! data, int index) -> string!static Microsoft.Testing.Framework.TestApplicationBuilderExtensions.AddTestFramework(this Microsoft.Testing.Platform.Builder.ITestApplicationBuilder! testApplicationBuilder, Microsoft.Testing.Framework.Configurations.TestFrameworkConfiguration? testFrameworkConfiguration = null, params Microsoft.Testing.Framework.ITestNodesBuilder![]! testNodesBuilder) -> voidstatic Microsoft.Testing.Framework.TestApplicationBuilderExtensions.AddTestFramework(this Microsoft.Testing.Platform.Builder.ITestApplicationBuilder! testApplicationBuilder, params Microsoft.Testing.Framework.ITestNodesBuilder![]! testNodesBuilder) -> voidstatic Microsoft.Testing.Framework.TestNodeUid.implicit operator Microsoft.Testing.Framework.TestNodeUid!(string! value) -> Microsoft.Testing.Framework.TestNodeUid!static Microsoft.Testing.Framework.TestNodeUid.operator !=(Microsoft.Testing.Framework.TestNodeUid? left, Microsoft.Testing.Framework.TestNodeUid? right) -> boolstatic Microsoft.Testing.Framework.TestNodeUid.operator ==(Microsoft.Testing.Framework.TestNodeUid? left, Microsoft.Testing.Framework.TestNodeUid? right) -> bool
