# Branch(es) that trigger(s) build(s) on PR
pr:
  branches:
    include:
    - main
    - rel/*
  paths:
    exclude:
      - .github/*
      - .devcontainer/*
      - docs/*
      - .markdownlint.json
      - .markdownlintignore
      - CODE_OF_CONDUCT.md
      - CONTRIBUTING.md
      - README.md
      - SECURITY.md
      - src/**/*.xlf

parameters:
# This option should be used with caution. This is useful for unblocking circular deps issue with testanywhere
- name: SkipTests
  displayName: "Skip tests"
  type: boolean
  default: False

variables:
  # Cannot use key:value syntax in root defined variables
  - name: _TeamName
    value: MSTest
  - name: _RunAsInternal
    value: False
  - name: _RunAsPublic
    value: True

stages:

- stage: build
  displayName: Build
  jobs:

  - template: /eng/common/templates/jobs/jobs.yml
    parameters:
      enableMicrobuild: true
      enablePublishBuildArtifacts: true
      enablePublishTestResults: true
      testResultsFormat: 'vstest'
      enablePublishBuildAssets: true
      enablePublishUsingPipelines: true
      enableTelemetry: true
      jobs:
      - job: Windows
        timeoutInMinutes: 90
        pool:
          name: NetCore-Public
          demands: ImageOverride -equals windows.vs2022preview.amd64.open
        strategy:
          matrix:
            Release:
              _BuildConfig: Release
            Debug:
              _BuildConfig: Debug
        steps:
        - task: PowerShell@2
          displayName: 'Install Windows SDK'
          inputs:
            targetType: filePath
            filePath: './eng/install-windows-sdk.ps1'
            failOnStderr: true
            showWarnings: true

        - task: PowerShell@2
          displayName: 'Install procdump'
          inputs:
            targetType: filePath
            filePath: ./eng/install-procdump.ps1
            failOnStderr: true
            showWarnings: true

        # This is required for DataSourceTests
        # Otherwise, the tests will fail with:
        # The unit test adapter failed to connect to the data source or to read the data. For more information on troubleshooting this error, see "Troubleshooting Data-Driven Unit Tests" (http://go.microsoft.com/fwlink/?LinkId=62412) in the MSDN Library. Error details: The 'Microsoft.Ace.OLEDB.12.0' provider is not registered on the local machine.
        #     at Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.TestDataSource.GetData(ITestMethod testMethodInfo, ITestContext testContext) in /_/src/Adapter/MSTestAdapter.PlatformServices/Services/TestDataSource.cs:84
        # The direct download link originates from https://www.microsoft.com/en-us/download/details.aspx?id=54920&msockid=01fa77be234c617f31936293223560aa
        - task: PowerShell@2
          displayName: 'Install Access Database Engine'
          run : |
              Invoke-RestMethod https://download.microsoft.com/download/3/5/C/35C84C36-661A-44E6-9324-8786B8DBE231/accessdatabaseengine_X64.exe -OutFile ./accessdatabaseengine_X64.exe
              Start-Process ./accessdatabaseengine_X64.exe -Wait -ArgumentList "/quiet /passive /norestart"

        - script: eng\common\CIBuild.cmd
            -configuration $(_BuildConfig)
            -prepareMachine
            /p:Test=false
            /p:FastAcceptanceTest=true
          name: Build
          displayName: Build

        - ${{ if eq(parameters.SkipTests, False) }}:
          # -ci is allowing to import some environment variables and some required configurations
          # -nobl avoids overwriting build binlog with binlog from tests
          - script: Test.cmd
              -configuration $(_BuildConfig)
              -ci
              -nobl
            name: Test
            displayName: Test

          # Upload code coverage data
          - script: $(Build.SourcesDirectory)/.dotnet/dotnet msbuild -restore
              eng/CodeCoverage.proj
              /p:Configuration=$(_BuildConfig)
              /bl:$(BUILD.SOURCESDIRECTORY)\artifacts\log\$(_BuildConfig)\CodeCoverage.binlog
            displayName: Upload coverage to codecov.io
            condition: and(succeeded(), eq(variables._BuildConfig, 'Debug'))

          # This step is only helpful for diagnosing some issues with vstest/test host that would not appear
          # through the console or trx
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Test Results folders'
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)/artifacts/TestResults/$(_BuildConfig)'
              ArtifactName: TestResults
            condition: failed()

      - job: Linux
        timeoutInMinutes: 90
        pool:
          name: NetCore-Public
          demands: ImageOverride -equals build.ubuntu.2004.amd64.open
        strategy:
          matrix:
            Release:
              _BuildConfig: Release
            Debug:
              _BuildConfig: Debug
        steps:
        - script: eng/common/cibuild.sh
            -configuration $(_BuildConfig)
            -prepareMachine
            /p:Test=false
            /p:NonWindowsBuild=true
            /p:FastAcceptanceTest=true
          displayName: Build

        - ${{ if eq(parameters.SkipTests, False) }}:
          # --ci is allowing to import some environment variables and some required configurations
          # --nobl avoids overwriting build binlog with binlog from tests
          - script: |
              chmod +x ./test.sh
              ./test.sh --configuration $(_BuildConfig) --ci --test --integrationTest --nobl
            name: Test
            displayName: Tests
