trigger:
  branches:
    include:
    - main
    - rel/*

# Branch(es) that trigger(s) build(s) on PR
pr:
  branches:
    include:
    - main
    - rel/*
    - dev/v4
  paths:
    exclude:
      - .github/*
      - .devcontainer/*
      - docs/*
      - .markdownlint.json
      - .markdownlintignore
      - CODE_OF_CONDUCT.md
      - CONTRIBUTING.md
      - README.md
      - SECURITY.md
      - src/**/*.xlf

parameters:
# This option should be used with caution. This is useful for unblocking circular deps issue with testanywhere
- name: SkipTests
  displayName: "Skip tests"
  type: boolean
  default: False

variables:
  # Cannot use key:value syntax in root defined variables
  - name: _TeamName
    value: MSTest
  - name: _RunAsInternal
    value: False
  - name: _RunAsPublic
    value: True

stages:

- stage: BuildAndPack
  displayName: Build and Pack
  jobs:
  - template: /eng/common/templates/jobs/jobs.yml
    parameters:
      enableMicrobuild: true
      enablePublishBuildArtifacts: true
      enablePublishTestResults: false
      enablePublishBuildAssets: true
      enablePublishUsingPipelines: true
      enableTelemetry: true
      jobs:
      - job: Windows_BuildAndPack
        displayName: Windows Build and Pack
        timeoutInMinutes: 90
        pool:
          name: NetCore-Public
          demands: ImageOverride -equals windows.vs2022preview.amd64.open
        steps:
        - task: PowerShell@2
          displayName: 'Install Windows SDK'
          inputs:
            targetType: filePath
            filePath: './eng/install-windows-sdk.ps1'
            failOnStderr: true
            showWarnings: true

        - task: PowerShell@2
          displayName: 'Install procdump'
          inputs:
            targetType: filePath
            filePath: ./eng/install-procdump.ps1
            failOnStderr: true
            showWarnings: true

        - task: PowerShell@2
          displayName: 'Install Access Database Engine'
          inputs:
            targetType: filePath
            filePath: ./eng/install-access-database-engine.ps1
            failOnStderr: true
            showWarnings: true

        # Build only production projects, no tests
        - script: eng\common\CIBuild.cmd
            -configuration Release
            -prepareMachine
            /p:Publish=false
            /p:ProductsToBuild=all
            /p:Test=false
          name: BuildAndPack
          displayName: Build and Pack

        - task: PublishBuildArtifacts@1
          displayName: 'Publish NuGet packages for testing'
          inputs:
            PathtoPublish: '$(Build.SourcesDirectory)/artifacts/packages/Release'
            ArtifactName: 'NuGetPackages'
          condition: always()

- template: /eng/test-stage-template.yml
  parameters:
    stageName: TestWindows
    displayName: Test Windows
    os: Windows
    skipTests: ${{ parameters.SkipTests }}
    pool:
      name: NetCore-Public
      demands: ImageOverride -equals windows.vs2022preview.amd64.open

- template: /eng/test-stage-template.yml
  parameters:
    stageName: TestLinux
    displayName: Test Linux
    os: Linux
    skipTests: ${{ parameters.SkipTests }}
    solutionFile: NonWindowsTests.slnf
    pool:
      name: NetCore-Public
      demands: ImageOverride -equals build.ubuntu.2004.amd64.open

- template: /eng/test-stage-template.yml
  parameters:
    stageName: TestMacOS
    displayName: Test macOS
    os: macOS
    skipTests: ${{ parameters.SkipTests }}
    solutionFile: NonWindowsTests.slnf
    pool:
      name: Azure Pipelines
      vmImage: macos-latest
      os: macOS
