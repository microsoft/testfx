<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Import localization specific Targets if enabled. -->
  <Import Project="$(MSBuildThisFileDirectory)TestFx.Loc.props" Condition=" '$(IsTest)' == 'false' and '$(IsLocalizationEnabled)' == 'true' "/>
  <Import Project="$(RepoRoot)scripts\build\TestFx.Sign.targets" Condition=" '$(TestFxSigningTargetsImported)' != 'true' " />

  <!-- StyleCop settings. -->
  <!-- TODO: Re-enable Stylecop analyzers in repo
  <ItemGroup Condition=" '$(ShouldEnableStyleCop)' != 'false' and '$(IsVsixProj)' != 'true'">
    <AdditionalFiles Include="$(RepoRoot)scripts\build\stylecop.json">
      <Link>stylecop.json</Link>
    </AdditionalFiles>

    <Analyzer Include="$(NuGetPackageRoot)\StyleCop.Analyzers\$(StyleCopAnalyzersVersion)\analyzers\dotnet\cs\Newtonsoft.Json.dll" />
    <Analyzer Include="$(NuGetPackageRoot)\StyleCop.Analyzers\$(StyleCopAnalyzersVersion)\analyzers\dotnet\cs\StyleCop.Analyzers.CodeFixes.dll" />
    <Analyzer Include="$(NuGetPackageRoot)\StyleCop.Analyzers\$(StyleCopAnalyzersVersion)\analyzers\dotnet\cs\StyleCop.Analyzers.dll" />
  </ItemGroup>-->

  <!-- WARNING remove this when SDK-style project conversion is being done. -->
  <!--
       We are generating an AssemblyInfo file with certain attributes here,
       SDK-style project does that automatically (https://github.com/dotnet/sdk/blob/58e663374580ef082a82f7cb75ea233275d432cd/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.GenerateAssemblyInfo.targets)
       we should use that behavior instead.

       WE SHOULD ENSURE WE ARE SETTING THESE PROPERTIES AS SPECIFIED BELOW,
       OTHERWISE IT WILL BREAK OUR TESTS.

            AssemblyVersion              = "14.0.0.0"
            AssemblyFileVersion          = "14.0.0.1"
            AssemblyInformationalVersion = "14.0.0.1"

       So if you E2E tests are failing, and you removed this comment,
       I hope you see it in diff.
  -->
  <!-- Generate AssemblyInfo.cs -->
  <PropertyGroup>
    <TFBuildNumber Condition=" '$(TFBuildNumber)' == '' ">0.1</TFBuildNumber>
    <MajorVersion>14.0</MajorVersion>
    <GeneratedAssemblyInfoFile Condition="'$(GeneratedAssemblyInfoFile)' ==''">$(IntermediateOutputPath)$(MSBuildProjectName).AssemblyInfo.cs</GeneratedAssemblyInfoFile>
    <Company>Microsoft Corporation</Company>
    <Copyright>© Microsoft Corporation. All rights reserved.</Copyright>
    <AssemblyVersion>$(MajorVersion).0.0</AssemblyVersion>
    <BuildVersion Condition=" '$(BuildVersion)' == '' ">$(MajorVersion).$(TFBuildNumber)</BuildVersion>
    <FileVersion Condition=" '$(FileVersion)' == '' ">$(BuildVersion)</FileVersion>
    <InformationalVersion>$(BuildVersion)+$(CommitId)</InformationalVersion>
  </PropertyGroup>

  <ItemGroup>
    <!-- Not including branch name assemblies for now. -->
    <!-- <AssemblyMetadata Include="Branch" Value="$(BranchName)" /> -->
    <AssemblyMetadata Include="Commit" Value="$(CommitHash)" />
  </ItemGroup>

  <ItemGroup Condition=" '$(GenerateAssemblyInfo)' == 'false' ">
    <AssemblyAttribute Include="System.Reflection.AssemblyCompanyAttribute" Condition="'$(Company)' != '' and '$(GenerateAssemblyCompanyAttribute)' == 'true'">
      <_Parameter1>$(Company)</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Reflection.AssemblyCopyrightAttribute" Condition="'$(Copyright)' != '' and '$(GenerateAssemblyCopyrightAttribute)' == 'true'">
      <_Parameter1>$(Copyright)</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Reflection.AssemblyVersionAttribute" Condition="'$(AssemblyVersion)' != ''">
      <_Parameter1>$(AssemblyVersion)</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Reflection.AssemblyFileVersionAttribute" Condition="'$(FileVersion)' != ''">
      <_Parameter1>$(FileVersion)</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Reflection.AssemblyInformationalVersionAttribute" Condition="'$(InformationalVersion)' != ''">
      <_Parameter1>$(InformationalVersion)</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute" Condition="'$(GenerateRepositoryUrlAttribute)' != 'true'" >
      <_Parameter1>RepositoryUrl</_Parameter1>
      <_Parameter2 Condition="'$(RepositoryUrl)' != ''">$(RepositoryUrl)</_Parameter2>
      <_Parameter2 Condition="'$(RepositoryUrl)' == ''">$(PrivateRepositoryUrl)</_Parameter2>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Reflection.AssemblyMetadata" Condition="'$(GenerateAssemblyMetadataAttributes)' != 'true'">
        <_Parameter1>%(AssemblyMetadata.Identity)</_Parameter1>
        <_Parameter2>%(AssemblyMetadata.Value)</_Parameter2>
    </AssemblyAttribute>
  </ItemGroup>

  <Target Name="GenerateAssemblyInfoFile" Condition=" '$(GenerateAssemblyInfo)' == 'false' ">
    <ItemGroup>
      <!-- Ensure the generated assemblyinfo file is not already part of the Compile sources, as a workaround for https://github.com/dotnet/sdk/issues/114 -->
      <Compile Remove="$(GeneratedAssemblyInfoFile)" />
    </ItemGroup>

    <WriteCodeFragment AssemblyAttributes="@(AssemblyVersionAttribute)" Language="C#" OutputFile="$(GeneratedAssemblyInfoFile)">
      <Output TaskParameter="OutputFile" ItemName="Compile" />
      <Output TaskParameter="OutputFile" ItemName="FileWrites" />
    </WriteCodeFragment>
  </Target>
  <!-- / WARNING remove this when SDK-style project conversion is being done. -->
</Project>
