<Project>
  <PropertyGroup>
    <RepoRoot Condition=" '$(RepoRoot)' == '' ">$([MSBuild]::NormalizeDirectory('$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), 'LICENSE'))'))</RepoRoot>

    <!-- 'IsRunningFromVisualStudio' may be true even when running msbuild.exe from command line. This generally means that MSBuild is from a Visual Studio installation and therefore we need to find NuGet.targets in a different location. -->
    <_NuGetRestoreTargets Condition="Exists('$(MSBuildToolsPath)\NuGet.targets')" >$(MSBuildToolsPath)\NuGet.targets</_NuGetRestoreTargets>
    <_NuGetRestoreTargets Condition="'$([MSBuild]::IsRunningFromVisualStudio())' == 'true' And Exists('$(MSBuildToolsPath32)\..\..\..\Common7\IDE\CommonExtensions\Microsoft\NuGet\NuGet.targets')">$(MSBuildToolsPath32)\..\..\..\Common7\IDE\CommonExtensions\Microsoft\NuGet\NuGet.targets</_NuGetRestoreTargets>
  </PropertyGroup>

  <Import Project="$(RepoRoot)eng\Versions.props" />

  <!-- 
    Prevent NuGet from using cached packages 
    Workaround for https://github.com/NuGet/Home/issues/3116
  -->
  <PropertyGroup>
    <RestoreNoCache Condition=" '$(ContinuousIntegrationBuild)' == 'true' ">true</RestoreNoCache>
  </PropertyGroup>

  <!-- Properties requires by NuGet.targets to restore PackageReferences -->
  <PropertyGroup>
    <TargetFramework>net472</TargetFramework>
    <!-- Workaround changes from newer MSBuild requiring additional properties --> 
    <TargetFrameworkVersion Condition=" '$(TargetFrameworkVersion)' == '' ">5</TargetFrameworkVersion>
    <TargetFrameworkIdentifier  Condition=" '$(TargetFrameworkIdentifier)' == '' ">.NETFramework</TargetFrameworkIdentifier>
    <TargetFrameworkMoniker Condition=" '$(TargetFrameworkMoniker)' == '' ">.NETFramework,Version=v4.7.2</TargetFrameworkMoniker> 
    <OutputPath>$(RepoRoot)artifacts\toolset\</OutputPath>
    <MSBuildProjectExtensionsPath>$(OutputPath)</MSBuildProjectExtensionsPath>
  </PropertyGroup>

  <!-- 
    Configure NuGet Restore to use NuGet.config file in the repository root.
    We could drop a custom NuGet.config to the containing directory but it's simpler
    if we use the same config for all restore operations.
  -->
  <PropertyGroup>
    <RestoreConfigFile>$(RepoRoot)NuGet.config</RestoreConfigFile>
  </PropertyGroup>
  
  <Import Project="$(_NuGetRestoreTargets)" />
  <Import Project="$(RepoRoot)eng\Tools.props" />
</Project>