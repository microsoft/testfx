jobs:
- job:
  displayName: NuGet Validation
  dependsOn: setupMaestroVars
  pool:
    vmImage: 'windows-2019'
  variables:
    - name: AzDOProjectName
      value: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.AzDOProjectName'] ]
    - name: AzDOPipelineId
      value: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.AzDOPipelineId'] ]
    - name: AzDOBuildId
      value: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.AzDOBuildId'] ]
  steps:
    - task: DownloadBuildArtifacts@0
      displayName: Download Package Artifacts
      inputs:
        buildType: specific
        buildVersionToDownload: specific
        project: $(AzDOProjectName)
        pipeline: $(AzDOPipelineId)
        buildId: $(AzDOBuildId)
        artifactName: PackageArtifacts
        checkDownloadedFiles: true

    - task: PowerShell@2
      displayName: Validate
      inputs:
        targetType: inline
        script: |
          try {
            $ErrorActionPreference = 'Stop'
            Set-StrictMode -Version 2.0

            # `tools.ps1` requires $ci to be $true
            $ci = $true
            $disableConfigureToolsetImport = $true
            . ${Env:BUILD_SOURCESDIRECTORY}\eng\common\tools.ps1

            $ToolDestinationPath = "${Env:AGENT_BUILDDIRECTORY}\Extract\"
            $PackagesPath = "${Env:BUILD_ARTIFACTSTAGINGDIRECTORY}\PackageArtifacts\"
            $url = 'https://raw.githubusercontent.com/NuGet/NuGetGallery/3e25ad135146676bcab0050a516939d9958bfa5d/src/VerifyMicrosoftPackage/verify.ps1'

            New-Item -ItemType 'directory' -Path ${ToolDestinationPath} -Force

            Invoke-WebRequest $url -OutFile ${ToolDestinationPath}\verify.ps1 

            & ${ToolDestinationPath}\verify.ps1 ${PackagesPath}\*.nupkg
          } 
          catch {
            Write-Host $_.ScriptStackTrace
            Write-PipelineTelemetryError -Category 'NuGetValidation' -Message $_
            ExitWithExitCode 1
          }
