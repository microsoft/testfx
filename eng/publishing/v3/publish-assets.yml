parameters:
  artifactsPublishingAdditionalParameters: ''
  publishInstallersAndChecksums: true
  PromoteToChannelIds: ''
  symbolPublishingAdditionalParameters: ''
  buildQuality: 'daily'

jobs:
- job: publish_assets
  displayName: Publish Assets and Symbols
  dependsOn: setupMaestroVars
  timeoutInMinutes: 120
  variables:
    - group: DotNet-Symbol-Server-Pats
    - name: BARBuildId
      value: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.BARBuildId'] ]
    - name: IsStableBuild
      value: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.IsStableBuild'] ]
    - name: AzDOProjectName
      value: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.AzDOProjectName'] ]
    - name: AzDOPipelineId
      value: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.AzDOPipelineId'] ]
    - name: AzDOBuildId
      value: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.AzDOBuildId'] ]
    - name: AzDOAccount
      value: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.AzDOBuildAccount'] ]
  pool:
    vmImage: 'windows-2019'
  steps:
    - task: DownloadBuildArtifacts@0
      displayName: Download Build Assets
      continueOnError: true
      enabled: true
      inputs:
        buildType: specific
        buildVersionToDownload: specific
        project: $(AzDOProjectName)
        pipeline: $(AzDOPipelineId)
        buildId: $(AzDOBuildId)
        downloadType: 'specific'
        itemPattern: |
          AssetManifests/**
          BlobArtifacts/MergedManifest.xml
          PdbArtifacts/**
        downloadPath: '$(Build.ArtifactStagingDirectory)'

    - task: NuGetToolInstaller@1
      displayName: 'Install NuGet.exe'

    # This is necessary whenever we want to publish/restore to an AzDO private feed
    - task: NuGetAuthenticate@0
      displayName: 'Authenticate to AzDO Feeds'

    - task: PowerShell@2
      displayName: Enable cross-org publishing
      inputs:
        filePath: $(Build.SourcesDirectory)/eng/common/enable-cross-org-publishing.ps1
        arguments: -token $(dn-bot-dnceng-artifact-feeds-rw)

    - task: PowerShell@2
      displayName: Publish packages, blobs and symbols
      inputs:
        filePath: $(Build.SourcesDirectory)/eng/common/sdk-task.ps1
        arguments: -task PublishArtifactsInManifest -restore -msbuildEngine dotnet
          /p:PublishingInfraVersion=3
          /p:BARBuildId=$(BARBuildId)
          /p:TargetChannels='${{ parameters.PromoteToChannelIds }}'
          /p:IsInternalBuild=${{ and(ne(variables['System.TeamProject'], 'public'), contains(variables['Build.SourceBranch'], 'internal')) }}
          /p:NugetPath=$(NuGetExeToolPath)
          /p:MaestroApiEndpoint='$(MaestroApiEndPoint)'
          /p:BuildAssetRegistryToken='$(MaestroApiAccessToken)'
          /p:ManifestsBasePath='$(Build.ArtifactStagingDirectory)/AssetManifests/'
          /p:BlobBasePath='$(Build.ArtifactStagingDirectory)/BlobArtifacts/'
          /p:PackageBasePath='$(Build.ArtifactStagingDirectory)/PackageArtifacts/'
          /p:PublishInstallersAndChecksums=${{ parameters.publishInstallersAndChecksums }}
          /p:InstallersAzureAccountKey=$(dotnetcli-storage-key)
          /p:InternalInstallersAzureAccountKey=$(dotnetclimsrc-access-key)
          /p:ChecksumsAzureAccountKey=$(dotnetclichecksums-storage-key)
          /p:InternalChecksumsAzureAccountKey=$(dotnetclichecksumsmsrc-storage-key)
          /p:AzureDevOpsFeedsKey='$(dn-bot-dnceng-artifact-feeds-rw)'
          /p:AzureStorageTargetFeedPAT='$(dotnetfeed-storage-access-key-1)'
          /p:AkaMSClientId=$(akams-client-id)
          /p:AkaMSClientSecret=$(akams-client-secret)
          ${{ parameters.artifactsPublishingAdditionalParameters }}
          /p:PDBArtifactsBasePath='$(Build.ArtifactStagingDirectory)/PDBArtifacts/'
          /p:SymbolPublishingExclusionsFile='$(Build.SourcesDirectory)/eng/SymbolPublishingExclusionsFile.txt'
          ${{ parameters.symbolPublishingAdditionalParameters}}
          /p:MsdlToken=$(microsoft-symbol-server-pat)
          /p:SymWebToken=$(symweb-symbol-server-pat)
          /p:BuildQuality='${{ parameters.buildQuality }}'
          /p:AzdoApiToken='$(dn-bot-all-orgs-build-rw-code-rw)'
          /p:ArtifactsBasePath='$(Build.ArtifactStagingDirectory)/'
          /p:BuildId='$(AzDOBuildId)'
          /p:AzureDevOpsOrg='$(AzDOAccount)'
          /p:AzureProject='$(AzDOProjectName)'
          /p:UseStreamingPublishing='true'
    - template: /eng/common/templates/steps/publish-logs.yml
      parameters:
        StageLabel: '${{ parameters.stageName }}'
        JobLabel: 'AssetsPublishing'
